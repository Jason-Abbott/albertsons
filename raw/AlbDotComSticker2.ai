%!PS-Adobe-3.0 %%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 8.0.1%%For: (Albertson's ) (Albertson's)%%Title: (AlbDotComSticker2.ai)%%CreationDate: (11/13/01) (3:29 PM)%%BoundingBox: 10 -278 279 -10%%HiResBoundingBox: 10.5781 -277.6074 278.1729 -10.3296%%DocumentProcessColors: Cyan Magenta Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset AGM_Gradient 1.0 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI7_ImageSettings: 0%%DocumentCustomColors: (PANTONE 1345 CVC)%%+ (PANTONE Process Blue CVC)%%+ (PANTONE Reflex Blue CVC)%%CMYKCustomColor: 0 0.38 0.79 0 (PANTONE 716 CVC)%%+ 0 0.11 0.47 0 (PANTONE 1345 CVC)%%+ 0 0.11 0.51 1 (PANTONE Black CVC)%%+ 1 0.09 0 0.06 (PANTONE Process Blue CVC)%%+ 1 0.72 0 0.06 (PANTONE Reflex Blue CVC)%%CMYKProcessColor: 1 1 1 1 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 0 1 1 1 0 1 1 1 1 18 0 0 0 0 0 0 0 0 131071 -1%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 0 0 () %AI3_TemplateBox: 144.5 -144.5 144.5 -144.5%AI3_TileBox: -116.5273 -661.9463 459.4727 114.0537%AI3_DocumentPreview: None%AI5_ArtSize: 270 270%AI5_RulerUnits: 0%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: -91 43 2 1137 822 18 1 1 7 43 0 0%AI5_OpenViewLayers: 7%%PageOrigin:-116.5273 -661.9463%%AI3_PaperRect:-18 784 594 -8%%AI3_Margin:18 -8 -18 8%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI7_Thumbnail: 128 128 8%%BeginData: 23332 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF%0066000066330066660066990066CC0066FF009900009933009966009999%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333%3333663333993333CC3333FF3366003366333366663366993366CC3366FF%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033%6600666600996600CC6600FF6633006633336633666633996633CC6633FF%6666006666336666666666996666CC6666FF669900669933669966669999%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF%9933009933339933669933999933CC9933FF996600996633996666996699%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100%000011111111220000002200000022222222440000004400000044444444%550000005500000055555555770000007700000077777777880000008800%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF%524C45FD39FF846036141314131413605AAFFD71FF845A0D140D140D140D%140D140D140D143685FD6CFF85131413140D1413140D1413140D1413140D%14133684FD68FF84360D140D140D140D14070D060D060D06140D140D140D%140DA9FD64FFAF361413141314130E0729072907290729072907290D1413%1413141360AFFD61FF840D140D140D140607060701070607010706070107%0607010D07140D140D145AFD5EFFA9360D141314072F0729062907290629%0753282F072906290729062907140D14131436FD5CFF84140D140D140607%01070107012952A1C8CEC8C9C8CE7C77280701070107010706140D140DA9%FD59FF5A141314133007290729072952A7C8CEC8CEC8CEC8CEC8CEC8CEA6%590729072907290D1413141385FD57FF36140D140D07010706070159A0CE%C8CEC8CEC8CEC8CEC8CEC8CEC8CEC8AD52070607010706140D140D60A8FD%54FF3614131407290729062928A7C8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CE%C8CEC8CEA05307290629070E0D141336AFFD51FFAF0D140D140707010701%0752CEC8C9C8CEC8C9C8CEC8C9C8CEC8C9C8CEC8C9C8CEC8C9C87D060701%07010D0D140D36A8FD50FF141413140D290729072FA0CEC8CEC8CEC8CEC8%CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CE28290729072F13141336AF%FD4DFFAF0D140D14060706070159A6CEC8CEC8CEC8CEC8CEC8CEC8CEC8CE%C8CEC8CEC8CEC8CEC8CEC8CEC8CE5207060701070D140D14A8FD4BFFAF14%140D1407290629077DC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8%CEC8CEC8CEC8CEC8CEC8CE7C290729062F0D140D36FD4BFF0D140D140607%010701A7C8C9C8CEC8C9C8CEC8C9C8CEC8CEC8CEC8CEC8CEC8CEC8CEC8C9%C8CEC8C9C8CEC8C9A0290107010707140D36A9FD47FFAF13141314072907%2906CEC8CEC8CEC8CEC8CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9%CEC9CEC8CEC8CEC8CEA02F072907290D141336A8FD44FF84360D140D1406%07010706A7C8CEC8CEC8CEC8CEC8CEC8CEC8CEC9CEC8CEC9CEC8CEC9CEC8%CEC8CEC8CEC8CEC8CEC8CEC8CEA62F0107060707140D1436AFFD34FFAF60%856085608560856085606014140D1413140629072906ADC8CEC8CEC9CEC9%CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC8CEC9%CEC8CEC82F062907070D1413140D365A8560856085608560856085A9FD24%FFA9360D140D140D140D140D140D140D140D140D140607010706A1C8CEC8%CEC8CEC8CEC8CEC9CEC8CEC9CEC8CEC9CEC8CEC9CEC8CEC9CEC8CEC9CEC8%CEC8CEC8CEC8CEC8CEA0290107010706140D140D140D140D140D140D140D%140D1436FD23FF601314131413360D0E0D300D0E0D300D0E0D2907290729%07ADC9CEC9CEC9CEC9CEC9CECECEC9CECECEC9CECECEC9CECECEC9CECECE%C9CECECEC9CECECEC9CEC9CEC9CEC9CEA02907290729070E0D300D0E0D30%0D0E0D360D141314131436FD21FFAF0D140D140707010706070107060701%0706070107060706A7C8CEC8CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9%CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC8CEC8CEA02F060701%07060701070607010706070107060E0D140D14A8FD20FF84141314072907%29062907290629072906290729062953CEC9CEC9CEC9CEC9CEC9CEC9CEC9%CECECEC9CFCECEC9CFCECEC9CFCECEC9CFCECEC9CECECEC9CEC9CEC9CEC9%CEC9CEC9CEA67D07290629072906290729062907290629070E0D1413AFFD%20FF600D140D070107010701070107010701070107287DA0CEC8CEC8CEC9%CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9%CEC9CEC9CEC9CEC9CEC9CEC8CEC8CEC8CE762F0107010701070107010701%07010701140D1484FD20FF6014131407290753A0CEC8CEC8CEC8CEC8CEC8%CEC9CEC9CEC9CECECEC9CFCECEC9CFCECFC9CFCECFC9CFCECFC9CFCECFC9%CFCECFC9CFCECFC9CFCECFC9CFCECEC9CFCECEC9CECECEC9CEC9CEC9CEC8%CEC8CEC8CEC8CEC8CE522907290D1413AFFD20FF840D1407070129A6CEC8%CEC8CEC8CEC8CEC8CEC8CEC8CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CFC9%CEC9CFC9CEC9CFC9CEC9CFC9CEC9CFC9CEC9CFC9CEC9CEC9CEC9CEC9CEC9%CEC9CEC8CEC9CEC8CEC8CEC8CEC8CEC8CEC8CE280706070D1484FD20FF60%140D30072928CEC8CEC8CEC8CEC8CEC9CEC9CEC9CEC9CEC9CEC9CECECEC9%CFCECFC9CFCECFC9CFCECFC9CFCECFC9CFCECFC9CFCECFC9CFCECFC9CFCE%CFC9CFCECFC9CFCECEC9CEC9CEC9CEC9CEC8CEC8CEC8CEC8CEC8CEC85306%2907140DAFFD20FF840D140607012FC8CEC8C9C8CEC8C9C8CEC8CEC8CEC9%CEC9CEC9CEC9CEC9CEC9CFC9CEC9CFC9CFC9CFC9CFC9CFC9CFC9CFC9CFC9%CFC9CFC9CFC9CFC9CFC9CEC9CEC9CEC9CEC9CEC9CEC9CEC8CEC8CEC8CEC8%C9C8CEC8C9C8CE280701070D1484FD20FF60141330072928CEC8CEC8CEC8%CEC9CEC9CEC9CECECEC9CFCECFC9CFCECFC9CFCECFCECFCECFCECFCFCFCE%CFCFCFCECFCFCFCECFCFCFCECFCFCFCECFCECFCECFCECFC9CFCECFC9CFCE%CEC9CECECEC9CEC9CEC8CEC8CEC8CEC8530729071413AFFD20FF840D1406%07062FC8CEC8CEC8CEC8CEC8CEC9CEC9CEC9CEC9CEC9CEC9CFC9CEC9CFC9%CFC9CFC9CFC9CFC9CFC9CFC9CFC9CFC9CF7D8459AEC9CFC9CFC9CFC9CFC9%CFC9CEC9CFC9CEC9CEC9CEC9CEC9CEC8CEC8CEC8CEC8CEC8CE2807010D0D%1484FD20FF6014130E062928CEC8CEC8CEC8CEC9CEC9CEC9CEC9CFCECFC9%CFCECFC9CFCECFC9CFCFCFC9CFCFCF5936133635AECFCFCF8413140D1413%60C9CFCFCFC9CFCECFC9CFCECFC9CFCECFC9CFCECEC9CEC9CEC9CEC9CEC8%CEC8CEC8530729071413AFFD20FF600D140607012FC8C9C8CEC8CEC8CEC9%CEC9CEC9CEC9CEC9CEC9CFC9CFC9CFC9CFC9CFC9CFC9CF59140D1459600D%60A7840D847D360D140DCFC9CFC9CFC9CFC9CFC9CFC9CEC9CFC9CEC9CEC9%CEC9CEC9CEC8CEC8CEC8CEC8C9280701070D1484FD20FF6014130E072928%CEC8CEC9CEC9CECECEC9CFCECFC9CFCECFC9CFCECFCEFD0ACF84131460CF%CFCF846035CFCFCFAE141336FD08CFCECFCFCFCECFCECFC9CFCECFC9CFCE%CEC9CEC9CEC9CEC8CEC8530729071413AFFD20FF840D1407070153C8CEC8%CEC9CEC9CEC9CEC9CEC9CEC9CFC9CFC9CFC9CFC9CFC9CFC9CFCACFC9CFCA%600D145FAECAAE0D84CACFAE600D147ECFC9CFCACFC9CFC9CFC9CFC9CFC9%CFC9CEC9CFC9CEC9CEC9CEC9CEC9CEC8CEC8CE280706070D1484FD20FF60%140D30072928CEC9CEC9CEC9CEC9CECECEC9CFCECFC9CFCECFC9CFCFCFC9%FD0BCF606036365A3C5A363536136084FD0BCFC9CFCFCFC9CFCECFC9CFCE%CFC9CECECEC9CEC9CEC8CEC853062907140D85FD20FF840D140607012FC8%CEC8CEC8CEC9CEC9CEC9CEC9CFC9CFC9CFC9CFC9CFC9CFC9CFCACFC9CFCA%CFA184596059845984CAAE5960598459607DCFCACFC9CFCACFC9CFC9CFC9%CFC9CFC9CFC9CEC9CEC9CEC9CEC9CEC8CEC8CEC8CE280701070D145AFD20%FF5A141330072928CEC9CEC9CECECEC9CFCECFC9CFCECFCEFD10CFAF1314%1314131435FF6014131413141385FD12CFCECFCECFC9CFCECEC9CECECEC9%CEC953072907141336FD20FF360D140607062FC8CEC9CEC9CEC9CEC9CFC9%CEC9CFC9CFC9CFC9CFC9CFCACFCACFCFCFCACFCFCF7E140D140D140D36CA%840D140D140D1459CFCFCFCACFCFCFCACFCACFC9CFC9CFC9CFC9CFC9CFC9%CEC9CEC9CEC9CEC9CEC8CE520701070D140D85FD1EFFAF0D14130D062929%CEC9CEC9CEC9CFCECFC9CFCECFC9CFCFCFC9FD0CCFFFCFAE0D1413140D14%36FF601413140D141384CFFFFD0ECFC9CFCFCFC9CFCECFC9CFCECEC9CEC9%CEC9A707290614131413FD1EFF36140D140107017DC8CEC8CEC9CEC9CEC9%CEC9CFC9CFC9CFC9CFC9CFCACFC9CFCACFCACFCACFCACF7E140D140D140D%36CA600D140D140D1459CFCACFCACFCACFCACFCACFCACFC9CFC9CFC9CFC9%CFC9CFC9CEC9CEC9CEC9CEC9CEA007010706140D145AFD1CFF841413140D%290729A1CEC9CECECEC9CFCECFCECFCECFCEFD0CCFFFCFFFCFFFCFAF1314%1314131436FF6014131413141385CFFFCFFFCFFFCFCFCFFFFD0ACFCECFCE%CFC9CFCECFC9CFCECEC9CE532907290D14131484FD1AFFA8140D14070706%0706CEC9CEC9CEC9CEC9CFC9CFC9CFC9CFC9CFCACFC9CFCFCFCACFCFCFCA%CFCFCFCAFFCFCFCAFFCFCFCAFFCFCFCAFFCFCFCAFFCFCFCAFFCFCFCACFCF%CFCACFCFCFCACFCACFC9CFC9CFC9CFC9CEC9CFC9CEC9CEC9CEC8A7060701%0707140D145AFD18FFA9360D14130706290783C9CEC9CEC9CFCECFC9CFCE%CFC9FD0CCFFFCFFFCFFFCFFFCFAF3636356036365AFF8436356036363585%CFFFCFFFCFFFCFFFFD0ECFC9CFCECFC9CFCECEC9CEC9CEC97D072906290D%140D145AFD16FFA8140D1407070107012FC9CEC9CEC9CEC9CEC9CEC9CFC9%CFC9CFC9CFC9CFCACFCACFCACFCACFCACFCAFFCFCF7D140D140D140D36CA%840D140D140D1459FFCFCFCAFFCFCFCACFCACFCACFCACFC9CFCACFC9CFC9%CFC9CFC9CEC9CEC9CEC9CEC9CEC8530107010707140D1436FD15FF361314%133007290729A1CEC9CECECEC9CFCECFCEFD0CCFFFCFFFCFFFCFFFCFFFCF%FFCFAF13141314131435FF6014131413141385CFFFCFFFCFFFCFFFCFFFCF%FFFD0ACFCECFCECFCECFCECFC9CFCECEC9CEC959072907290D1413145AFD%12FFAF360D140D0D01070629A0CEC9CEC9CEC9CEC9CFC9CFC9CFC9CFC9CF%CACFCACFCFCFCACFCFCFCAFFCFCFCAFFCFFF84140D140D140D36CF840D14%0D140D1459FFCFFFCAFFCFCFCAFFCFCFCACFCFCFCACFCFCFC9CFC9CFC9CF%C9CFC9CFC9CEC9CEC9CEC8CEC8530107060707140D1484FD11FF6013140D%1407290629A1CEC9CEC9CEC9CFCECFC9CFCECFC9FD08CFFFCFCFCFFFCFFF%CFFFCFFFCFFFCFAF0D1413140D1436FF601413140D141385CFFFCFFFCFFF%CFFFCFFFCFFFCFFFFD0ACFC9CFCECFC9CFCECEC9CEC9CEC9CEC959062907%070714131484FD0FFF840D140D140107010776CEC8CEC9CEC9CEC9CEC9CE%C9CFC9CFC9CFCACFC9CFCACFCACFCACFCAFFCFCFCAFFCFFFCAFF84140D14%0D140D36CF600D140D140D1459FFCAFFCFFFCAFFCFCFCACFCACFCACFCACF%CACFCACFC9CFC9CFC9CFC9CEC9CEC9CEC9CEC9CEC8CEC82F010701070714%0D14A8FD0DFFAF131413140729072952CEC9CEC9CECECEC9CFCECFCEFD0C%CFFFCFFFCFFFCFFFCFFFCFFFCFFFFFAF13141314131436FF601413141314%1385CFFFFFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFFD0ACFCECFCECFC9CFCE%CEC9CEC9CEC853072907301314133CFD0DFF13140D140707010728CEC8CE%C9CEC9CEC9CEC9CFC9CFC9CFC9CFC9CFCACFCACFCFCFCACFCFCFCAFFCFFF%CFFFCFFFCFFF84140D140D140D36CF840D140D140D145FFFCFFFCFFFCFFF%CFFFCAFFCFCFCACFCFCFCACFCFCFC9CFC9CFC9CFC9CFC9CFC9CEC9CEC9CE%C8CEC8CEA0290607010E0D140D60FD0BFF5A1413140729072928CEC9CEC9%CEC9CEC9CFCECFC9CFCECFC9FD08CFFFCFFFCFFFCFFFCFFFCFFFCFFFFFFF%CFAF13140D14131435FF60140D1413140D85FFFFCFFFFFFFCFFFCFFFCFFF%CFFFCFFFFD0ACFC9CFCECFC9CFCECEC9CEC9CEC9CEC9CEA0290729061413%140D85FD09FF84140D140D07010701A1C8CEC8CEC8CEC9CEC9CEC9CEC9CF%C9CFC9CFCACFCACFCACFCACFCACFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFF%CAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFCFCAFFCFCFCACF%CACFCACFCACFC9CFC9CFC9CFC9CEC9CEC9CEC9CEC9CEC8CEC8C952070107%06140D140DFD09FF361314132F0729077DC8CEC9CEC9CECECEC9CFCECFCE%FD0CCFFFCFFFCFFFCFFFCFFFFFFFCFFD1BFFCFFFFFFFCFFFCFFFCFFFCFFF%CFFFFD08CFCECFCECFCECFC9CFCECEC9CEC9CEC8CE282907290D14131436%FD07FF840D140D140607012FC8CEC8CEC9CEC9CEC9CEC9CFC9CFC9CFC9CF%C9CFCACFCACFCFCFCAFFCFCFCAFFCFFFCFFFCFFFCFFFCFFFCFFFFFFFCFFF%FFFFCFFFFFFFCFFFFFFFCFFFCFFFCFFFCFFFCFFFCFFFCAFFCFCFCACFCFCF%CACFCFCFC9CFC9CFC9CFC9CFC9CFC9CEC9CEC9CEC8CEC8CEC8CE06070107%0D140D1484FD06FF1314131407290729A0CEC8CEC9CEC9CEC9CFCECFC9CF%CECFC9FD08CFFFCFFFCFFFCFFFCFFFCFFFCFFFFFFFCFFD17FFCFFFFFFFCF%FFCFFFCFFFCFFFCFFFFD0ACFC9CFCECFC9CFCECEC9CEC9CEC8CEC8CEC8A7%0729062F13140D36FD05FF5A140D140707010752C9C8CEC8CEC8CEC9CEC9%CEC9CEC9CFC9CFC9CFC9CFC9CFCACFCACFCACFCAFFCFFFCAFFCFFFCAFFCF%FFCAFFCFFFCAFFCFFFCFFFFFFFCFFFFFFFCAFFCFFFCAFFCFFFCAFFCFFFCA%FFCFFFCAFFCFCFCACFCACFCACFCACFC9CFC9CFC9CFC9CEC9CEC9CEC9CEC8%CEC8CEC8C9C82F010701140D140D85FD04FF361314132F072907CEC8CEC9%CEC9CECECEC9CFCECFCEFD0CCFFFCFFFCFFFCFFFCFFFFFFFCFFD1FFFCFFF%FFFFCFFFCFFFCFFFCFFFCFFFFD06CFCECFCECFC9CFCECEC9CECECEC9CEC8%CEC8CEA02907290714131436FFFFFF850D140D1406070159C8CEC8CEC8CE%C9CEC9CEC9CFC9CFC9CFC9CFC9CFCACFCACFCFCFCAFFCFCFCAFFCFFFCFFF%CFFFCFFFCFFFCFFFFFFFCFFFFFFF84FFA8FD05FFCFFFFFFFCFFFFFFFCFFF%CFFFCFFFCFFFCAFFCFCFCACFCFCFCACFCFCFC9CFC9CFC9CFC9CEC9CEC9CE%C9CEC9CEC8CEC8CEC8CE520701070D140D1484FFFF3614131407290729A0%CEC8CEC8CEC9CEC9CECECFC9CFCECFC9FD08CFFFCFFFCFFFCFFFCFFFCFFF%CFFD0EFF29A829A8FD0DFFCFAFFFFFCFFFCFFFCFFFCFFFCFFFFD0ACFC9CF%CECFC9CFCECEC9CEC9CEC8CEC8CEC8AD0729063013140D36FFA8140D140D%07010728C9C8CEC8CEC8CEC9CEC9CEC9CEC9CFC9CFC9CFC9CFC9CFCACFCA%CFCACFCAFFCFFFCAA92F7EA15453FF535A537E53FF297E2FFF29A829A929%7E7D5A53FF535AFF5A535ACF5429A97D7ECAFFCFCFCAFFCFCFCACFCACFCA%CFCACFC9CFC9CFC9CFC9CEC9CEC9CEC8CEC8CEC8CEC8C9C82F010701140D%140DFF851314131407290783C8CEC8CEC9CEC9CEC9CFCECFC9CFCECFCEFD%08CFFFCFFFCFFFCFFFCFFF075A7D29532953547E2F5A2FA82F7E5A7E54A8%29FF297E297E29A8292F7E2F842F7E535A7E29A8FFFFFFCFFFCFFFCFFFFD%0ACFCECFCECFC9CFCECEC9CEC9CEC8CEC8CEC8CE7C290729131413148436%140D1407070107A6CEC8CEC8CEC8CEC9CEC9CEC9CEC9CFC9CFC9CFCACFCA%CFCFCFCACFCFCFCAFFCFFF8329CFFF01FF7D2F29A929A829A929A8537E29%A801FF06FF01FF06A8015A7E2F837E5A7E53FF297ECFFFCFFFCAFFCFCFCA%CFCFCFCACFCACFC9CFC9CFC9CFC9CEC9CEC9CEC9CEC8CEC8CEC8CEC8CE06%07010E0D140D603613140D30072928CEC8CEC8CEC9CEC9CEC9CEC9CFCECF%C9FD0CCFFFCFFFCFFFCFFF295A7E292F2F8453A854A853A8542F297E2FA8%29A829FF29A929A9292F7E2FA9537E5A53535453FFCFFFCFFFCFFFCFFFCF%FFFD06CFC9CFCECFC9CFCECEC9CEC9CEC9CEC9CEC8CEC8CEC82F07290714%1314130D140D1406070153C8CEC8C9C8CEC8CEC8CEC9CEC9CFC9CFC9CFC9%CFC9CFCACFCACFCACFCAFFCFCFCAFFCFFF7DFFA77E7DFFA7A97DFF84FF28%A8A8FF7EFF84FF7EFF84FF7DFFA8A8A7A9A8A9A1FF7DA977FFCFFFCAFFCF%CFCACFCACFCACFCACFC9CFC9CFC9CFC9CEC9CEC9CEC9CEC9CEC8CEC8C9C8%CEC8C9280701070D140D141413141329072952CEC8CEC8CEC9CEC9CECECE%C9CFCECFCEFD08CFFFCFFFCFFFCFFFCFFFCFFFCFFD0CFF7EA8FD19FFCFFF%CFFFCFFFCFFFCFFFFD0ACFCECFCECFC9CFCECEC9CEC9CEC8CEC8CEC87D07%2907141314130D140D140107067DC8CEC8CEC8CEC9CEC9CEC9CEC9CFC9CF%C9CFC9CFC9CFCFCFCACFCFCFCAFFCFFFCAFFCFFFCFFFCFFFCFFFFFFFCFFD%0AFFA853FD0BFFCFFFCFFFCFFFCFFFCFFFCFCFCAFFCFCFCACFCFCFC9CFC9%CFC9CFC9CFC9CFC9CEC9CEC9CEC8CEC8CEC8CEC8CE520706070D140D1414%0D141307062952CEC8CEC8CEC9CEC9CEC9CECECFC9CFCECFC9FD08CFFFCF%FFCFFFCFFFCFFFFFFFCFFD11FF07A9FD10FFCFFFFFFFCFFFCFFFCFFFFD0A%CFC9CFCECFC9CFCECEC9CEC9CEC8CEC8CEC8CEC87D062907140D14130D14%0D1406070153C8C9C8CEC8CEC8CEC9CEC9CEC9CEC9CFC9CFC9CFC9CFC9CF%CACFCACFCACFCAFFCFFFCAFFCFFFCAFFCFFFCAFFFFFFCFFD04FFA80654A8%077EFD05FFCFFFFFFFCFFFCFFFCAFFCFFFCAFFCFFFCAFFCFCFCACFCACFCA%CFCACFC9CFC9CFC9CFC9CEC9CEC9CEC8CEC8CEC8CEC8C9C8CE520701070D%140D14361314130E072929CEC8CEC8CEC9CECECEC9CFCECFC9CFCECFCEFD%08CFFFCFFFCFFFCFFFCFFD11FF2F7E538407FD11FFCFFFFFFFCFFFCFFFCF%FFCFFFCFFFFD06CFCECFCECFC9CFCECEC9CEC9CEC9CEC8CEC8CEC82F0729%0D141314365A140D1407070107A6CEC8CEC8CEC8CEC9CEC9CEC9CEC9CFC9%CFC9CFCACFCACFCFCFCACFCFCFCAFFCFFFCFFFCFFFCFFFCFFFCFFD08FF5A%072F7E07FD0AFFCFFFFFFFCFFFCFFFCFFFCFFFCAFFCFCFCACFCFCFCACFCA%CFC9CFC9CFC9CFC9CEC9CEC9CEC9CEC8CEC8CEC8CEC8CE0607010E0D140D%608513140D14072906A7C8CEC8CEC9CEC9CEC9CEC9CFCECFC9CFCFCFCAFD%08CFFFCFFFCFFFCFFFCFFFFFFFCFFD0BFFA97EA8FF5AFD0FFFCFFFFFFFCF%FFCFFFCFFFCFFFCFFFFD06CFC9CFCECFC9CFCECEC9CEC9CEC9CEC9CEC8CE%C8CE7C2907290714131484A8140D140D07010728CEC8C9C8CEC8CEC8CEC9%CEC9CEC9CFC9CFC9CFC9CFCACFCACFCACFCACFCFCFCAFFCFFFCAFFCFFFCA%FFCFFFCAFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFCFFFCAFFCF%FFCAFFCFFFCAFFCFCFCACFCACFCACFCACFC9CFC9CFC9CFC9CEC9CEC9CEC9%CEC9CEC8CEC8C9C8CEC82F010706140D140DFFFF361413140D290729A6CE%C8CEC9CEC9CECECEC9CFCECFCEFD08CFFFCFFFCFFFCFFFCFFFCFFFCFFD27%FFCFFFCFFFCFFFCFFFCFFFFD08CFCECFCECFCECFC9CECECEC9CEC9CEC8CE%C8CE0729070E13141360FFFF850D140D1406070159C8CEC8CEC8CEC9CEC9%CEC9CFC9CFC9CFC9CFC9CFCACFCACFCFCFCAFFCFCFCAFFCFFFCFFFCFFFCF%FFFFFFCFFD13FFCFFFFFFFCFFFCFFFCFFFCFFFCAFFCFCFCACFCFCFCACFCF%CFC9CFC9CFC9CFC9CEC9CEC9CEC9CEC9CEC8CEC8CEC8CE520701070D140D%1484FFFFFF3613140D2F072906CEC8CEC8CEC9CEC9CECECEC9CFCECFC9FD%08CFFFCFFFCFFFCFFFCFFFCFFFCFFFFFFFCFFD1BFFCFFFFFFFCFFFCFFFCF%FFCFFFCFFFFD0ACFC9CFCECFC9CFCECEC9CEC9CEC8CEC8CEA02907290714%131413FD04FF84140D140607010728CEC8CEC8CEC9CEC9CEC9CEC9CFC9CF%C9CFC9CFC9CFA2A87DCFCACFCAFFCFCFCAFFCFFFCAFFCFFFCAFFCFFFCAFF%FFFFCFFFFFFFCFFFFFFFCFFFFFFFCAFFCFFFCAFFCFFFCAFFCFFFCAFFCFCF%CACFCACFCACFCACFC9CFC9CFC9CFC9CFC9CFC9CEC9CEC9CEC8CEC8C9C8CE%C82F0107010E0D140D84FD05FF3614131407290729A0CEC8CEC9CEC9CECE%CFC9CFCECFCEFD06CF5307292936CFFFCFFFCFFFCFFFCFFD23FFCFFFCFFF%CFFFCFFFCFFFFD0ACFCECFCECFC9CFCECEC9CEC9CEC8CEC8A70729072F13%141360FD06FF850D140D140607012FC8CEC8CEC9CEC9CEC9CEC9CFC9CFC9%CFC9CFC959060706140D36A8FFCFCFCAFFCFFFCFFFCFFFCFFFCFFFCFFFFF%FFCFFFFFFFCFFFFFFFCFFFFFFFCFFFFFFFCFFFCFFFCFFFCFFFCFFFCFCFCA%FFCFCFCACFCFCFCACFCACFC9CFC9CFC9CFC9CEC9CEC9CEC8CEC8CEC8CE06%0701070D140D1484FD07FF6013140D2F0729067DC8CEC9CEC9CEC9CFCECF%C9CFCECFC9CFCF7E062907A813141360CFFFCFFFCF853660CFAF36AF8485%FD16FFCFFFFFFFCFFFCFFFCFFFCFFFCFFFFD0ACFC9CFCECFC9CFCECEC9CE%C9CEC8CEC8CE2E290729071413145AFD08FFA8140D140607010701A7C8CE%C8CEC9CEC9CEC9CEC9CFC9CFC9A80107018406A80D140D60CAFFCFCF0D14%0DFF5914591459FFCFFFCAFFA8FFA1FFA85A0DFFCFFFCAFFCFAFA1FF84FF%7DFFCFFF7DFFCFCFCAA8A1CFA1CFCACFC9A8A1CF7CCFC9CFC9CFC9CEC9CE%C9CEC8CEC8CEC8CE7607010706140D1413FD0AFF601413140D29072929CE%C9CEC9CEC9CFCECFC9CFCECFCECF0729075A7D297DAF131413AFCFFFA814%5A148485138B133613AF603C146014143614131436141460603614366014%13145AAF133C13FFA82F07545329077E2F29072929292FCFCECFCECFC9CF%CECEC9CEC9CEC9CEA02907290714131413AFFD0BFF36140D140607010752%CEC8CEC9CEC9CEC9CEC9CFC9CF0607062F527E067D775A0D140DAFCF600D%600D6059145A143514351413600D360D60601459360D36591435840D8B0D%5A0D3684140D36CF5306A853077759062F067E06532807C9CFC9CFC9CEC9%CEC9CEC8CEC8CEA0290607010E0D140D84FD0DFF14140D140729062977CE%C9CEC9CEC9CFCECFC9CF592906297D29065407297D36131435FF13605A14%36850D8B1385356013141336361484AF1385843613360D60A9145A146036%0DAF361413AF2953CFA807A8A7292953CF29A87E06CFCECFC9CFCECEC9CE%C9CEC9CEC82F0629070D0D141336FD0EFFA90D140D14010701077CCEC8CE%C9CEC9CEC9CEC97E010701CF7D2F012F53CF35140D367D14A8CF0D143514%5314353659360D600D360DA97D143536351435140D600D5A0D8435140D36%3514525901530207292F062F29CF01A85207C9CFC9CEC9CEC9CEC8CEC8CE%C853010701070D140D36A9FD0FFF851314130E07290729A1CECECEC9CFCE%CFC9CFA75A2F5ACFCFCFA8CFCFCF85366084AF5AFFCF613660358B36605A%AFA98560AF6060A8FF6085846060AF84856085A88584AF6085606060A9A8%7E2F84A85A53CF597ECF53A8842FCFCECFC9CFCECEC9CEC9CEC959072907%2913141336AFFD11FF600D140D0D01070629A0CEC9CEC9CEC9CEC9CFC9CF%C9CFC9CFC9CFCFCFCACFCFCFCACFCFCFCAFFCFFFCAFFCFFFCFFFCFFFCFFF%CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFCFCAFFCFCFCACFCFCFCACFCFCF%C9CFCACFC9CFC9CFC9CFC9CEC9CEC9CEC9CEC8530107060707140D1484FD%13FF360D14130D06290729A1CEC9CEC9CFCECFC9CFCECFC9FD0BCF597ECF%A9CFFFCFFFCFFFCFFFCFFFCFFFCFFFFFFFCFFFFFFFCFFFCFA9A8FFCFFFA8%AFA8FFCFFFCFCFCFFFFD0ACFC9CFCECFC9CFCECEC9CEC9CEC95907290629%0D140D1484FD14FFA9360D140D070107012FC8CEC9CEC9CEC9CEC9CFC9CF%C9CFC9CFC9CFCACFCACFCA59297D29CFCAFFCFCFCAFFCFFFCAFFCFFF53FF%CFFFCAFFCFFFCA54060753FFA8A82954CFCFCACFCACF017ECACFC9CFC9CF%C9CFC9CFC9CFC9CEC9CEC9CEC9CEC8530107010706140D1484FD17FF3C13%14132F072907A7CECEC9CFCECFC9CFCECFCEFD0BCF595A29A907A9537E53%5453542F2F59A9072F7E2F59295A5AA8FF077E535407297E54075407A929%7ECFFFFD0ACFCECFCECFC9CFCECEC9CEC97D072907290D14131484FD18FF%A8140D140707060706CEC9CEC9CEC9CEC9CFC9CFC9CFC9CFC9CFCACFCACF%CF59292F5907A2A907292953065453FF532F295A295A295A537EA1292929%530759592907297D292907A8CACFCACFC9CFC9CFC9CFC9CFC9CFC9CEC9CE%C9CEC9A70607010707140D1484FD1AFF8414131407290729A1CEC9CEC9CF%CECFC9CFCECFC9FD09CF597E7DA97DCF7D7E7D85355A368584A883A9A8A8%A884CF7EA8A9A87E7DFF59A97E5359FD04A87E7DFD05CFCACFCFCFC9CFCE%CFC9CFCECEC9CEC9CE2F2907290714131484FD1CFF36140D140107017DC8%CEC9CEC9CEC9CEC9CFC9CFC9CFC9CFC9CFCACFC9CFCACFCACFA184356059%A8A1CFCFCFCAFFCFCFCAFFCFCFCAFFCFCFCACFCACFCACFCACFCACFCACFCA%CFCACFC9CFC9CFC9CFC9CFC9CFC9CEC9CEC9CEC8CEA007010706140D1460%FD1EFF1314132F072929CECECEC9CFCECFC9CFCECFCEFD0CCFFFCFCFCFFF%CFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFFFCFCFCFFFFD0A%CFCECFCFCFCECFCECFC9CFCECEC9CEC98307290714131436FD1FFF360D14%0607062FC8CEC9CEC9CEC9CEC9CFC9CFC9CFC9CFC9CFC9CFC9CFCACFCACF%CFCFCACFCFCFCACFCFCFCACFCFCFCACFCFCFCACFCFCFCACFCFCFCACFCFCF%CACFCFCFC9CFCACFC9CFC9CFC9CFC9CEC9CFC9CEC9CEC9CEC8CE52070107%0D140DAFFD1FFF5A14130E062929CEC9CEC9CEC9CECECFC9CFCECFC9CFCF%CFC9FD0CCFFFCFCFCFFFCFCFCFFFCFCFCFFFCFCFCFFFCFCFCFFFFD0ECFC9%CFCECFC9CFCECFC9CFCECEC9CEC9CEC953072907141336FD20FF600D1406%07012FC8CEC8CEC9CEC9CEC9CEC9CFC9CEC9CFC9CFC9CFC9CFC9CFCACFC9%CFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFCACFC9CFCA%CFC9CFC9CFC9CFC9CFC9CFC9CEC9CEC9CEC9CEC9CEC8CEC8CE280701070D%145AFD20FF6014130E072928CEC9CEC9CEC9CECECEC9CFCECFC9CFCECFCE%FD10CFFFCFCFCFFFCFCFCFFFCFCFCFFFFD12CFCECFCECFC9CFCECFC9CFCE%CEC9CEC9CEC853072907141385FD20FF840D1407070153C8CEC8CEC9CEC9%CEC9CEC9CEC9CEC9CFC9CFC9CFC9CFC9CFC9CFC9CFCACFCACFCFCFCACFCF%CFCACFCFCFCACFCFCFCACFCFCFCACFCACFC9CFCACFC9CFC9CFC9CFC9CFC9%CFC9CEC9CEC9CEC9CEC9CEC8CEC8CE280706070D1484FD20FF60140D3007%2928CEC8CEC9CEC9CEC9CECECEC9CFCECFC9CFCECFC9CFCFCFC9FD23CFC9%CFCFCFC9CFCECFC9CFCECEC9CEC9CEC9CEC9CEC8CEC853062907140DAFFD%20FF840D140607012FC8CEC8CEC8CEC9CEC9CEC9CEC9CEC9CEC9CFC9CFC9%CFC9CFC9CFC9CFC9CFC9CFC9CFCACFC9CFCACFC9CFCACFC9CFCACFC9CFC9%CFC9CFC9CFC9CFC9CFC9CFC9CEC9CFC9CEC9CEC9CEC9CEC9CEC8CEC8CEC8%CE280701070D1484FD20FF60141330072928CEC8CEC8CEC9CEC9CECECEC9%CFCECFC9CFCECFCECFCECFCEFD23CFCECFCECFC9CFCECFC9CFCECEC9CECE%CEC9CEC9CEC8CEC8530729071413AFFD20FF840D140607062FC8CEC8CEC8%CEC8CEC8CEC9CEC9CEC9CEC9CFC9CEC9CFC9CFC9CFC9CFC9CFC9CFC9CFC9%CFC9CFC9CFC9CFCACFC9CFC9CFC9CFC9CFC9CFC9CFC9CFC9CFC9CFC9CEC9%CEC9CEC9CEC9CEC9CEC9CEC8CEC8CEC8CE2807010D0D1484FD20FF601413%0E062929CEC8CEC8CEC8CEC9CEC9CEC9CEC9CECECEC9CFCECFC9CFCECFC9%CFCECFC9CFCFCFC9CFCFCFC9CFCFCFC9CFCFCFC9CFCFCFC9CFCFCFC9CFCE%CFC9CFCECFC9CFCECFC9CFCECEC9CEC9CEC9CEC9CEC8CEC8CEC853072907%1413AFFD20FF600D140707010776C9C8CEC8C9C8CEC8CEC8CEC9CEC9CEC9%CEC9CEC9CEC9CFC9CEC9CFC9CFC9CFC9CFC9CFC9CFC9CFC9CFC9CFC9CFC9%CFC9CFC9CFC9CFC9CFC9CEC9CFC9CEC9CEC9CEC9CEC9CEC8CEC8CEC8CEC8%C9C8CEC87D0107010D0D1484FD20FF601413140729072928532853285328%532953537DA1CECECEC9CFCECFC9CFCECFC9CFCECFCECFCECFCECFCFCFCE%CFCFCFCECFCFCFCECFCFCFCECFCECFCECFCECFC9CFCECFC9CFCECEC9CECE%CE77592953295328532853282F072907290D1413AFFD20FF850D140D0D01%07060701070607010706070107060728A7C9CEC9CEC9CEC9CEC9CEC9CFC9%CEC9CFC9CFC9CFC9CFC9CFC9CFC9CFC9CFC9CFC9CFC9CFC9CEC9CFC9CEC9%CEC9CEC9CEC9CE7D530607010706070107060701070607010707140D1484%FD20FFAF140D14130E062907290629072906290729062907290653C9CEC9%CECECEC9CFCECFC9CFCECFC9CFCECFC9CFCECFC9CFCECFC9CFCECFC9CFCE%CFC9CFCECFC9CFCECEC9CECECEC9CE532906290729062907290629072906%290729071413140DFD22FF36140D140D1406070607060706070607060701%070107012FA1CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CFC9CEC9CFC9%CEC9CFC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CE280701070107060706%07060706070607060D07140D140D60FD23FF5A1413141314131413141314%1314131413140D290729072FC9CECECEC9CFCECEC9CFCECFC9CFCECFC9CF%CECFC9CFCECFC9CFCECFC9CFCECFC9CFCECEC9CFCECEC9CECECE53290729%0730131413141314131413141314131413141361FD25FFA8AF84A984AF84%A984AF84855A360D140D14070701070653C8CEC9CEC9CEC9CEC9CEC9CEC9%CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CE53%070107060E0D140D14368484A984AF84A984AF84A984FD36FF60140D140D%0706290759A7CEC9CEC9CEC9CEC9CECECEC9CECECEC9CFCECEC9CFCECEC9%CECECEC9CECECEC9CEC9CEC9CEC9CE53290729061413141385FD45FFA836%0D1407070107012FA0CEC8CEC8CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CE%C9CEC9CEC9CEC9CEC9CEC8CEC9CEC8CE52070107010E0D1435AFFD48FF3C%13140D2907290753C9CEC9CEC9CEC9CECECEC9CECECEC9CECECEC9CECECE%C9CECECEC9CECECEC9CEC9CEC9CE292907290714131436FD4AFFA8360D14%070706070129A0CEC8CEC9CEC8CEC9CEC8CEC9CEC9CEC9CEC9CEC9CEC9CE%C9CEC8CEC9CEC8CEC8AD28070607010E0D1413FD4CFFAF36131407290729%06297DCEC8CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CEC9CE%C9CEC8A70729062907140D1436FD4EFFA8360D1406070107010752C9C8CE%C8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC87701070107%01140D1413FD51FF361314132F0729072928CEC8CEC8CEC9CEC8CEC9CEC9%CEC9CEC9CEC9CEC8CEC8CEC8CEA653072907290714131436FD52FFAF5A0D%140D0D01070607017DA6CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8CEC8%CE52290607010707140D145AFD55FF600D14131406290729062F7CCEC8CE%C8CEC8CEC8CEC8CEC8CEC8CEC8CEC8A7292906290707071413145AFD57FF%840D140D14060701070107067DC8CEC8C9C8CEC8C9C8CEC8C9C8CE7C2F01%070107010707140D1484FD5AFF361413140D2907290729072F52ADC8CEC8%CEC8CEC8CEA07D292907290729073013141336AFFD5CFF36140D140D0D01%070607010706292859527D5253060701070607010707140D140D60A8FD5E%FF84360D141314072907290629072906290729062907290629070D0D1413%1413AFFD61FFA9600D140D14070E06070107010701070107010701070614%0D140D145AFD65FFAF36141314131413360D2F0729072F07300D14131413%141360AFFD68FF84360D140D140D140D140D140D140D140D140D1436A9FD%6DFF5A3613140D1413140D1413140D141460A9FD71FFAF605A35140D140D%363684A8FD3AFFFF%%EndData%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)%%Version: 1.2 0%%CreationDate: (04/10/93) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)userdict /Adobe_level2_AI5 26 dict dup begin	put	/packedarray where not	{		userdict begin		/packedarray		{			array astore readonly		} bind def		/setpacking /pop load def		/currentpacking false def	 end		0	} if	pop	userdict /defaultpacking currentpacking put true setpacking	/initialize	{		Adobe_level2_AI5 begin	} bind def	/terminate	{		currentdict Adobe_level2_AI5 eq		{		 end		} if	} bind def	mark	/setcustomcolor where not	{		/findcmykcustomcolor		{			(AI8_CMYK_CustomColor)			6 packedarray		} bind def		/findrgbcustomcolor		{			(AI8_RGB_CustomColor)			5 packedarray		} bind def		/setcustomcolor		{			exch 			aload pop dup			(AI8_CMYK_CustomColor) eq			{				pop pop				4				{					4 index mul					4 1 roll				} repeat				5 -1 roll pop				setcmykcolor			}			{				dup (AI8_RGB_CustomColor) eq				{					pop pop					3					{						1 exch sub						3 index mul 						1 exch sub						3 1 roll					} repeat					4 -1 roll pop					setrgbcolor				}				{					pop					4					{						4 index mul 4 1 roll					} repeat					5 -1 roll pop					setcmykcolor				} ifelse			} ifelse		}		def	} if	/setAIseparationgray	{		false setoverprint		0 setgray		/setseparationgray where{			pop setseparationgray		}{			/setcolorspace where{				pop				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace				1 exch sub setcolor			}{				setgray			}ifelse		}ifelse	} def		/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put	userdict /level2?	systemdict /languagelevel known dup	{		pop systemdict /languagelevel get 2 ge	} if	put/level2ScreenFreq{ begin		60		HalftoneType 1 eq		{			pop Frequency		} if		HalftoneType 2 eq		{			pop GrayFrequency		} if		HalftoneType 5 eq		{			pop Default level2ScreenFreq		} if end} bind defuserdict /currentScreenFreq  	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse putlevel2? not	{		/setcmykcolor where not		{			/setcmykcolor			{				exch .11 mul add exch .59 mul add exch .3 mul add				1 exch sub setgray			} def		} if		/currentcmykcolor where not		{			/currentcmykcolor			{				0 0 0 1 currentgray sub			} def		} if		/setoverprint where not		{			/setoverprint /pop load def		} if		/selectfont where not		{			/selectfont			{				exch findfont exch				dup type /arraytype eq				{					makefont				}				{					scalefont				} ifelse				setfont			} bind def		} if		/cshow where not		{			/cshow			{				[				0 0 5 -1 roll aload pop				] cvx bind forall			} bind def		} if	} if	cleartomark	/anyColor?	{		add add add 0 ne	} bind def	/testColor	{		gsave		setcmykcolor currentcmykcolor		grestore	} bind def	/testCMYKColorThrough	{		testColor anyColor?	} bind def	userdict /composite?	1 0 0 0 testCMYKColorThrough	0 1 0 0 testCMYKColorThrough	0 0 1 0 testCMYKColorThrough	0 0 0 1 testCMYKColorThrough	and and and	put	composite? not	{		userdict begin		gsave		/cyan? 1 0 0 0 testCMYKColorThrough def		/magenta? 0 1 0 0 testCMYKColorThrough def		/yellow? 0 0 1 0 testCMYKColorThrough def		/black? 0 0 0 1 testCMYKColorThrough def		grestore		/isCMYKSep? cyan? magenta? yellow? black? or or or def		/customColor? isCMYKSep? not def	 end	} if end defaultpacking setpacking%%EndResource%%BeginResource: procset AGM_Gradient_Sep 1.0 0%%Title: (AGM Gradient Procset)%%Version: 1.0 0%%CreationDate: (4/26/96) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)userdict /defaultpacking currentpacking put true setpackinguserdict /AGM_Gradient_Sep 5 dict dup begin put/AGM_Gradient_Sep_private 100 dict def/initialize{	AGM_Gradient_Sep begin	AGM_Gradient_Sep_private begin	_compositeJob{		initializeSinglePassSeps	}{		initializeMultiPassSeps	}ifelse	initializeSeps	AGM_Gradient_private begin		/_fillSD newSpotDict def		/_rampSD newSpotDict def		/_nCustomColorSD nd end	AGM_Gradient_Sep_private 	{		dup xcheck 1 index type /arraytype eq and		{			bind		}if		pop pop	}forall	AGM_Gradient_Sep	{		dup xcheck 1 index type /arraytype eq and		{			bind		}if		pop pop	}forall end		currentdict readonly pop	 end}def/terminate{	currentdict AGM_Gradient_Sep eq{	 end	}if}defAGM_Gradient_Sep_private begin/initializeSeps{	/currentoverprint { _of } def	_noImage not _level2PS not and{		/linealFill{			currentoverprint{				0 0 1 1 rectfill			}{				mySave				8 setImageParms				_color{					_nCustomColorSD begin						cyan magenta yellow black							_spotColor{							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put						}if				 end						4{						makeByte8 4 1 roll					}repeat					true 4 _nCustomColorSD ncolorimage				}{					_nCustomColorSD/black get 1 exch sub makeByte8 					_nCustomColorSD bwImage				}ifelse				myRestore			}ifelse		}def	}if	/_whiteBytes 1 makeByte8 pt	 /knockOut{		_noImage _level2PS or currentoverprint or{			gsave			false setoverprint			1 setgray 			0 0 1 1 rectfill			grestore		}{			8 setImageParms _whiteBytes /_image load 5 execImage		}ifelse	}def	/newSpotDict{		11 dict dup begin			/nSpots 2 def			/spot1 7 dict def			/spot2 7 dict def	 end	}def	/initSpotData	{	 begin			/name nd			/tintImage nd			/tintValue nd			/spot_C nd			/spot_M nd			/spot_Y nd			/spot_K nd	 end	}def	/initSpotDict{	 begin			/cyanInk nd			/magentaInk nd			/yellowInk nd			/blackInk nd			/cyan nd			/magenta nd			/yellow nd			/black nd			spot1 initSpotData			spot2 initSpotData	 end	}def	/copySpotDict{		/_dst xp	 begin			cyanInk magentaInk yellowInk blackInk			cyan magenta yellow black			spot1 spot2	 end		_dst begin			/spot1 spot1 maxlength dict def			/spot2 spot2 maxlength dict def			spot2 copy pop			spot1 copy pop			/black xd			/yellow xd			/magenta xd			/cyan xd			/blackInk xd			/yellowInk xd			/magentaInk xd			/cyanInk xd	 end	}def	/setCustomColor	{		1 index /Black eq{			6 1 roll 5 npop			1 exch sub			setgray		}{			6 1 roll _ccAry1 astore exch			dup null eq{				pop 0			}if			setcustomcolor		}ifelse	}def	/setCStop{		/_colorStyle exch pt				_colorStyle 0 eq{			0 0 0			4 -1 roll			1 exch sub			_spotColor{				/_colorStyle 3 pt				/Black				1 index				1 exch sub			}if		}if		_colorStyle 2 eq{			3 npop		}if		_rampSD _fillSD copySpotDict				_colorStyle 4 eq{ 			pop			9 2 roll 3 npop 6 -2 roll		} if				_colorStyle 3 eq _colorStyle 4 eq or{ 								_fillSD begin				/_spot1 spot1 pt				/_spot2 spot2 pt		 end						exch dup _spot1/name get eq{				_spot1 _spot2			}{				_spot2 _spot1			}ifelse		 begin			 begin					/name xd					1 exch sub /tintValue xd					4{						tintValue mul 4 1 roll					}repeat					_spotColor not{						/tintValue null def					}if			 end				/tintValue 0 def		 end		}if		_fillSD nsetcustomcolor	}def	/renderCMYK{		spot1/name get null eq		spot2/name get null eq and		dup not{			pop			spot1 spotConverted		}if		dup not{			pop			spot2 spotConverted		}if	}def	/currentInk{		true		_inRipSep{			currentcolorspace 0 get			dup /DeviceGray eq			1 index /DeviceCMYK eq or{				pop				currentcmykcolor add add add 0 eq{					pop false				}if			}{				/Separation eq{					currentcolor 0 eq{						pop false					}if				}if			}ifelse		}{			currentgray 1 eq{				pop false			}if		}ifelse	}def	/currentInkN{			_nCustomColorSD begin			/_spot1 spot1 pt			/_spot2 spot2 pt			renderCMYK	 end		{			currentInk		}{			gsave			_spot1 begin				name null ne{					spot_C spot_M spot_Y spot_K name tintValue setCustomColor					currentInk				}{					false				}ifelse		 end			_spot2 begin				name null ne{					spot_C spot_M spot_Y spot_K name tintValue setCustomColor					currentInk				}{					false				}ifelse		 end			grestore						or		} ifelse	}def	/fill_ /fill load def	/fillOvp{		currentoverprint{			_inRipSep{				currentcolorspace 0 get				dup /DeviceGray eq				1 index /DeviceCMYK eq or{					pop					currentcmykcolor add add add 0 eq{						newpath					}if				}{					/Separation eq{						currentcolor 0 eq{							newpath						}if					}if				}ifelse			}{				currentgray 1 eq{					newpath				}if			}ifelse		}if		fill_	}def	/fill{		_nCustomColorSD begin			/_spot1 spot1 pt			/_spot2 spot2 pt			renderCMYK	 end				{			fillOvp		}{			_spot1 begin				gsave				name null ne{					spot_C spot_M spot_Y spot_K name tintValue setCustomColor				}{					1 setgray				}ifelse				fillOvp 				grestore		 end			_spot2 begin				name null ne{					gsave					true setoverprint					spot_C spot_M spot_Y spot_K name tintValue setCustomColor					fillOvp					grestore				}if		 end			newpath		}ifelse	}def	/expandSpot{		_spotColor{			/_len xp			_rampSD begin				spot1 begin					tintImage null ne{						tintImage _len expandOne /tintImage xd					}if			 end				spot2 begin					tintImage null ne{						tintImage _len expandOne /tintImage xd					}if			 end		 end		}{			pop		}ifelse	}def	/rampImage{		currentoverprint{			rectImage		}{			_enabledSmoothShade{				fillRamp			}{				_color{					_rampSD begin						/cyanInk _cyanData 0 ne def						/magentaInk _magentaData 0 ne def						/yellowInk _yellowData 0 ne def						/blackInk _blackData 0 ne def				 end										_nSamples setImageParms					_nSamples expandSpot					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor					true 4 _rampSD ncolorimage				}{					_rampSD begin						/cyanInk false def						/magentaInk false def						/yellowInk false def						/blackInk true def				 end					_nSamples setImageParms 					_blackData _rampSD bwImage				}ifelse			}ifelse		}ifelse	}def	/nsetcustomcolor where{		pop	}{		/nsetcustomcolor		{			/_nCustomColorSD xp			_nCustomColorSD begin				4 copy				/black xd				/yellow xd				/magenta xd				/cyan xd				4 copy				0 ne /blackInk xd				0 ne /yellowInk xd				0 ne /magentaInk xd				0 ne /cyanInk xd		 end			setcmykcolor		}def	}ifelse	/nsetcustomcolorend where{		pop	}{		/nsetcustomcolorend		{			/_nCustomColorSD null pt		}def	}ifelse}def/initializeSinglePassSeps{	/_decodeNorm	[0 1] pt	/_decodeInvert 	[1 0] pt	/spotConverted	{	 begin			name null eq{				false			}{				tintValue null eq tintImage null eq and{					true				}{					_inDistiller{						false					}{						false						currentpagedevice/SeparationColorNames get{name eq or}forall						not					}ifelse				}ifelse			}ifelse	 end	}def	/dictImage	{		20 dict dup begin			/Dict xd			/Decode xd			/DataSource xd			/ImageMatrix xd			/BitsPerComponent xd			/Height xd			/Width xd			/ImageType 1 def			Dict	 end		/_image load 1 execImage	}def	/bwImage{	 begin			gsave			currentoverprint{				blackInk{					[/Separation /Black /DeviceGray{}] setcolorspace					_decodeInvert dictImage				}{					5 npop				}ifelse			}{				/DeviceGray setcolorspace				_decodeNorm dictImage			}ifelse			grestore	 end	}def	/ncolorimage where{		pop	}{		/ncolorimage{		 begin				renderCMYK{					cyanInk 					magentaInk and					yellowInk and					blackInk and					not					currentoverprint 					and{							pop pop						gsave						cyanInk{							8 copy							[/Separation /Cyan /DeviceGray{}] setcolorspace							3 npop							_decodeNorm dictImage						}if						magentaInk{							8 copy							[/Separation /Magenta /DeviceGray{}] setcolorspace							4 -1 roll							3 npop							_decodeNorm dictImage						}if						yellowInk{							8 copy							[/Separation /Yellow /DeviceGray{}] setcolorspace							4 -2 roll							3 npop							_decodeNorm dictImage						}if						blackInk{							4 -3 roll							[/Separation /Black /DeviceGray{}] setcolorspace							3 npop							_decodeNorm dictImage						}{							8 npop						}ifelse						grestore					}{						/_colorimage load 10 execImage					}ifelse				}{					6 npop					gsave					spot1 begin						name null ne tintImage null ne and{							[/Separation name /DeviceGray{}] setcolorspace							4 copy							tintImage 							name /Black eq{								_decodeNorm							}{								_decodeInvert							}ifelse 							dictImage						}{							1 setgray fill						}ifelse				 end					spot2 begin						true setoverprint						name null ne tintImage null ne and{							[/Separation name /DeviceGray{}] setcolorspace							tintImage 							name /Black eq{								_decodeNorm							}{								_decodeInvert							}ifelse 							dictImage						}{							4 npop							1 setgray fill						}ifelse				 end					grestore				}ifelse		 end		}def	}ifelse	/getRampColorSpace{				/_renderCMYK _rampSD begin renderCMYK end pt				_renderCMYK not{			_rampSD begin				[/DeviceN 					[					spot1 begin						name null ne tintImage null ne and{							name						}if				 end					spot2 begin						name null ne tintImage null ne and{							name						}if				 end					]					_inDistiller {						/DeviceCMYK [							spot1 begin								name null ne tintImage null ne and{									spot_C spot_M spot_Y spot_K 1								}{									0 0 0 0 0								}ifelse						 end							spot2 begin								name null ne tintImage null ne and{									spot_C spot_M spot_Y spot_K 2								}{									0 0 0 0 0								}ifelse						 end							5 1 roll 6 -2 roll add							dup 1 eq {								pop								8 /index cvx 1 /exch cvx /sub cvx								9 1 /roll cvx							}{								2 eq {									8 /index cvx 1 /exch cvx /sub cvx									10 1 /roll cvx								}if							}ifelse							4 1 /roll cvx 5 -2 /roll cvx							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx							3 1 /roll cvx 4 -2 /roll cvx							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx							2 1 /roll cvx 3 -2 /roll cvx							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx							6 -2 /roll cvx /pop cvx /pop cvx						] cvx bind					}{						/DeviceCMYK {}					}ifelse				] setcolorspace		 end			/_nColorSpace currentcolorspace pt		}if				_nSamples 1 gt{ 			/_ndx 0 pt			[blendColor] cvx exec		}if		_renderCMYK{			/_C0 [currentcolor] pt			/_C0_Space currentcolorspace pt		}{			/_C0 [				_nCustomColorSD begin					spot1 begin 						name null ne{							tintValue						}if				 end					spot2 begin 						name null ne{							tintValue						}if				 end			 end			] pt			/_C0_Space _nColorSpace pt		}ifelse				_nSamples 1 gt{ 			/_ndx _nSamples 1 sub pt			[blendColor] cvx exec		}if		_renderCMYK{			/_C1 [currentcolor] pt			/_C1_Space currentcolorspace pt		}{			/_C1 [				_nCustomColorSD begin					spot1 begin 						name null ne{							tintValue						}if				 end					spot2 begin 						name null ne{							tintValue						}if				 end			 end			] pt			/_C1_Space _nColorSpace pt		}ifelse				/_rampColorSpace _C0_Space pt		_spotColor{			nsetcustomcolorend		}if	}def}def/initializeMultiPassSeps{	/invertXfer{		[		{			1 exch sub		}/exec load systemdict /currenttransfer get exec /exec load		] cvx systemdict /settransfer get exec	}def	/ccThrough{		gsave		1 setCustomColor		currentcmykcolor		grestore		add add add 0 ne	}def	/spotConverted	{	 begin			_isCMYKSep not{				false			}{				name null eq{					false				}{					tintValue null eq tintImage null eq and{						true					}{						spot_C spot_M spot_Y spot_K name ccThrough					}ifelse				}ifelse			}ifelse	 end	}def	/spotChannel	{		_isCMYKSep{			pop false		}{			/_spotDict xp				_spotDict/name get null eq{					false				}{					_spotDict/spot_C get					_spotDict/spot_M get					_spotDict/spot_Y get					_spotDict/spot_K get					_spotDict/name get					ccThrough 				}ifelse		}ifelse	}def	/getChannelData	{		_isCMYKSep dup{			pop renderCMYK		}if		{			_blackPlate{				4 1 roll 3 npop blackInk			}{				_yellowPlate{					4 2 roll 3 npop yellowInk				}{					_magentaPlate{						4 3 roll 3 npop magentaInk					}{						3 npop cyanInk					}ifelse				}ifelse			}ifelse			{				true /nonZeroData			}{				true /zeroData			}ifelse		}{			4 npop			spot1/name get null ne 			spot1 spotChannel and{				spot1/tintImage get dup null ne{					false /nonZeroData				}{					pop false /noData				}ifelse			}{				spot2/name get null ne 				spot2 spotChannel and{					spot2/tintImage get dup null ne{						false /nonZeroData					}{						pop false /noData					}ifelse				}{					false /noData				}ifelse			}ifelse		}ifelse	}def	/renderChannelData	{		/_tmp xp		_tmp /nonZeroData ne currentoverprint and{			pop			_tmp /zeroData eq{pop}if			4 npop		}{			_tmp /nonZeroData eq{				{					invertXfer				}if					systemdict/image				get 5 execImage			}{				pop				_tmp /zeroData eq{pop}if				4 npop				knockOut			}ifelse		}ifelse	}def	/bwImage{	 begin			gsave			dup dup dup			getChannelData			exch pop false exch			renderChannelData			grestore	 end	}def	/ncolorimage{	 begin			pop pop			gsave			spot2/name get null ne spot2 spotChannel and{				true setoverprint			}if			getChannelData 			renderChannelData			grestore	 end	}def	/getRampColorSpace{				/_renderCMYK _rampSD begin renderCMYK end pt				_nSamples 1 gt{ 			/_ndx 0 pt			[blendColor] cvx exec		}if				_renderCMYK{			/_C0 [currentcolor] pt			/_C0_Space currentcolorspace pt		}{			/_C0 [				_nCustomColorSD begin					0					spot1 begin 						name null ne						tintValue null ne and						spot1 spotChannel and{							pop tintValue						}if				 end					spot2 begin 						name null ne						tintValue null ne and						spot2 spotChannel and{							pop tintValue						}if				 end					1 exch sub			 end			] pt			/_C0_Space /DeviceGray pt		}ifelse				_nSamples 1 gt{ 			/_ndx _nSamples 1 sub pt			[blendColor] cvx exec		}if				_renderCMYK{			/_C1 [currentcolor] pt			/_C1_Space currentcolorspace pt		}{			/_C1 [				_nCustomColorSD begin					0					spot1 begin 						name null ne						tintValue null ne and						spot1 spotChannel and{							pop tintValue						}if				 end					spot2 begin 						name null ne						tintValue null ne and						spot2 spotChannel and{							pop tintValue						}if				 end					1 exch sub			 end			] pt			/_C1_Space /DeviceGray pt		}ifelse				/_rampColorSpace _C0_Space pt		_spotColor{			nsetcustomcolorend		}if	}def}defendenddefaultpacking setpacking%%EndResource%%BeginResource: procset AGM_Gradient 1.0 0%%Title: (AGM Gradient Procset)%%Version: 1.0 0%%CreationDate: (4/26/96) ()%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)userdict /defaultpacking currentpacking put true setpackinguserdict /AGM_Gradient 20 dict dup begin put/AGM_Gradient_private 201 dict def/initialize{	AGM_Gradient begin	AGM_Gradient_private begin	initializeVars		/bd systemdict/mark get def	/ed		_level2PS 		{			(>>)		}{			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)		} ifelse	cvx def		_level2PS{		initializeLev2	}{		initializeLev1	}ifelse		queryDevice		initializeRectFill	initializeShading	initializeOps	_producingSeps{		AGM_Gradient_Sep/initialize get exec	}{		initializeComposite	}ifelse	_illustrator{		/f{}def		/F{}def		/s{}def		/S{}def		/b{}def		/B{}def	}if	/image where{		/image get /_image xd	}if	/colorimage where{		/colorimage get /_colorimage xd	}if	AGM_Gradient_private	{		dup xcheck 1 index type /arraytype eq and		{			bind		}if		pop pop	}forall	AGM_Gradient	{		dup xcheck 1 index type /arraytype eq and		{			bind		}if		pop pop	}forall end		currentdict readonly pop end}def/initializeAI{	pop pop 	AGM_Gradient/AGM_Gradient_private get /_illustrator true put	AGM_Gradient/initialize get exec		AGM_Gradient begin}def/unload{	systemdict/languagelevel known{		systemdict/languagelevel get 2 ge{			userdict/AGM_Gradient_Sep 2 copy known{				undef			}{				pop pop			}ifelse			userdict/AGM_Gradient 2 copy known{				undef			}{				pop pop			}ifelse		}if	}if}def/terminate{	currentdict AGM_Gradient eq{	 end	}if}def AGM_Gradient_private begin/initializeVars{	/_d255 256 array def	0 1 255{		_d255 exch dup 255 div put	}bind for	/_d255- 256 array def	0 1 255{		_d255- exch 1 _d255 2 index get sub put	}bind for	/_sSave nd	/_dUserSpace matrix defaultmatrix def	/_bUMatrix matrix def	/_imageMatrix matrix def	/_saveMatrix matrix def	/_xm matrix def	/_ccAry1 5 array def	/_bbox 4 array pt	/_level2PS 		systemdict/languagelevel known dup{			pop systemdict/languagelevel get 2 ge		}if	def	/_level3PS		_level2PS systemdict/shfill known and	def	currentdict /_illustrator known not{		/_illustrator false def	}if	}def/initializeOps{	AGM_Gradient begin	currentdict/Bc known not{		/Bc{					_renderFlag 2 eq _enabledSmoothShade or{				6 npop			}{				pushBSpace				_rampIndex 0 eq{					pop pop					setCStop				}if				linealFill				popBSpace			}ifelse				}def	}if		currentdict/Bg known not{		/Bg{			10 npop			/_gradName xp			/_renderFlag xp			/_enabledSmoothShade false pt					_renderFlag 2 ne{						_illustrator{					_of setoverprint				}if						/_enabledSmoothShade 					_level3PS{						_usingSmoothShade						_producingSeps not						currentoverprint not or and						_noImage not and					}{						false					}ifelse				pt								_illustrator _eo and _renderFlag 3 eq or{					eoclip				}{					clip				}ifelse						_gradNames _gradName 2 copy known{					get					mark exch aload pop					/_gradType xp					1 sub dup /_rampIndex xp					/_maxRampIndex xp					mark exch aload pop					0 0				}if				pop pop				getRampData			}{				mark mark			}ifelse		}def	}if		currentdict/Bm known not{		/Bm{			_renderFlag 2 ne{				_gradType 0 eq{					linealRamp				}{					radialGrad				}ifelse			}{				6 npop			}ifelse		}def	}if		currentdict/Bh known not{		/Bh{			2 npop			/_yHi xp			/_xHi xp			/_radHilite _xHi 0 ne _yHi 0 ne or pt		}def	}if		currentdict/Bn known not{		/Bn{			AGM_Gradient_private begin				dict /_gradNames xp		 end		}def	}if		currentdict/Bd known not{		/Bd{			AGM_Gradient begin			AGM_Gradient_private begin				/_nColorsBd xp				/_gradType xp				/_gradName xp		}def	}if		currentdict/BD known not{		/BD{				currentdict/_gradNames known not{					/_gradNames 20 dict def				}if				] _nColorsBd _gradType				]  _gradName exch /_gradNames xput		 end		 end		}def	}if		currentdict/Bb known not{		/Bb{					AGM_Gradient/AGM_Gradient_private get /_illustrator get not{				AGM_Gradient begin			}if			AGM_Gradient_private begin			_producingSeps{				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin			}if			mySave		}def	}if		currentdict/BB known not{		/BB{					/_tmp xp			cleartomark cleartomark					_tmp dup			_renderFlag					myRestore					_producingSeps{			 end			}if					_illustrator dup		 end			not {			 end			}if					{				2 ne exch 0 gt and{					2 eq{						s					}{						S					}ifelse				}{					pop newpath				}ifelse			}{				pop newpath			}ifelse						}def	}if		currentdict/Xm known not{		/Xm{			_xm astore pop		}def	}if	 end}def/queryDevice{	/_inDistiller		systemdict /currentdistillerparams known	def	/_inRipSep		_level2PS{			currentpagedevice/Separations 2 copy known{				get			}{				pop pop false			}ifelse		}{			false		}ifelse		_inDistiller or	def	/_noImage /lv1Fix where{		pop lv1Fix	}{		false	}ifelse	def	/_useShells where{		/_useShells get /_usingShells xp	}{		/_usingShells false def	}ifelse		/_useSmoothShade where{		pop	}{		/_useSmoothShade false def 	}ifelse	/_forceToCMYK where{		pop	}{		/_forceToCMYK false def 	}ifelse	/_cyanPlate 1 0 0 0 testCMYKColorThrough def	/_magentaPlate 0 1 0 0 testCMYKColorThrough def	/_yellowPlate 0 0 1 0 testCMYKColorThrough def	/_blackPlate 0 0 0 1 testCMYKColorThrough def	/_compositeJob		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and	def	/_isCMYKSep		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or	def	/_compositeSpotDevice where{		pop	}{		/_compositeSpotDevice _compositeJob not _inRipSep or{			1		}{			0		}ifelse		def	}ifelse	/_producingSeps _compositeSpotDevice 0 ne def	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def	/_dpiThreshold where{		pop	}{		/_dpiThreshold 600 def	}ifelse	/_screenFreqThreshold where{		pop	}{		/_screenFreqThreshold 150 def	}ifelse	/_contoneDevice where{		pop	}{		/_contoneDevice false def	}ifelse	/_subSampleOK 		_deviceDPI _dpiThreshold le 		currentScreenFreq _screenFreqThreshold le and 		_contoneDevice not and 	def}def/initializeRectFill{	/rectfill where dup{		exch pop not _producingSeps or	}{		not	}ifelse	{		/rectfill{			gsave			newpath			4 2 roll moveto			1 index 0 rlineto			0 1 index rlineto			1 index neg 0 rlineto			pop pop			closepath			fill			grestore		}def	}if}def/initializeLev1{	/currentScreenFreq{		currentscreen pop pop	}def	/_byte 1 string def	/colorimage where{		pop	}{		/colorimage{			pop pop			/_blackTmp xp			/_yellowTmp xp			/_magentaTmp xp			/_cyanTmp xp			/_cnt 0 pt			[			_byte dup 0			_cyanTmp 				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx			_magentaTmp				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx			_yellowTmp				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx			_blackTmp 				/_cnt cvx /get cvx _d255 /exch cvx /get cvx			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx			/dup cvx 0 /lt cvx{				pop 0			}/if cvx			/dup cvx 1 /gt cvx{				pop 1			}/if cvx			255 /mul cvx /cvi cvx			256 /mod cvx			/dup cvx 0 /lt cvx{				pop 0			}/if cvx			/put cvx			/_cnt dup cvx 1 /add cvx /pt cvx			] cvx			bind			/_image load 5 execImage		}def	}ifelse}def/initializeLev2{	/level2ScreenFreq{	 begin		60		HalftoneType 1 eq{			pop Frequency		}if		HalftoneType 2 eq{			pop GrayFrequency		}if		HalftoneType 5 eq{			pop Default level2ScreenFreq		}if		 end	}def	/currentScreenFreq{		currenthalftone level2ScreenFreq	}def}def/initializeShading{	_useSmoothShade _level3PS and{		/_usingSmoothShade true pt		initializeLev3_Ops	}{		/_usingSmoothShade false pt	}ifelse}def/initializeLev3_Ops{	/initShFill{		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt		/_rampFuncsArray _maxRampIndex array pt		/_boundsArray _maxRampIndex 1 sub array pt		/_encodeArray _maxRampIndex 2 mul array pt		/_beginCoord _rampPoint pt		/_colorSpace null pt		/_firstFill _rampIndex _maxRampIndex eq pt		/_lastFill false pt	}def	/linealShFill{		popBSpace		_xm aload pop pushBSpace				/_size _index 1 add pt		_size _maxRampIndex lt {			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt		}if				bd			/ShadingType 2			/ColorSpace _colorSpace			_rgbInCMYK{				/Function [					_cData sampFunc					_mData sampFunc					_yData sampFunc					_kData sampFunc				]			}{				/Function 					bd						/FunctionType 3						/Domain [0 1]						/Functions _rampFuncsArray						/Bounds _boundsArray						/Encode _encodeArray					ed			}ifelse			/Extend [_firstFill _lastFill]			/Domain [0 1] 			/Coords [_beginCoord 0 _endCoord 0]		ed		shfill	}def		/radialShFill{		/_size _maxRampIndex _index sub pt		_size _maxRampIndex lt {			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt			/_boundsArray _boundsArray _index _size 1 sub getinterval pt			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt		}if				/_rampLen _beginCoord _endCoord sub pt		bd			/ShadingType 3			/ColorSpace _colorSpace			_rgbInCMYK{				/Function [					_cData sampFunc					_mData sampFunc					_yData sampFunc					_kData sampFunc				]			}{				/Function 					bd						/FunctionType 3						/Domain [0 1]						/Functions _rampFuncsArray						/Bounds _boundsArray						/Encode _encodeArray					ed			}ifelse			/Extend [_lastFill _firstFill]			/Domain [0 1] 			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 		ed		shfill				_radHilite{			_xHi _rampLen mul _yHi _rampLen mul translate		}if	}def		%	/sampFunc{		/_tmp exch pt		bd			_tmp length 1 eq {				_tmp 0 get				/_tmp 2 string pt				dup _tmp 0 3 -1 roll put				_tmp 1 3 -1 roll put			}if			/FunctionType 0			/Order 1			/Size [_tmp length]			/Domain [0 1]			/BitsPerSample 8			/DataSource _tmp			/Range [0 1]		ed	}def		/fillRamp{				/_invert _midPoint 0.5 lt pt		_rampIndex _maxRampIndex eq {			initShFill		}if				getRampColorSpace				_colorSpace null eq{			/_colorSpace _rampColorSpace pt		}{			_colorSpace _rampColorSpace ne _rgbInCMYK or{				/_index _index 1 				_gradType 0 eq{					sub pt					linealShFill				}{					add pt					radialShFill				}ifelse				initShFill				/_colorSpace _rampColorSpace pt			} if		}ifelse		/_endCoord _endPoint pt			/_rgbInCMYK false pt		_producingSeps _forceToCMYK or _rgbRamp and {			_spotColor{				_renderCMYK			}{				_isCMYKSep			}ifelse		}{			false		}ifelse		{			_compositeJob{				/_rgbInCMYK true pt				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor				dup length string copy /_kData exch pt				dup length string copy /_yData exch pt				dup length string copy /_mData exch pt				dup length string copy /_cData exch pt			}{				_rampFuncsArray _index					_cyanPlate{_cyanData}if						_magentaPlate{_magentaData}if						_yellowPlate{_yellowData}if						_blackPlate{_blackData}if					_nSamples expandOne					sampFunc					dup begin /Decode [1 0] def end				put				/_invert false pt			}ifelse		}{			_rampFuncsArray _index				bd					/FunctionType 2					/Domain [0 1]					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div					_gradType 0 eq{						_invert{/C1}{/C0}ifelse _C0						_invert{/C0}{/C1}ifelse _C1					}{						_invert{/C0}{/C1}ifelse _C1						_invert{/C1}{/C0}ifelse _C0					}ifelse				ed			put		}ifelse				_rampIndex 1 ne{			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put		} if				0 1 _invert {exch}if		_encodeArray _index 2 mul 1 add 3 -1 roll put		_encodeArray _index 2 mul 3 -1 roll put		_rampIndex 1 eq {			/_lastFill true pt			_gradType 0 eq{				linealShFill			}{				radialShFill			}ifelse		}if		/_index _index 1 		_gradType 0 eq{			add pt		}{			sub pt		}ifelse	}def}def/initializeComposite{	/bwImage{		pop /_image load 5 execImage 	}def	/rampImage{		_enabledSmoothShade{			fillRamp		}{			_color{				_nSamples setImageParms									_rgbRamp _forceToCMYK not and{					_redData _greenData _blueData _nSamples 3 expandColor					true 3 null ncolorimage				}{					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor					true 4 null ncolorimage				}ifelse			}{				_nSamples setImageParms _blackData null bwImage			}ifelse		}ifelse	}def	/setCStop{		/_colorStyle exch pt		_colorStyle 0 eq{			1 exch sub			0 0 0			4 -1 roll		}if				_colorStyle 2 eq{			_forceToCMYK{				3 npop setcmykcolor			}{				setrgbcolor 4 npop			}ifelse		}if				_colorStyle 3 eq{			1 exch sub /_tmp xp			pop			4{				_tmp mul 4 1 roll			}repeat		}if				_colorStyle 4 eq{			_forceToCMYK{				6 npop setcmykcolor			}{				3 -1 roll pop pop				1 exch sub /_tmp xp				3{					1 exch sub _tmp mul 1 exch sub 3 1 roll				}repeat				setrgbcolor 				4 npop			}ifelse		}if		_colorStyle 2 ne _colorStyle 4 ne and{			null nsetcustomcolor		}if	}def	/nsetcustomcolor	{		pop setcmykcolor	}def	/nsetcustomcolorend	{	}def	/ncolorimage{		pop 		/_colorimage load 10 execImage	}def	_noImage not _level2PS not and{		/linealFill{			8 setImageParms			_color{				currentcmykcolor				4{					makeByte8 4 1 roll				}repeat				true 4 null ncolorimage			}{				currentgray makeByte8 null bwImage			}ifelse		}def	}if	/getRampColorSpace{		_nSamples 1 gt{ 			/_ndx 0 pt			[blendColor] cvx exec		}if		/_C0 [currentcolor] pt		/_C0_Space currentcolorspace pt				_nSamples 1 gt{ 			/_ndx _nSamples 1 sub pt			[blendColor] cvx exec		}if		/_C1 [currentcolor] pt		/_C1_Space currentcolorspace pt				/_rampColorSpace _C0_Space pt				_spotColor{			nsetcustomcolorend		}if	}def}def/npop{	{pop}repeat}def/xd{	exch def}def/nd{	null def}def/pt{	AGM_Gradient_private 3 1 roll put}def/xp{	exch pt}def/xput{	dup load dup length exch maxlength eq{		dup dup load dup		length 2 mul dict copy def	}if	load begin		def  end}def/mySave{	save /_sSave xp}def/myRestore{	_sSave type /savetype eq{		_sSave restore	}if}def/gMark{	counttomark 2 add -1 roll}def/execImage{	/_tmp xp	{		exec	}stopped{		$error /errorname get /undefinedresult ne{			stop		}{			_tmp npop		}ifelse	}if}def/pushBSpace{	newpath gsave	_bUMatrix astore concat }def/popBSpace{	grestore}def/makeByte8{	/_tmp 0 pt	255 mul cvi	8 string 8{		dup _tmp 3 index put 		/_tmp _tmp 1 add pt	}repeat	exch pop}def/setImageParms{	1 8 2 index 0 0 1 0 0 _imageMatrix astore}def/linealFill{	0 0 1 1 rectfill}def/testCMYKColorThrough{	gsave	setcmykcolor currentcmykcolor	grestore	add add add 0 ne}def/expandOne	{	/_tmp xp	dup type /stringtype ne{		_tmp string		exch		dup 0 ne{			255 mul cvi			0 1 _tmp 1 sub{				3 copy				exch put pop			}for		}if		pop	}if}def/expandColor{	/_channels xp	/_len xp	_channels{		_len expandOne _channels 1 roll	}repeat}def/blendColor{		_color{		_rgbRamp _producingSeps not and _forceToCMYK not and{			_redData dup type /stringtype eq{				/_ndx cvx /get cvx _d255 /exch cvx /get cvx			}if			_greenData dup type /stringtype eq{				/_ndx cvx /get cvx _d255 /exch cvx /get cvx			}if			_blueData dup type /stringtype eq{				/_ndx cvx /get cvx _d255 /exch cvx /get cvx			}if			/setrgbcolor cvx		}{			_cyanData dup type /stringtype eq{				/_ndx cvx /get cvx _d255 /exch cvx /get cvx			}if			_magentaData dup type /stringtype eq{				/_ndx cvx /get cvx _d255 /exch cvx /get cvx			}if			_yellowData dup type /stringtype eq{				/_ndx cvx /get cvx _d255 /exch cvx /get cvx			}if			_blackData dup type /stringtype eq{				/_ndx cvx /get cvx _d255 /exch cvx /get cvx			}if				_spotColor{				_rampSD begin					/_rampSD cvx /begin cvx						spot1 begin						tintImage dup type /stringtype eq{							/_ndx cvx /get cvx _d255- /exch cvx /get cvx						}{							dup null ne{								name type /nametype ne{									1 exch sub								}if							}if						}ifelse				 end					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx						spot2 begin						tintImage dup type /stringtype eq{							/_ndx cvx /get cvx _d255- /exch cvx /get cvx						}{							dup null ne{								name type /nametype ne{									1 exch sub								}if							}if						}ifelse				 end					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx					/end cvx			 end				/_rampSD cvx				/nsetcustomcolor cvx			}{				/setcmykcolor cvx			}ifelse		}ifelse	}{		_blackData dup type /stringtype eq{			/_ndx cvx /get cvx _d255 /exch cvx /get cvx		}if				_enabledSmoothShade{			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx		}{			 /setgray cvx		}ifelse	}ifelse}def/useRectImage{	_subSampleOK _enabledSmoothShade not and{		{			mark			0 1 dtransform atan cvi 90 mod 0 eq			1 0 dtransform atan cvi 90 mod 0 eq		} stopped		{			cleartomark			false		}		{			and exch pop		} ifelse	}{		false	}ifelse}def/linealImage{	_noImage{		rectImage	}{		_producingSeps{				AGM_Gradient_Sep/AGM_Gradient_Sep_private get				/rampImage get exec		}{			useRectImage{				rectImage			}{				rampImage			}ifelse		}ifelse	}ifelse}def/linealRamp{	pushBSpace	_ramp{		linealImage	}{		linealFill	}ifelse	popBSpace	/_rampIndex _rampIndex 1 sub pt	_rampIndex 0 gt{		getRampData	}if}def/radialGrad{	/_usingShells currentoverprint _producingSeps and _usingShells or pt	/_firstShell true pt	_enabledSmoothShade not{		currentoverprint _producingSeps and{						newpath			clippath pathbbox 			1 add 4 1 roll			1 add 4 1 roll			1 sub 4 1 roll			1 sub 4 1 roll			_bbox astore pop						newpath			_bbox 0 get _bbox 1 get moveto			_bbox 2 get _bbox 1 get lineto			_bbox 2 get _bbox 3 get lineto			_bbox 0 get _bbox 3 get lineto			closepath			6 copy			gsave _bUMatrix astore concat			1 0 moveto 0 0 1 0 360 arc closepath			eoclip fill			popBSpace		}{			fill		}ifelse	}if	pushBSpace		_radHilite{		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp		_rampPoint 1 lt{			1 _rampPoint sub dup _xHi mul exch _yHi mul translate		}if	}if	_rampIndex{		radialRamp		/_rampIndex _rampIndex 1 sub pt		_rampIndex 0 gt{			getRampData		}if	}repeat		popBSpace	}def/getNSamples{	0 exch	{		dup type /stringtype eq{			length exch pop exit		}if		pop	}forall	dup 0 eq{		pop 1	}if}def/getRampData{	/_rampType gMark pt	/_color _rampType 0 gt pt	/_ccRGB _rampType 5 eq _rampType 6 eq or pt	/_rgbRamp _rampType 4 eq _ccRGB or pt	/_ccProcess _rampType 2 eq _rampType 3 eq or pt	_producingSeps{		_rampSD initSpotDict		/_spotColor _ccProcess _ccRGB or pt	}{		/_spotColor false pt	}ifelse	/_ramp true pt	100 div /_rampPoint xp	100 div /_midPoint xp		dup /_colorStyle xp	_colorStyle 0 eq{ 		2	}{		_colorStyle 1 eq{ 			5		}{			_colorStyle 2 eq{				8			}{				_colorStyle 3 eq{					_producingSeps{						_rampSD /spot1 get begin							/name 3 index def							/spot_K 4 index def							/spot_Y 5 index def							/spot_M 6 index def							/spot_C 7 index def					 end					}if					7				}{					_producingSeps{						_rampSD/spot1 get begin							/name 4 index def							/spot_K 8 index def							/spot_Y 9 index def							/spot_M 10 index def							/spot_C 11 index def					 end					}if					11				} ifelse			}ifelse		}ifelse	}ifelse	/_tmp xp	_tmp index 100 div /_endPoint xp		_gradType 1 eq{		_tmp 1 add index 100 div /_midPoint xp	}if		_producingSeps{		_tmp 2 add index /_nextColorStyle xp		_nextColorStyle 3 eq{			/_tmp _tmp 4 add pt			_tmp index dup			_rampSD/spot1 get /name get ne{				_rampSD /spot2 get begin					/name xd					/spot_K _tmp 2 add index def					/spot_Y _tmp 3 add index def					/spot_M _tmp 4 add index def					/spot_C _tmp 5 add index def			 end			}{				pop			}ifelse		}if		_nextColorStyle 4 eq{			/_tmp _tmp 5 add pt			_tmp index dup			_rampSD/spot1 get /name get ne{				_rampSD /spot2 get begin					/name xd					/spot_K _tmp 5 add index def					/spot_Y _tmp 6 add index def					/spot_M _tmp 7 add index def					/spot_C _tmp 8 add index def			 end			}{				pop			}ifelse		}if	}if	_rampType 3 eq _rampType 6 eq or{		/_tint2Data gMark pt	}if	_ccProcess _ccRGB or{		/_tint1Data gMark pt	}if	_rgbRamp{		/_blueData gMark pt		/_greenData gMark pt		/_redData gMark pt	}if		_producingSeps{		_ccProcess _ccRGB or{			_rampType 3 eq _rampType 6 eq or{				_rampSD /spot2 get begin					/tintImage _gradType 0 eq{						_tint2Data					}{						_tint1Data					}ifelse					def					name null eq{						/name /Black def					}if			 end			}if			_rampSD /spot1 get begin				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{					_tint1Data				}{					_tint2Data				}ifelse				def				_rampType 2 eq _rampType 5 eq or{					name null eq{						/name _rampSD/spot2 get /name get def						/spot_C _rampSD/spot2 get /spot_C get def						/spot_M _rampSD/spot2 get /spot_M get def						/spot_Y _rampSD/spot2 get /spot_Y get def						/spot_K _rampSD/spot2 get /spot_K get def						_rampSD/spot2 get /name null put					}if				}{					name null eq{						/name /Black def					}if				}ifelse		 end		}if	}if	/_blackData gMark pt	_rampType 0 gt{		counttomark 4 add -3 roll		/_yellowData xp		/_magentaData xp		/_cyanData xp	}if	_ramp{		/_nSamples			[			_rampType 0 eq {_blackData}if			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if			] getNSamples pt		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if	} if		setCStop}def/rectImage{	gsave	/_sInc 1 pt	/_bInc 1 _nSamples div pt	/_nSubSamples _nSamples pt	/_optimize false pt			_subSampleOK{		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt				_pChange .5 gt dup /_optimize xp{			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt			/_bInc 1 _nSubSamples div pt			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt		}if	}if	0	_nSubSamples	[	/dup cvx	_optimize {		/round cvx /cvi cvx	} if	/_ndx /exch cvx /pt cvx	blendColor	0 0 _bInc 1 /rectfill cvx	_bInc 0 /translate cvx	_sInc /add cvx	] cvx	bind	repeat	pop	_spotColor{		nsetcustomcolorend	}if	grestore}def/radialInit{	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt	/_sInc -1 pt	/_rampLen _rampPoint _endPoint sub pt	/_bInc _rampLen _nSamples div neg pt	/_optimize false pt	_subSampleOK{		/_uRampLen			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt			2 copy lt{				exch			}if pop		pt		/_pChange 			_uRampLen 0 eq{				0			}{				_nSamples _uRampLen div			}ifelse		pt		_pChange .5 gt dup /_optimize xp{			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt			/_bInc _rampLen _nRadSamples div neg pt			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt		}if	}if	_radHilite{		/_xBCInc _xHi _rampLen mul _nRadSamples div pt		/_yBCInc _yHi _rampLen mul _nRadSamples div pt	}if}def/radialRamp{	_enabledSmoothShade{		fillRamp	}{		/_saveMatrix _saveMatrix currentmatrix def				radialInit			%		%		true		_producingSeps _rgbRamp not and{			_nSamples 1 gt{ 				pop				/_ndx 0 pt				[blendColor] cvx exec				currentInkN				/_ndx _nSamples 1 sub pt				[blendColor] cvx exec				currentInkN				or			}if		}if		{			_rampPoint					_nSamples 1 sub					_nRadSamples 			[				/dup cvx						_optimize{					/round cvx /cvi cvx				}if						/_ndx /exch cvx /pt cvx								_usingShells{					/_firstShell cvx{						/_firstShell false pt					}{						0 0 3 index 360 0 arcn fill					}/ifelse cvx				}if						blendColor						_usingShells{					0 0 3 /index cvx 0 360 /arc cvx 				}{					0 0 3 /index cvx 0 360 /arc cvx /fill cvx				}ifelse						/exch cvx _bInc /add cvx /exch cvx						_sInc /add cvx						_radHilite{					_xBCInc _yBCInc /translate cvx				}if			] cvx bind			repeat					pop pop		}{			_usingShells{				0 0 _rampPoint 360 0 arcn fill			}if		}ifelse			_saveMatrix setmatrix				_radHilite{			_xHi _rampLen mul _yHi _rampLen mul translate		}if				_usingShells _rampIndex 1 eq and{			fill		}if			_spotColor{			nsetcustomcolorend		}if	}ifelse}defendenddefaultpacking setpacking%%EndResource%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0userdict /Adobe_ColorImage_AI6 known not{	userdict /Adobe_ColorImage_AI6 53 dict put } ifuserdict /Adobe_ColorImage_AI6 get begin/initialize { 	Adobe_ColorImage_AI6 begin	Adobe_ColorImage_AI6 {		dup type /arraytype eq {			dup xcheck {				bind			} if		} if		pop pop	} forall} def/terminate { end } defcurrentdict /Adobe_ColorImage_AI6_Vars known not {	/Adobe_ColorImage_AI6_Vars 41 dict def} ifAdobe_ColorImage_AI6_Vars begin	/plateindex -1 def	/_newproc null def	/_proc1 null def	/_proc2 null def	/sourcearray 4 array def	/_ptispace null def	/_ptiname null def	/_pti0 0 def	/_pti1 0 def	/_ptiproc null def	/_ptiscale 0 def	/_pticomps 0 def	/_ptibuf 0 string def	/_gtigray 0 def	/_cticmyk null def	/_rtirgb null def	/XIEnable true def	/XIType 0 def	/XIEncoding 0 def	/XICompression 0 def	/XIChannelCount 0 def	/XIBitsPerPixel 0 def	/XIImageHeight 0 def	/XIImageWidth 0 def	/XIImageMatrix null def	/XIRowBytes 0 def	/XIFile null def	/XIBuffer1 null def	/XIBuffer2 null def	/XIBuffer3 null def	/XIDataProc null def	/XIColorSpace /DeviceGray def	/XIColorValues 0 def	/XIPlateList false defend/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def/ci6image systemdict /image get def/ci6curtransfer systemdict /currenttransfer get def/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def/ci6foureq {	4 index ne {		pop pop pop false	}{		4 index ne {			pop pop false		}{			4 index ne {				pop false			}{				4 index eq			} ifelse		} ifelse	} ifelse} def/ci6testplate {	Adobe_ColorImage_AI6_Vars begin		/plateindex -1 def		/setcmykcolor where {			pop			gsave			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub			grestore			1 0 0 0 ci6foureq { 				/plateindex 0 def			}{				0 1 0 0 ci6foureq { 					/plateindex 1 def				}{					0 0 1 0 ci6foureq {						/plateindex 2 def					}{						0 0 0 1 ci6foureq { 							/plateindex 3 def						}{							0 0 0 0 ci6foureq {								/plateindex 5 def							} if						} ifelse					} ifelse				} ifelse			} ifelse			pop pop pop pop		} if		plateindex end} def/ci6concatprocs {	/packedarray where {		pop dup type /packedarraytype eq 2 index type		/packedarraytype eq or	}{		false	} ifelse	{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		_proc1 aload pop		_proc2 aload pop		_proc1 length		_proc2 length add		packedarray cvx	}{		/_proc2 exch cvlit def		/_proc1 exch cvlit def		/_newproc _proc1 length _proc2 length add array def		_newproc 0 _proc1 putinterval		_newproc _proc1 length _proc2 putinterval		_newproc cvx	} ifelse} def/ci6istint {	type /arraytype eq } def/ci6isspot {	dup type /arraytype eq {		dup length 1 sub get /Separation eq	}{		pop false	} ifelse} def/ci6spotname {	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse} def/ci6altspace {	aload pop pop pop ci6colormake} def/ci6numcomps {	dup /DeviceGray eq {		pop 1	}{		dup /DeviceRGB eq {			pop 3		}{			/DeviceCMYK eq {				4			}{				1			} ifelse		} ifelse	} ifelse} def/ci6marksplate {	dup /DeviceGray eq {		pop plateindex 3 eq	}{		dup /DeviceRGB eq {			pop plateindex 5 ne		}{			dup /DeviceCMYK eq {				pop plateindex 5 ne			}{				dup ci6isspot {					/findcmykcustomcolor where {						pop						dup length 2 sub get						0.1 0.1 0.1 0.1 5 -1 roll						findcmykcustomcolor 1 setcustomcolor						systemdict /currentgray get exec						1 ne					}{						pop plateindex 5 ne					} ifelse				}{					pop plateindex 5 ne				} ifelse			} ifelse		} ifelse	} ifelse} def/ci6colormake {	dup ci6numcomps	exch 1 index 2 add 1 roll	dup 1 eq {pop}{array astore} ifelse	exch} def/ci6colorexpand {	dup ci6spotname exch	dup ci6istint {		ci6altspace		exch 4 1 roll	}{		1 3 1 roll	} ifelse} def/ci6colortint {	dup /DeviceGray eq {		3 1 roll 1 exch sub mul 1 exch sub exch	}{		dup /DeviceRGB eq {			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch		}{			dup /DeviceCMYK eq {				3 1 roll {1 index mul exch} forall pop 4 array astore exch			}{				3 1 roll mul exch			} ifelse		} ifelse	} ifelse} def/ci6colortocmyk {	dup /DeviceGray eq {		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore	}{		dup /DeviceRGB eq {			pop aload pop _rgbtocmyk 4 array astore		}{			dup /DeviceCMYK eq {				pop			}{				ci6altspace ci6colortint ci6colortocmyk			} ifelse		} ifelse	} ifelse} def/ci6makeimagedict {	7 dict begin		/ImageType 1 def		/Decode exch def		/DataSource exch def		/ImageMatrix exch def		/BitsPerComponent exch def		/Height exch def		/Width exch def	currentdict end} def/ci6stringinvert {	0 1 2 index length 1 sub {		dup 2 index exch get 255 exch sub 2 index 3 1 roll put	} for} def/ci6stringknockout {	0 1 2 index length 1 sub {		255 2 index 3 1 roll put	} for} def/ci6stringapply {	0 1 4 index length 1 sub {		dup		4 index exch get		3 index 3 1 roll		3 index exec	} for	pop exch pop} def/ci6walkrgbstring {	0 3 index	dup length 1 sub 0 3 3 -1 roll {		3 getinterval {} forall		5 index exec		3 index	} for		 5 {pop} repeat} def/ci6walkcmykstring{	0 3 index	dup length 1 sub 0 4 3 -1 roll {		4 getinterval {} forall				6 index exec				3 index			} for		5 { pop } repeat	} def/ci6putrgbtograystr{	.11 mul exch		.59 mul add exch		.3 mul add		cvi 3 copy put		pop 1 add} def/ci6putcmyktograystr{	exch .11 mul add		exch .59 mul add		exch .3 mul add		dup 255 gt { pop 255 } if		255 exch sub cvi 3 copy put		pop 1 add} def/ci6rgbtograyproc {		Adobe_ColorImage_AI6_Vars begin 		sourcearray 0 get exec		XIBuffer3		dup 3 1 roll 				/ci6putrgbtograystr load exch		ci6walkrgbstring end} def/ci6cmyktograyproc {		Adobe_ColorImage_AI6_Vars begin		sourcearray 0 get exec		XIBuffer3		dup 3 1 roll 				/ci6putcmyktograystr load exch		ci6walkcmykstring end} def/ci6separatecmykproc {		Adobe_ColorImage_AI6_Vars begin		sourcearray 0 get exec				XIBuffer3				0 2 index				plateindex 4 2 index length 1 sub {			get 255 exch sub						3 copy put pop 1 add						2 index		} for		pop pop exch pop end} def	/ci6compositeimage {	dup 1 eq {		pop pop image	}{		/ci6colorimage load null ne {			ci6colorimage		}{			3 1 roll pop			sourcearray 0 3 -1 roll put			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load			image		} ifelse	} ifelse} def/ci6knockoutimage {	gsave	0 ci6curtransfer exec 1 ci6curtransfer exec	eq {		0 ci6curtransfer exec 0.5 lt	}{		0 ci6curtransfer exec 1 ci6curtransfer exec gt	} ifelse	{{pop 0}}{{pop 1}} ifelse	systemdict /settransfer get exec	ci6compositeimage	grestore} def/ci6drawimage {	ci6testplate -1 eq {		pop ci6compositeimage	}{		dup type /arraytype eq {			dup length plateindex gt {plateindex get}{pop false} ifelse		}{			{				true			}{				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse			} ifelse		} ifelse		{			dup 1 eq {				pop pop ci6image			}{				dup 3 eq {					ci6compositeimage				}{					pop pop					sourcearray 0 3 -1 roll put					/ci6separatecmykproc load					ci6image				} ifelse			} ifelse		}{			ci6curoverprint {				7 {pop} repeat			}{				ci6knockoutimage			} ifelse		} ifelse	} ifelse} def/ci6proctintimage {	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store	/_pticomps _ptispace ci6numcomps store	/_ptiscale _pti1 _pti0 sub store	level2? {		_ptiname length 0 gt version cvr 2012 ge and {			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace			[_pti0 _pti1] ci6makeimagedict ci6image		}{			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace			[0 255] ci6makeimagedict ci6image		} ifelse	}{		_pticomps 1 eq {			{				dup				{					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put				} ci6stringapply			} ci6concatprocs ci6image		}{			{				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse				_ptibuf {					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc					_pticomps 2 add -2 roll					_pticomps 1 sub -1 0 {						1 index add 2 index exch						5 -1 roll						255 mul cvi put					} for					pop pop				} ci6stringapply			} ci6concatprocs false _pticomps			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse		} ifelse	} ifelse} def/ci6graytintimage {	/_gtigray 5 -1 roll store	{1 _gtigray sub mul 1 exch sub} 4 1 roll	/DeviceGray ci6proctintimage} def/ci6cmyktintimage {	/_cticmyk 5 -1 roll store	{_cticmyk {1 index mul exch} forall pop} 4 1 roll	/DeviceCMYK ci6proctintimage} def/ci6rgbtintimage {	/_rtirgb 5 -1 roll store	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll	/DeviceRGB ci6proctintimage} def/ci6tintimage {	ci6testplate -1 eq {		ci6colorexpand		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll		dup /DeviceGray eq {			pop ci6graytintimage		}{			dup /DeviceRGB eq {				pop ci6rgbtintimage			}{				pop ci6cmyktintimage			} ifelse		} ifelse	}{		dup ci6marksplate {			plateindex 5 lt {				ci6colortocmyk plateindex get				dup 0 eq ci6curoverprint and {					7 {pop} repeat				}{					1 exch sub					exch {1 0}{0 1} ifelse () ci6graytintimage				} ifelse			}{				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage			} ifelse		}{			ci6curoverprint {				8 {pop} repeat			}{				pop pop pop				{pop 1} 0 1 () /DeviceGray ci6proctintimage			} ifelse		} ifelse	} ifelse} def/XINullImage {} def/XIImageMask {	XIImageWidth XIImageHeight false	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	imagemask} def/XIImageTint {	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	XIType 3 eq XIColorValues XIColorSpace ci6tintimage} def/XIImage {	XIImageWidth XIImageHeight XIBitsPerPixel	[XIImageWidth 0 0 XIImageHeight neg 0 0]	/XIDataProc load	false XIChannelCount XIPlateList ci6drawimage} def/XG {	pop pop} def/XF {	13 {pop} repeat} def/Xh {	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		/XIImageHeight exch def		/XIImageWidth exch def		/XIImageMatrix exch def		0 0 moveto		XIImageMatrix concat		XIImageWidth XIImageHeight scale				/_lp /null ddef		_fc		/_lp /imagemask ddef end} def/XH {	Adobe_ColorImage_AI6_Vars begin		grestore end} def/XIEnable {	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put} def/XC {	Adobe_ColorImage_AI6_Vars begin		ci6colormake		/XIColorSpace exch def		/XIColorValues exch def end} def/XIPlates {	Adobe_ColorImage_AI6_Vars begin		/XIPlateList exch def end} def/XI{	Adobe_ColorImage_AI6_Vars begin		gsave		/XIType exch def		cvi dup		256 idiv /XICompression exch store		256 mod /XIEncoding exch store		pop pop		/XIChannelCount exch def		/XIBitsPerPixel exch def		/XIImageHeight exch def		/XIImageWidth exch def		pop pop pop pop		/XIImageMatrix exch def		XIBitsPerPixel 1 eq {			XIImageWidth 8 div ceiling cvi		}{			XIImageWidth XIChannelCount mul		} ifelse		/XIRowBytes exch def		XIEnable {			/XIBuffer3 XIImageWidth string def			XICompression 0 eq {				/XIBuffer1 XIRowBytes string def				XIEncoding 0 eq {					{currentfile XIBuffer1 readhexstring pop}				}{					{currentfile XIBuffer1 readstring pop}				} ifelse			}{				/XIBuffer1 256 string def				/XIBuffer2 XIRowBytes string def				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}				/ASCII85Decode filter /DCTDecode filter				/XIFile exch def				{XIFile XIBuffer2 readstring pop}			} ifelse			/XIDataProc exch def						XIType 1 ne {				0 setgray			} if			XIType 1 eq {				XIImageMask			}{				XIType 2 eq XIType 3 eq or {					XIImageTint				}{					XIImage				} ifelse			} ifelse		}{			XINullImage		} ifelse		/XIPlateList false def		grestore end} defend%%EndProcSet%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)%%Version: 1.3 0%%CreationDate: (3/7/1994) ()%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_Illustrator_AI5_vars 112 dict dup beginput/_?cmyk false def/_eo false def/_lp /none def/_pf{} def/_ps{} def/_psf{} def/_pss{} def/_pjsf{} def/_pjss{} def/_pola 0 def/_doClip 0 def/cf currentflat def/_lineorientation 0 def/_charorientation 0 def/_yokoorientation 0 def/_tm matrix def/_renderStart[/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0] def/_renderEnd[null null null null /i1 /i1 /i1 /i1] def/_render -1 def/_shift [0 0] def/_ax 0 def/_ay 0 def/_cx 0 def/_cy 0 def/_leading[0 0] def/_ctm matrix def/_mtx matrix def/_sp 16#020 def/_hyphen (-) def/_fontSize 0 def/_fontAscent 0 def/_fontDescent 0 def/_fontHeight 0 def/_fontRotateAdjust 0 def/Ss 256 string defSs 0 (fonts/) putinterval/_cnt 0 def/_scale [1 1] def/_nativeEncoding 0 def/_useNativeEncoding 0 def/_tempEncode 0 def/_pntr 0 def/_tDict 2 dict def/_hfname 100 string def/_hffound false def/Tx{} def/Tj{} def/CRender{} def/_AI3_savepage{} def/_gf null def/_cf 4 array def/_rgbf 3 array def/_if null def/_of false def/_fc{} def/_gs null def/_cs 4 array def/_rgbs 3 array def/_is null def/_os false def/_sc{} def/_pd 1 dict def/_ed 15 dict def/_pm matrix def/_fm null def/_fd null def/_fdd null def/_sm null def/_sd null def/_sdd null def/_i null def/_lobyte 0 def/_hibyte 0 def/_cproc null def/_cscript 0 def/_hvax 0 def/_hvay 0 def/_hvwb 0 def/_hvcx 0 def/_hvcy 0 def/_bitfont null def/_bitlobyte 0 def/_bithibyte 0 def/_bitkey null def/_bitdata null def/_bitindex 0 def/discardSave null def/buffer 256 string def/beginString null def/endString null def/endStringLength null def/layerCnt 1 def/layerCount 1 def/perCent (%) 0 get def/perCentSeen? false def/newBuff null def/newBuffButFirst null def/newBuffLast null def/clipForward? false defenduserdict /Adobe_Illustrator_AI5 known not {	userdict /Adobe_Illustrator_AI5 100 dict put} ifuserdict /Adobe_Illustrator_AI5 get begin/initialize{	Adobe_Illustrator_AI5 dup begin	Adobe_Illustrator_AI5_vars begin	/_aicmykps where {pop /_?cmyk _aicmykps def}if	discardDict	{		bind pop pop	} forall	dup /nc get begin	{		dup xcheck 1 index type /operatortype ne and		{			bind		} if		pop pop	} forall end	newpath} def/terminate{ end end} def/_null def/ddef{	Adobe_Illustrator_AI5_vars 3 1 roll put} def/xput{	dup load dup length exch maxlength eq	{		dup dup load dup		length 2 mul dict copy def	} if	load begin	def end} def/npop{	{		pop	} repeat} def/hswj{	dup stringwidth 3 2 roll	{		_hvwb eq { exch _hvcx add exch _hvcy add } if		exch _hvax add exch _hvay add	} cforall} def/vswj{	0 0 3 -1 roll	{		dup 255 le		_charorientation 1 eq		and		{			dup cstring stringwidth 5 2 roll			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			4 -1 roll sub exch			3 -1 roll sub exch		}		{			_hvwb eq { exch _hvcy sub exch _hvcx sub } if			exch _hvay sub exch _hvax sub			_fontHeight sub		} ifelse	} cforall} def/swj{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hswj } { vswj } ifelse} def/sw{	0 0 0 6 3 roll swj} def/vjss{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			gsave			false charpath currentpoint			5 index setmatrix stroke			grestore			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				gsave			2 index false charpath			6 index setmatrix stroke			grestore				moveto pop pop		} ifelse	} cforall	6 npop} def/hjss{	4 1 roll	{		dup cstring		gsave		false charpath currentpoint		5 index setmatrix stroke		grestore		moveto		_sp eq		{			5 index 5 index rmoveto		} if		2 copy rmoveto	} cforall	6 npop} def/jss{	_lineorientation 0 eq { hjss } { vjss } ifelse} def/ss{	0 0 0 7 3 roll jss} def/vjsp{	4 1 roll	{		dup cstring		dup length 1 eq		_charorientation 1 eq		and		{			-90 rotate			currentpoint			_fontRotateAdjust add			moveto			false charpath            currentpoint			_fontRotateAdjust sub			moveto			_sp eq			{				5 index 5 index rmoveto			} if			2 copy rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			5 index sub			3 index _sp eq			{				9 index sub			} if				currentpoint			exch 4 index stringwidth pop 2 div sub			exch _fontAscent sub			moveto				2 index false charpath				moveto pop pop		} ifelse	} cforall	6 npop} def/hjsp{    4 1 roll    {        dup cstring        false charpath        _sp eq        {            5 index 5 index rmoveto        } if        2 copy rmoveto    } cforall    6 npop} def/jsp{	matrix currentmatrix    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/sp{    matrix currentmatrix    0 0 0 7 3 roll    _lineorientation 0 eq {hjsp} {vjsp} ifelse} def/pl{	transform	0.25 sub round 0.25 add exch	0.25 sub round 0.25 add exch	itransform} def/setstrokeadjust where{	pop true setstrokeadjust	/c	{		curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll curveto	} def	/V	/v load def	/y	{		2 copy curveto	} def	/Y	/y load def	/l	{		lineto	} def	/L	/l load def	/m	{		moveto	} def}{	/c	{		pl curveto	} def	/C	/c load def	/v	{		currentpoint 6 2 roll pl curveto	} def	/V	/v load def	/y	{		pl 2 copy curveto	} def	/Y	/y load def	/l	{		pl lineto	} def	/L	/l load def	/m	{		pl moveto	} def} ifelse/d{	setdash} def/cf{} def/i{	dup 0 eq	{		pop cf	} if	setflat} def/j{	setlinejoin} def/J{	setlinecap} def/M{	setmiterlimit} def/w{	setlinewidth} def/XR{	0 ne	/_eo exch ddef} def/H{} def/h{	closepath} def/N{	_pola 0 eq	{		_doClip 1 eq		{			_eo {eoclip} {clip} ifelse /_doClip 0 ddef		} if		newpath	}	{		/CRender		{			N		} ddef	} ifelse} def/n{	N} def/F{	_pola 0 eq	{		_doClip 1 eq		{			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc			/_doClip 0 ddef		}		{			_pf		} ifelse	}	{		/CRender		{			F		} ddef	} ifelse} def/f{	closepath	F} def/S{	_pola 0 eq	{		_doClip 1 eq		{			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			_ps		} ifelse	}	{		/CRender		{			S		} ddef	} ifelse} def/s{	closepath	S} def/B{	_pola 0 eq	{		_doClip 1 eq		gsave F grestore		{			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc			/_doClip 0 ddef		}		{			S		} ifelse	}	{		/CRender		{			B		} ddef	} ifelse} def/b{	closepath	B} def/W{	/_doClip 1 ddef} def/*{	count 0 ne	{		dup type /stringtype eq		{			pop		} if	} if	newpath} def/u{} def/U{} def/q{	_pola 0 eq	{		gsave	} if} def/Q{	_pola 0 eq	{		grestore	} if} def/*u{	_pola 1 add /_pola exch ddef} def/*U{	_pola 1 sub /_pola exch ddef	_pola 0 eq	{		CRender	} if} def/D{	pop} def/*w{} def/*W{} def/`{	/_i save ddef	clipForward?	{		nulldevice	} if	6 1 roll 4 npop	concat pop	userdict begin	/showpage	{	} def	0 setgray	0 setlinecap	1 setlinewidth	0 setlinejoin	10 setmiterlimit	[] 0 setdash	/setstrokeadjust where {pop false setstrokeadjust} if	newpath	0 setgray	false setoverprint} def/~{ end	_i restore} def/_rgbtocmyk{	3	{		1 exch sub 3 1 roll	} repeat	3 copy 1 4 1 roll	3	{		3 index 2 copy gt		{			exch		} if		pop 4 1 roll	} repeat	pop pop pop	4 1 roll	3	{		3 index sub		3 1 roll	} repeat	4 -1 roll} def/setrgbfill{	_rgbf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_rgbf aload pop setrgbcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/setrgbstroke{	_rgbs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_rgbs aload pop setrgbcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/O{	0 ne	/_of exch ddef	/_lp /none ddef} def/R{	0 ne	/_os exch ddef	/_lp /none ddef} def/g{	/_gf exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/G{	/_gs exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/k{	_cf astore pop	/_fc	{		_lp /fill ne		{			_of setoverprint			_cf aload pop setcmykcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/K{	_cs astore pop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_cs aload pop setcmykcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/Xa{	_?cmyk {		3 npop k	}{		setrgbfill 4 npop	} ifelse} def/XA{	_?cmyk {		3 npop K	}{		setrgbstroke 4 npop	} ifelse} def/Xs{	/_gf exch ddef	5 npop	/_fc	{		_lp /fill ne		{			_of setoverprint			_gf setAIseparationgray			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XS{	/_gs exch ddef	5 npop	/_sc	{		_lp /stroke ne		{			_os setoverprint			_gs setAIseparationgray			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/Xx{	exch	/_gf exch ddef	0 eq {		findcmykcustomcolor	}{		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse		{			4 1 roll 3 npop			findcmykcustomcolor		}{			8 -4 roll 4 npop			findrgbcustomcolor		} ifelse	} ifelse	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/XX{	exch	/_gs exch ddef	0 eq {		findcmykcustomcolor	}{		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse		{			4 1 roll 3 npop			findcmykcustomcolor		}{			8 -4 roll 4 npop			findrgbcustomcolor		} ifelse	} ifelse	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/x{	/_gf exch ddef	findcmykcustomcolor	/_if exch ddef	/_fc	{		_lp /fill ne		{			_of setoverprint			_if _gf 1 exch sub setcustomcolor			/_lp /fill ddef		} if	} ddef	/_pf	{		_fc		_eo {eofill} {fill} ifelse	} ddef	/_psf	{		_fc		hvashow	} ddef	/_pjsf	{		_fc		hvawidthshow	} ddef	/_lp /none ddef} def/X{	/_gs exch ddef	findcmykcustomcolor	/_is exch ddef	/_sc	{		_lp /stroke ne		{			_os setoverprint			_is _gs 1 exch sub setcustomcolor			/_lp /stroke ddef		} if	} ddef	/_ps	{		_sc		stroke	} ddef	/_pss	{		_sc		ss	} ddef	/_pjss	{		_sc		jss	} ddef	/_lp /none ddef} def/XK{	3 -1 roll pop	0 eq	{		1 exch sub		3 {dup 3 1 roll mul 5 1 roll} repeat		mul 4 1 roll		K	}	{		1 exch sub 4 1 roll		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat		4 -1 roll pop		XA	} ifelse} def/Xk{	3 -1 roll pop	0 eq	{		1 exch sub		3 {dup 3 1 roll mul 5 1 roll} repeat		mul 4 1 roll		k	}	{		1 exch sub 4 1 roll		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat		4 -1 roll pop		Xa	} ifelse} def/A{	pop} def/annotatepage{userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse} def/XT {	pop pop} def/Xt {	pop} def/discard{	save /discardSave exch store	discardDict begin	/endString exch store	gt38?	{		2 add	} if	load	stopped	pop end	discardSave restore} bind defuserdict /discardDict 7 dict dup beginput/pre38Initialize{	/endStringLength endString length store	/newBuff buffer 0 endStringLength getinterval store	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store} def/shiftBuffer{	newBuff 0 newBuffButFirst putinterval	newBuffLast 0	currentfile read not	{	stop	} if	put} def0{	pre38Initialize	mark	currentfile newBuff readstring exch pop	{		{			newBuff endString eq			{				cleartomark stop			} if			shiftBuffer		} loop	}	{	stop	} ifelse} def1{	pre38Initialize	/beginString exch store	mark	currentfile newBuff readstring exch pop	{		{			newBuff beginString eq			{				/layerCount dup load 1 add store			}			{				newBuff endString eq				{					/layerCount dup load 1 sub store					layerCount 0 eq					{						cleartomark stop					} if				} if			} ifelse			shiftBuffer		} loop	} if} def2{	mark	{		currentfile buffer {readline} stopped {			% assume error was due to overfilling the buffer		}{			not			{				stop			} if			endString eq {				cleartomark stop			} if		}ifelse	} loop} def3{	/beginString exch store	/layerCnt 1 store	mark	{		currentfile buffer {readline} stopped {			% assume error was due to overfilling the buffer		}{			not			{				stop			} if			dup beginString eq			{				pop /layerCnt dup load 1 add store			}			{				endString eq				{					layerCnt 1 eq					{						cleartomark stop					}					{						/layerCnt dup load 1 sub store					} ifelse				} if			} ifelse		}ifelse	} loop} defenduserdict /clipRenderOff 15 dict dup beginput{	/n /N /s /S /f /F /b /B}{	{		_doClip 1 eq		{			/_doClip 0 ddef _eo {eoclip} {clip} ifelse		} if		newpath	} def} forall/Tr /pop load def/Bb {} def/BB /pop load def/Bg {12 npop} def/Bm {6 npop} def/Bc /Bm load def/Bh {4 npop} defend/Lb{	6 npop	7 2 roll	5 npop	0 eq	{		0 eq		{			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard		}		{						/clipForward? true def						/Tx /pop load def			/Tj /pop load def						currentdict end clipRenderOff begin begin		} ifelse	}	{		0 eq		{			save /discardSave exch store		} if	} ifelse} bind def/LB{	discardSave dup null ne	{		restore	}	{		pop		clipForward?		{			currentdict		 end		 end		 begin								/clipForward? false ddef		} if	} ifelse} bind def/Pb{	pop pop	0 (%AI5_EndPalette) discard} bind def/Np{	0 (%AI5_End_NonPrinting--) discard} bind def/Ln /pop load def/Ap/pop load def/Ar{	72 exch div	0 dtransform dup mul exch dup mul add sqrt	dup 1 lt	{		pop 1	} if	setflat} def/Mb{	q} def/Md{} def/MB{	Q} def/nc 4 dict defnc begin/setgray{	pop} bind def/setcmykcolor{	4 npop} bind def/setrgbcolor{	3 npop} bind def/setcustomcolor{	2 npop} bind defcurrentdict readonly popend/XP{	4 npop} bind def/XD{	pop} bind defendsetpacking%%EndResource%%BeginResource: procset Adobe_cshow 2.0 8%%Title: (Writing System Operators)%%Version: 2.0 8%%CreationDate: (1/23/89) ()%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)currentpacking true setpackinguserdict /Adobe_cshow 14 dict dup begin put/initialize{	Adobe_cshow begin	Adobe_cshow	{		dup xcheck		{			bind		} if		pop pop	} forall end	Adobe_cshow begin} def/terminate{currentdict Adobe_cshow eq	{ end	} if} def/cforall{	/_lobyte 0 ddef	/_hibyte 0 ddef	/_cproc exch ddef	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef	{		/_lobyte exch ddef		_hibyte 0 eq		_cscript 1 eq		_lobyte 129 ge _lobyte 159 le and		_lobyte 224 ge _lobyte 252 le and or and		_cscript 2 eq		_lobyte 161 ge _lobyte 254 le and and		_cscript 3 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript 25 eq		_lobyte 161 ge _lobyte 254 le and and    	_cscript -1 eq		or or or or and		{			/_hibyte _lobyte ddef		}		{			_hibyte 256 mul _lobyte add			_cproc			/_hibyte 0 ddef		} ifelse	} forall} def/cstring{	dup 256 lt	{		(s) dup 0 4 3 roll put	}	{		dup 256 idiv exch 256 mod		(hl) dup dup 0 6 5 roll put 1 4 3 roll put	} ifelse} def/clength{	0 exch	{ 256 lt { 1 } { 2 } ifelse add } cforall} def/hawidthshow{	{		dup cstring		show		_hvax _hvay rmoveto		_hvwb eq { _hvcx _hvcy rmoveto } if	} cforall} def/vawidthshow{	{		dup 255 le		_charorientation 1 eq		and		{			-90 rotate			0 _fontRotateAdjust rmoveto			cstring			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow			0 _fontRotateAdjust neg rmoveto			90 rotate		}		{			currentpoint			_fontHeight sub			exch _hvay sub exch _hvax sub			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if			3 2 roll			cstring			dup stringwidth pop 2 div neg _fontAscent neg rmoveto			show			moveto		} ifelse	} cforall} def/hvawidthshow{	6 1 roll	/_hvay exch ddef	/_hvax exch ddef	/_hvwb exch ddef	/_hvcy exch ddef	/_hvcx exch ddef	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse} def/hvwidthshow{	0 0 3 -1 roll hvawidthshow} def/hvashow{	0 0 0 6 -3 roll hvawidthshow} def/hvshow{	0 0 0 0 0 6 -1 roll hvawidthshow} defcurrentdict readonly pop endsetpacking%%EndResource%%BeginResource: procset Adobe_shading_AI8 1.0 0%%Title: (Adobe Illustrator 8 Shading Procset)%%Version: 1.0 0%%CreationDate: (12/17/97) ()%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)userdict /defaultpacking currentpacking put true setpackinguserdict /Adobe_shading_AI8 10 dict dup begin put/initialize {	Adobe_shading_AI8 begin	Adobe_shading_AI8 bdprocs	Mesh /initialize get exec} def/terminate {	currentdict Adobe_shading_AI8 eq {	 end	} if} def/bdprocs {	{		dup xcheck 1 index type /arraytype eq and {			bind		} if		pop pop	} forall} def/X! {pop} def/X# {pop pop} def/Mesh 40 dict defMesh begin/initialize {	Mesh bdprocs	Mesh begin		/emulate? /AI8MeshEmulation where {			pop AI8MeshEmulation		}{			systemdict /shfill known not		} ifelse def end} def/bd {	shadingdict begin} def/paint {	emulate? {	 end	}{		/_lp /none ddef _fc /_lp /none ddef				/AIColorSpace AIColorSpace tocolorspace store		/ColorSpace AIColorSpace topsspace store				version_ge_3010.106 not systemdict /setsmoothness known and {			0.0001 setsmoothness		} if				composite? {			/DataSource getdatasrc def			Matrix concat			currentdict end			shfill		}{			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {			 end			}{				/ColorSpace /DeviceGray store				/Decode [0 1 0 1 0 1] store				/DataSource getplatesrc def				Matrix concat				currentdict end				shfill			} ifelse		} ifelse	} ifelse} def/shadingdict 12 dict defshadingdict begin	/ShadingType 6 def	/BitsPerCoordinate 16 def	/BitsPerComponent 8 def	/BitsPerFlag 8 defend/datafile null def/databuf 256 string def/dataptr 0 def/srcspace null def/srcchannels 0 def/dstchannels 0 def/dstplate 0 def/srctodstcolor null def/getplatesrc {	/srcspace AIColorSpace store	/srcchannels AIColorSpace getnchannels store	/dstchannels 1 store	/dstplate getplateindex store	/srctodstcolor srcspace makesmarks {		dstplate 4 eq {			{1 exch sub}		}{			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}		} ifelse	}{		{srcchannels {pop} repeat 1}	} ifelse store	/datafile getdatasrc store	/rdpatch168 load DataLength () /SubFileDecode filter} def/getdatasrc {	/rdcmntline load /ASCII85Decode filter} def/rdpatch168 {	/dataptr 0 store	49 rdcount	4 {		dup {pop srcchannels getint8} if		dup {pop srctodstcolor dstchannels putint8 true} if	} repeat	{databuf 0 dataptr getinterval}{()} ifelse} def/rdpatch3216 {	/dataptr 0 store	97 rdcount	4 {		dup {pop srcchannels getint16} if		dup {pop srctodstcolor dstchannels putint16 true} if	} repeat	{databuf 0 dataptr getinterval}{()} ifelse} def/rdcount {	dup 0 gt {		datafile databuf dataptr 4 -1 roll getinterval readstring		exch length dataptr add /dataptr exch store	}{		true	} ifelse} def/getint8 {	mark true 3 -1 roll	{		dup {pop datafile read} if		dup {pop 255 div true} if	} repeat	{		counttomark 1 add -1 roll pop true	}{		cleartomark false	} ifelse} def/putint8 {	dup dataptr add /dataptr exch store	dataptr exch	{		1 sub exch		255 mul cvi		databuf 2 index		3 -1 roll put	} repeat	pop} def /getint16 {	mark true 3 -1 roll	{		dup {pop datafile read} if		dup {pop 256 mul datafile read} if		dup {pop add 65535 div true} if	} repeat	{		counttomark 1 add -1 roll pop true	}{		cleartomark false	} ifelse} def/putint16 {	dup 2 mul dataptr add /dataptr exch store	dataptr exch	{		2 sub exch		65535 mul cvi dup		256 idiv databuf 3 index 3 -1 roll put		256 mod databuf 2 index 1 add 3 -1 roll put	} repeat	pop} def /srcbuf 256 string def/rdcmntline {	currentfile srcbuf readline pop	(%) anchorsearch {pop} if} def/getplateindex {	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall} def/aicsarray 4 array def/aicsaltvals 4 array def/aicsaltcolr aicsaltvals def/tocolorspace {	dup type /arraytype eq {		mark exch aload pop		aicsarray 0 3 -1 roll put		aicsarray 1 3 -1 roll put		dup aicsarray 2 3 -1 roll put		gettintxform aicsarray 3 3 -1 roll put		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store		aicsaltcolr astore pop pop		aicsarray	} if} def/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def/gettintxform {	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load} def/getnchannels {	dup type /arraytype eq {0 get} if	colorspacedict exch get begin Channels end} def/makesmarks {	composite? {		pop true	}{		dup dup type /arraytype eq {0 get} if		colorspacedict exch get begin MarksPlate end	} ifelse} def/markingplate {	composite? {		pop true	}{		dup type /arraytype eq {			dup length getplateindex gt {getplateindex get}{pop false} ifelse		} if	} ifelse} def/tocmyk {	dup dup type /arraytype eq {0 get} if	colorspacedict exch get begin ToCMYK end} def/topsspace {	dup dup type /arraytype eq {0 get} if	colorspacedict exch get begin ToPSSpace end} def/colorspacedict 5 dict dup begin	/DeviceGray 4 dict dup begin		/Channels 1 def		/MarksPlate {pop black?} def		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def		/ToPSSpace {} def end def	/DeviceRGB 4 dict dup begin		/Channels 3 def		/MarksPlate {pop isCMYKSep?} def		/ToCMYK {pop _rgbtocmyk} def		/ToPSSpace {} def end def	/DeviceCMYK 4 dict dup begin		/Channels 4 def		/MarksPlate {pop isCMYKSep?} def		/ToCMYK {pop} def		/ToPSSpace {} def end def	/Separation 4 dict dup begin		/Channels 1 def		/MarksPlate {			/findcmykcustomcolor where {				pop dup 1 exch ToCMYK 5 -1 roll 1 get				findcmykcustomcolor 1 setcustomcolor				systemdict /currentgray get exec				1 ne			}{				pop false			} ifelse		} def		/ToCMYK {			dup 2 get mark exch 4 2 roll			3 get exec			counttomark -1 roll tocmyk			5 -1 roll pop		} def		/ToPSSpace {} def end def	/Process 4 dict dup begin		/Channels 1 def		/MarksPlate {			isCMYKSep? {				1 exch ToCMYK 4 array astore getplateindex get 0 ne 			}{				pop false			} ifelse		} def		/ToCMYK {			dup 2 get mark exch 4 2 roll			3 get exec			counttomark -1 roll tocmyk			5 -1 roll pop		} def		/ToPSSpace {			4 array copy dup 0 /Separation put		} def end defend def/isoverprint {	/currentoverprint where {pop currentoverprint}{_of} ifelse} def/version_ge_3010.106 {   version {cvr} stopped {      pop      false   }{      3010.106 ge   } ifelse} defendenddefaultpacking setpacking%%EndResource%%EndProlog%%BeginSetupuserdict /_useSmoothShade true putuserdict /_aicmykps false putuserdict /_forceToCMYK false putAdobe_level2_AI5 /initialize get execAdobe_cshow /initialize get execAdobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get execAdobe_ColorImage_AI6 /initialize get execAdobe_shading_AI8 /initialize get execAdobe_Illustrator_AI5 /initialize get exec%AI5_Begin_NonPrintingNp%AI8_BeginBrushPattern(New Pattern 1)0 Au1 Ap800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR-7996.75 8047 m-7996.75 8023 L-8046.75 8023 L-8046.75 8047 L-7996.75 8047 Lnu0 Ap0 O1 g-8016.75 8045 m-8028.96 8048.0527 -8037.4434 8038.061 -8046.75 8030.9512 CF-8006.75 8045 m-8023.1279 8049.0942 -8032.8008 8029.7222 -8046.75 8025.3154 CF-8046.75 8025 m-8026.75 8020 -8016.75 8050 -7996.75 8045 CF-8036.75 8025 m-8020.3721 8020.9058 -8010.6992 8040.2778 -7996.75 8044.6846 CF-8026.75 8025 m-8014.54 8021.9473 -8006.0566 8031.939 -7996.75 8039.0488 CF-8006.75 8025 m-8003.1279 8024.0942 -7999.835 8024.3408 -7996.75 8025.3154 CF-8036.75 8045 m-8040.3721 8045.9058 -8043.665 8045.6592 -8046.75 8044.6846 CF-8006.7817 8025.125 m-8012.9009 8023.6162 -8016.7817 8025.125 V-8020.877 8023.6479 -8026.7817 8025.125 V-8031.7446 8023.4497 -8036.7817 8025.125 V-8042.7969 8023.5742 -8046.7817 8025.125 V-8046.7817 8044.8096 L-8043.6958 8045.7842 -8040.2969 8045.9912 -8036.3799 8044.9082 C-8030.2134 8046.4912 -8026.4634 8044.9082 V-8021.4634 8046.4912 -8016.3799 8044.8242 V-8012.0474 8046.4082 -8006.3799 8044.9082 V-8000.8799 8046.3242 -7996.7817 8045.125 V-7996.7817 8025.4399 L-7999.5254 8024.4287 -8002.6514 8023.9287 -8006.7817 8025.125 Cf0 R0 G1 J 1 j 0.5 w-8026.75 8045 m-8034.54 8046.9473 -8040.813 8043.585 -8046.75 8039.0488 CS-8016.75 8045 m-8028.96 8048.0527 -8037.4434 8038.061 -8046.75 8030.9512 CS-8006.75 8045 m-8023.1279 8049.0942 -8032.8008 8029.7222 -8046.75 8025.3154 CS-8046.75 8025 m-8026.75 8020 -8016.75 8050 -7996.75 8045 CS-8036.75 8025 m-8020.3721 8020.9058 -8010.6992 8040.2778 -7996.75 8044.6846 CS-8026.75 8025 m-8014.54 8021.9473 -8006.0566 8031.939 -7996.75 8039.0488 CS-8016.75 8025 m-8008.96 8023.0527 -8002.687 8026.415 -7996.75 8030.9512 CS-8006.75 8025 m-8003.1279 8024.0942 -7999.835 8024.3408 -7996.75 8025.3154 CS-8036.75 8045 m-8040.3721 8045.9058 -8043.665 8045.6592 -8046.75 8044.6846 CSUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 2)0 Au800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR-8046 8046 m-7981.187 8046 L-7981.187 7981.9023 L-8046 7981.9023 L-8046 8046 Lnu0 O0 g-8011.6978 8004.4297 m-8013.6094 7981.9023 L-8015.5215 8004.4297 L-8014.9033 8004.3066 -8014.2642 8004.2402 -8013.6094 8004.2402 c-8012.9551 8004.2402 -8012.3159 8004.3066 -8011.6978 8004.4297 Cf-8023.2402 8012.3975 m-8046 8014.3306 L-8023.1138 8016.2734 L-8023.2856 8015.5474 -8023.3848 8014.793 -8023.3848 8014.0161 c-8023.3848 8013.4634 -8023.3281 8012.9248 -8023.2402 8012.3975 Cf-8018.519 8005.5718 m-8032.1626 7996.8047 L-8022.2153 8009.377 L-8021.3574 8007.791 -8020.0718 8006.4766 -8018.519 8005.5718 Cf-8015.481 8023.6074 m-8013.5786 8046 L-8011.6768 8023.5967 L-8012.3018 8023.7222 -8012.9473 8023.791 -8013.6094 8023.791 c-8014.25 8023.791 -8014.873 8023.7246 -8015.481 8023.6074 Cf-8003.9609 8015.5073 m-7981.187 8013.5728 L-8004.083 8011.6289 L-8004.083 8011.8506 L-8003.9258 8012.5488 -8003.834 8013.2695 -8003.834 8014.0161 c-8003.834 8014.5234 -8003.8848 8015.019 -8003.9609 8015.5073 Cf-8022.1138 8018.8262 m-8032.1641 8031.5298 L-8018.2778 8022.6055 L-8019.8823 8021.7305 -8021.2114 8020.416 -8022.1138 8018.8262 Cf-8004.9961 8009.3945 m-7994.875 7996.6055 L-8008.7666 8005.5313 L-8007.1768 8006.4414 -8005.8633 8007.7793 -8004.9961 8009.3945 Cf-8008.6895 8022.4512 m-7994.873 8031.3281 L-8004.9658 8018.5728 L-8005.8198 8020.1895 -8007.1152 8021.5313 -8008.6895 8022.4512 Cf-8004.8887 8018.6138 m-8004.3862 8017.6641 -8004.043 8016.6206 -8003.875 8015.519 c-8003.7993 8015.0298 -8003.748 8014.5273 -8003.748 8014.0161 c-8003.748 8013.2642 -8003.8398 8012.5352 -8003.998 8011.8311 c-8004.1958 8010.957 -8004.5049 8010.124 -8004.918 8009.3545 c-8005.7954 8007.7246 -8007.1191 8006.374 -8008.7241 8005.4561 c-8009.6294 8004.9375 -8010.6226 8004.5537 -8011.6802 8004.3457 c-8012.3047 8004.2207 -8012.9497 8004.1519 -8013.6094 8004.1519 c-8014.2695 8004.1519 -8014.915 8004.2207 -8015.5391 8004.3457 c-8016.623 8004.561 -8017.6382 8004.957 -8018.5625 8005.4961 c-8020.1313 8006.4102 -8021.4282 8007.7358 -8022.291 8009.335 c-8022.7969 8010.2695 -8023.145 8011.2969 -8023.3262 8012.3823 c-8023.415 8012.916 -8023.4727 8013.459 -8023.4727 8014.0161 c-8023.4727 8014.8008 -8023.3711 8015.561 -8023.1978 8016.293 c-8022.981 8017.207 -8022.6406 8018.0737 -8022.187 8018.8706 c-8021.2793 8020.4727 -8019.939 8021.8008 -8018.3174 8022.6826 c-8017.4487 8023.1553 -8016.5 8023.498 -8015.4961 8023.6934 c-8014.8848 8023.811 -8014.2554 8023.8774 -8013.6094 8023.8774 c-8012.9414 8023.8774 -8012.29 8023.8086 -8011.6602 8023.6826 c-8010.5786 8023.4673 -8009.5664 8023.0654 -8008.6455 8022.5273 c-8007.0566 8021.5977 -8005.751 8020.2441 -8004.8887 8018.6138 cfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 3)0 Au1 Ap800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR-8036.75 8047 m-8036.75 8023 L-8046.75 8023 L-8046.75 8047 L-8036.75 8047 Lnuu0 Ap0 O1 g-8037.4058 8038.5361 m-8036.9878 8037.4355 -8036.75 8036.2471 -8036.75 8035 c-8036.75 8033.1377 -8037.2681 8031.4004 -8038.1543 8029.9072 c-8039.897 8026.9736 -8043.0898 8025 -8046.75 8025 C-8046.75 8045 L-8046.4297 8045 -8046.1143 8044.9814 -8045.8018 8044.9521 c-8043.9121 8044.7754 -8042.1807 8044.0645 -8040.7441 8042.9824 c-8039.2471 8041.8545 -8038.0801 8040.3184 -8037.4058 8038.5361 cf0 R0 G1 J 1 j 0.5 w-8046.75 8025.3174 m-8043.7207 8026.2744 -8040.8926 8027.9326 -8038.1543 8029.9072 CS-8046.75 8030.9512 m-8043.5991 8033.3564 -8040.543 8036.0869 -8037.4058 8038.5361 CS-8040.7441 8042.9824 m-8042.8105 8041.8916 -8044.7993 8040.5342 -8046.75 8039.043 CS-8045.8018 8044.9521 m-8046.1191 8044.8682 -8046.4375 8044.7852 -8046.75 8044.6865 CS-8040.7441 8042.9824 m-8042.1807 8044.0645 -8043.9121 8044.7744 -8045.8018 8044.9521 CS-8037.4058 8038.5361 m-8036.9878 8037.4355 -8036.75 8036.2471 -8036.75 8035 c-8036.75 8033.1377 -8037.2681 8031.4004 -8038.1543 8029.9072 CS-8046.75 8045 m-8046.4297 8045 -8046.1143 8044.9814 -8045.8018 8044.9521 CS-8040.7441 8042.9824 m-8039.2471 8041.8545 -8038.0801 8040.3184 -8037.4058 8038.5361 CS-8038.1543 8029.9072 m-8039.8975 8026.9736 -8043.0898 8025 -8046.75 8025 CSUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 5)0 Au800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR-7888.3994 8047 m-7888.3994 8033.4199 L-8047 8033.4199 L-8047 8047 L-7888.3994 8047 Lnuu0 O0.285 0.228 0.171 0 k-7903.0786 8045.4849 m-7903.043 8046.6895 L-7889.5103 8047.5176 -7888.8418 8046.2822 v-7888.7441 8046.1016 -7888.647 8045.7153 -7888.561 8045.1934 C-7890.584 8045.8242 -7900.291 8045.5713 -7903.0786 8045.4849 Cf0.44 0.352 0.264 0 k-7903.4063 8034.0234 m-7903.3711 8035.2671 L-7900.4912 8035.0488 -7890.1914 8034.3169 -7888.543 8034.8657 C-7888.7031 8034.2192 -7888.9199 8033.7646 -7889.2046 8033.6152 c-7890.8306 8032.7656 -7903.4063 8034.0234 Yf0.145 0.116 0.087 0 k-7903.3711 8035.2671 m-7903.0786 8045.4849 L-7900.291 8045.5713 -7890.584 8045.8242 -7888.561 8045.1934 C-7888.1519 8042.7778 -7887.9258 8037.3599 -7888.543 8034.8657 C-7890.1914 8034.3169 -7900.4912 8035.0488 -7903.3711 8035.2671 CfUu0.155 0.124 0.093 0 k-7928.9375 8039.2734 m-7927.897 8039.6558 L-7909.0728 8035.1465 L-7909.481 8034.3145 L-7928.3633 8036.7246 L-7929.252 8037.0054 L-7929.6504 8036.8936 -7930.1934 8036.8242 V-7929.6094 8037.2378 -7929.1426 8038.1406 -7928.9375 8039.2734 Cfu0.085 0.068 0.051 0 k-7933.7993 8043.666 m-7934.5977 8043.7217 -7931.749 8043.6641 Y-7932.3481 8043.0176 -7932.771 8041.8198 -7932.8105 8040.4375 c-7932.8169 8040.2246 -7932.8105 8040.0176 -7932.7993 8039.8135 C-7933.041 8039.707 -7933.0918 8039.7734 -7933.6289 8039.5649 C-7933 8043.6113 -7933.7993 8043.666 vf0.305 0.244 0.183 0 k-7932.3442 8036.8672 m-7932.5527 8036.8105 -7932.4937 8038.9302 Y-7931.4785 8039.7583 L-7929.8359 8038.9434 L-7928.9375 8039.2734 L-7929.1426 8038.1406 -7929.6094 8037.2378 -7930.1934 8036.8242 C-7930.6094 8036.771 -7931.874 8036.7998 -7932.3442 8036.8672 CfU0.115 0.092 0.069 0 k-7928.9375 8039.2734 m-7929.8359 8038.9434 L-7931.4785 8039.7583 L-7932.4937 8038.9302 L-7932.793 8039.708 -7932.7993 8039.8135 V-7931.5137 8040.3794 -7930.1831 8040.7402 -7928.8398 8040.9258 C-7928.79 8040.7271 -7928.7842 8040.543 -7928.79 8040.3369 c-7928.7998 8039.9722 -7928.8218 8039.6182 -7928.9375 8039.2734 Cf0.41 0.328 0.246 0 k-7909.4512 8035.397 m-7911.377 8036.6426 -7920.3862 8042.0986 -7928.8398 8040.9258 C-7928.9038 8042.0928 -7929.248 8043.0913 -7929.75 8043.6631 C-7929.1895 8043.6626 L-7908.7402 8046.7559 L-7909.0366 8036.4258 L-7909.0728 8035.1465 L-7909.2046 8035.2378 -7909.4512 8035.397 vf0.395 0.316 0.237 0 k-7932.8105 8040.4375 m-7932.771 8041.8198 -7932.3481 8043.0176 -7931.749 8043.6641 C-7929.6807 8043.6631 L-7929.1782 8043.0913 -7928.8218 8042.0713 -7928.8398 8040.9258 C-7930.1831 8040.7402 -7931.5137 8040.3794 -7932.7993 8039.8135 C-7932.8105 8040.0176 -7932.8169 8040.2246 -7932.8105 8040.4375 cfUu0 0 0 0.11 k-7903.2642 8034.2017 m-7902.2407 8034.0352 L-7903.2642 8034.2017 L-7903.2642 8034.2017 Lf0 0 0 0.34 k-7909.481 8034.3145 m-7909.0728 8035.1465 L-7907.6714 8034.918 L-7906.5234 8034.731 L-7904.6758 8034.4302 L-7903.2642 8034.2017 L-7902.2407 8034.0352 L-7902.2954 8033.7168 -7902.3672 8033.498 -7902.4648 8033.4199 C-7909.481 8034.3145 Lf0 0 0 0.32 k-7907.8042 8039.207 m-7908.041 8046.8618 L-7902.7144 8047 L-7901.7266 8043.5142 -7902.1816 8039.1543 V-7907.8042 8039.207 LfU0.025 0.02 0.015 0 k-7901.3223 8036.3848 m-7898.373 8036.9199 -7895.2402 8037.1602 -7892.3159 8036.3618 c-7892.2856 8036.3496 -7892.2754 8036.3184 -7892.2871 8036.2969 c-7892.2881 8036.2656 -7892.3198 8036.2559 -7892.3418 8036.2559 c-7895.2422 8037.0649 -7898.375 8036.8242 -7901.3042 8036.2783 c-7901.3262 8036.2793 -7901.3574 8036.291 -7901.3672 8036.3223 c-7901.3662 8036.3442 -7901.355 8036.375 -7901.3223 8036.3848 c-7901.3223 8036.3848 lf-7899.8374 8035.3071 m-7899.7295 8035.3794 -7899.6313 8035.4946 -7899.5234 8035.502 c-7895.7886 8035.832 -7892.1631 8035.7817 -7888.4746 8035.6641 c-7888.4526 8035.6641 -7888.4209 8035.6426 -7888.4214 8035.6206 c-7888.4214 8035.5879 -7888.4551 8035.5679 -7888.4766 8035.5679 c-7891.3223 8035.6816 -7894.1401 8035.6992 -7897.0039 8035.5352 c-7897.9336 8035.4766 -7898.9082 8035.7402 -7899.7778 8035.2207 c-7899.7993 8035.2114 -7899.8306 8035.2114 -7899.8506 8035.2334 c-7899.8618 8035.2559 -7899.8594 8035.2871 -7899.8374 8035.3071 c-7899.8374 8035.3071 lf-7895.373 8037.3672 m-7893.5098 8038.6802 -7891.3022 8039.374 -7889.1001 8039.8862 c-7889.0679 8039.897 -7889.0474 8039.8848 -7889.0366 8039.8535 c-7889.0273 8039.8198 -7889.0488 8039.8008 -7889.0703 8039.79 c-7891.2617 8039.2656 -7893.459 8038.603 -7895.3105 8037.2798 c-7895.3433 8037.2598 -7895.375 8037.271 -7895.3848 8037.293 c-7895.4058 8037.3145 -7895.3945 8037.3457 -7895.373 8037.3672 c-7895.373 8037.3672 lf-7900.9321 8044.0566 m-7898.7295 8044.5703 -7896.5298 8045.0303 -7894.2798 8045.2754 c-7894.2598 8045.2847 -7894.229 8045.2642 -7894.229 8045.2422 c-7894.2183 8045.209 -7894.2407 8045.1777 -7894.2729 8045.1782 c-7896.5122 8044.8809 -7898.7305 8044.5176 -7900.9126 8043.9502 c-7900.9351 8043.9512 -7900.9673 8043.9634 -7900.9766 8043.9946 c-7900.9751 8044.0161 -7900.9648 8044.0479 -7900.9321 8044.0566 c-7900.9321 8044.0566 lf-7900.439 8043.3599 m-7898.3457 8044.1978 -7896.1016 8043.9297 -7893.9023 8043.9634 c-7893.8706 8043.9609 -7893.8496 8043.939 -7893.8506 8043.9082 c-7893.8521 8043.875 -7893.873 8043.855 -7893.8945 8043.855 c-7896.0928 8043.8442 -7898.3374 8044.0991 -7900.4209 8043.2529 c-7900.4434 8043.2534 -7900.4746 8043.2656 -7900.4834 8043.2969 c-7900.4834 8043.3184 -7900.4722 8043.3506 -7900.439 8043.3599 c-7900.439 8043.3599 lf-7899.707 8044.7046 m-7898.3833 8044.752 -7897.1504 8044.5474 -7895.8271 8044.209 c-7895.3594 8044.0991 -7894.9199 8044.2266 -7894.4609 8044.2129 c-7893.897 8044.1978 l-7893.874 8044.1958 -7893.8633 8044.1855 -7893.8535 8044.1738 c-7893.834 8044.1519 -7893.8442 8044.1206 -7893.8662 8044.0991 c-7894.0625 8043.9458 l-7894.0742 8043.9458 -7894.085 8043.9351 -7894.0962 8043.9351 c-7894.5 8043.9473 l-7895.9551 8044.1914 -7897.457 8044.6719 -7898.8926 8044.0742 c-7898.9258 8044.0649 -7898.957 8044.0854 -7898.9673 8044.1074 c-7898.9673 8044.1392 -7898.9551 8044.1602 -7898.9336 8044.1714 c-7897.647 8044.6992 -7896.1714 8044.4751 -7894.8818 8044.0542 c-7894.0918 8044.043 L-7894.124 8044.0337 L-7893.9282 8044.187 L-7893.8984 8044.0898 L-7894.4639 8044.1064 l-7894.9321 8044.1406 -7895.3848 8043.9834 -7895.8398 8044.103 c-7897.1543 8044.4609 -7898.3975 8044.625 -7899.71 8044.5986 c-7899.7422 8044.6001 -7899.7642 8044.6206 -7899.7617 8044.6538 c-7899.7617 8044.6855 -7899.7402 8044.7065 -7899.707 8044.7046 c-7899.707 8044.7046 lf-7900.5718 8045.061 m-7897.8711 8046.2207 -7894.9023 8045.5703 -7892.1279 8045.1816 c-7891.7832 8045.2886 l-7891.7617 8045.2993 -7891.7417 8045.2871 -7891.7207 8045.2656 c-7891.71 8045.2441 -7891.7217 8045.2129 -7891.7422 8045.2026 c-7892.0801 8045.0098 l-7894.7754 8044.3926 -7897.5391 8044.7817 -7900.271 8044.7856 c-7900.3022 8044.7871 -7900.3232 8044.8086 -7900.3223 8044.8398 c-7900.3198 8044.8721 -7900.2983 8044.8926 -7900.2681 8044.8926 c-7897.6738 8044.9351 -7895.0303 8044.4434 -7892.4727 8045.0742 c-7891.7954 8045.2886 L-7891.7534 8045.1914 L-7892.1406 8045.0854 l-7894.9058 8045.4424 -7897.8418 8046.1343 -7900.5313 8044.9746 c-7900.5537 8044.9648 -7900.585 8044.9648 -7900.5962 8044.998 c-7900.6055 8045.019 -7900.605 8045.0513 -7900.5718 8045.061 c-7900.5718 8045.061 lf-7897.6895 8038.3945 m-7896.3945 8038.9009 -7894.9834 8038.6465 -7893.6802 8038.3442 c-7893.647 8038.3418 -7893.6367 8038.3198 -7893.6382 8038.2886 c-7893.6504 8038.2568 -7893.6714 8038.2466 -7893.7031 8038.248 c-7894.998 8038.5303 -7896.377 8038.8154 -7897.6504 8038.2969 c-7897.6826 8038.2871 -7897.7144 8038.2993 -7897.7246 8038.3311 c-7897.7222 8038.353 -7897.7114 8038.3848 -7897.6895 8038.3945 c-7897.6895 8038.3945 lf-7898.1401 8040.2207 m-7896.2266 8040.6895 -7894.3145 8041.103 -7892.355 8041.3242 c-7892.3242 8041.334 -7892.3022 8041.313 -7892.293 8041.2798 c-7892.2954 8041.2598 -7892.3159 8041.229 -7892.3374 8041.229 c-7894.2959 8041.0078 -7896.209 8040.582 -7898.1206 8040.1138 c-7898.1426 8040.1152 -7898.1738 8040.126 -7898.1831 8040.1582 c-7898.1831 8040.1802 -7898.1719 8040.2114 -7898.1401 8040.2207 c-7898.1401 8040.2207 lf-7898.9336 8042.6353 m-7896.499 8043.4609 -7893.8647 8043.0542 -7891.3457 8043.0879 c-7891.313 8043.0879 -7891.293 8043.0664 -7891.293 8043.0337 c-7891.2954 8043.0122 -7891.3159 8042.9922 -7891.3481 8042.9922 c-7893.8574 8042.916 -7896.481 8043.3848 -7898.8945 8042.5264 c-7898.9282 8042.5273 -7898.959 8042.5391 -7898.9688 8042.561 c-7898.9678 8042.5918 -7898.9561 8042.624 -7898.9336 8042.6353 c-7898.9336 8042.6353 lf-7894.0542 8043.8496 m-7892.6582 8044.5449 -7891.0503 8044.4033 -7889.5342 8044.4673 c-7889.502 8044.4648 -7889.4824 8044.4434 -7889.4824 8044.4121 c-7889.4834 8044.3906 -7889.5054 8044.3594 -7889.5366 8044.3594 c-7891.0137 8044.2207 -7892.6489 8044.5234 -7894.0039 8043.7617 c-7894.0366 8043.7529 -7894.0679 8043.7642 -7894.0786 8043.7866 c-7894.0879 8043.8081 -7894.0767 8043.8398 -7894.0542 8043.8496 c-7894.0542 8043.8496 lf-7893.3418 8040.4248 m-7892.3926 8040.3975 -7891.4336 8040.3706 -7890.4839 8040.3423 c-7890.4526 8040.3418 -7890.4312 8040.3198 -7890.4336 8040.2881 c-7890.4336 8040.2559 -7890.4551 8040.2354 -7890.4878 8040.2358 c-7891.437 8040.2642 -7892.397 8040.291 -7893.3457 8040.3184 c-7893.377 8040.3184 -7893.3975 8040.3418 -7893.3975 8040.373 c-7893.397 8040.4038 -7893.374 8040.4258 -7893.3418 8040.4248 c-7893.3418 8040.4248 lf-7891.1592 8038.0361 m-7890.6895 8038.0649 -7890.209 8038.0718 -7889.7383 8038.0918 c-7889.7168 8038.0913 -7889.6855 8038.0688 -7889.6865 8038.0366 c-7889.687 8038.0039 -7889.71 8037.9839 -7889.7417 8037.9839 c-7890.2114 8037.9873 -7890.6816 8037.9375 -7891.1514 8037.939 c-7891.1831 8037.9297 -7891.2031 8037.9512 -7891.2134 8037.9839 c-7891.2129 8038.0161 -7891.1914 8038.0366 -7891.1592 8038.0361 c-7891.1592 8038.0361 lf-7898.9702 8040.2344 m-7898.5688 8040.5103 -7898.125 8040.6802 -7897.645 8040.751 c-7897.6113 8040.7607 -7897.5918 8040.7383 -7897.5806 8040.7168 c-7897.5703 8040.6855 -7897.5928 8040.6543 -7897.6152 8040.6543 c-7898.0854 8040.5718 -7898.5176 8040.4023 -7898.9209 8040.147 c-7898.9521 8040.1377 -7898.9849 8040.1382 -7898.9946 8040.1714 c-7899.0039 8040.1934 -7898.9922 8040.2246 -7898.9702 8040.2344 c-7898.9702 8040.2344 lf-7900.1904 8046.085 m-7897.7344 8046.5273 -7895.2983 8047.001 -7892.7993 8046.7266 c-7892.7778 8046.7266 -7892.7568 8046.7041 -7892.7578 8046.6719 c-7892.7578 8046.6406 -7892.7798 8046.6191 -7892.8022 8046.6191 c-7895.291 8046.873 -7897.7344 8046.4849 -7900.1719 8045.9775 c-7900.1934 8045.9785 -7900.2256 8045.9902 -7900.2344 8046.0215 c-7900.2344 8046.043 -7900.2222 8046.0752 -7900.1904 8046.085 c-7900.1904 8046.085 lf0.195 0.156 0.117 0 k-7900.166 8034.645 m-7897.7969 8034.2671 -7895.4058 8034.3481 -7893.0298 8034.5898 c-7892.998 8034.5879 -7892.9766 8034.5664 -7892.9766 8034.5352 c-7892.9785 8034.5137 -7893 8034.4824 -7893.0215 8034.4824 c-7895.4082 8034.2422 -7897.791 8034.1602 -7900.1694 8034.5391 c-7900.2026 8034.5391 -7900.2222 8034.561 -7900.2217 8034.5938 c-7900.2207 8034.625 -7900.1992 8034.6465 -7900.166 8034.645 c-7900.166 8034.645 lf0.335 0.268 0.201 0 k-7899.4351 8034.1113 m-7896.9282 8034.1152 -7894.4146 8034.2778 -7891.918 8033.897 c-7891.8862 8033.8945 -7891.8647 8033.873 -7891.8662 8033.8418 c-7891.8672 8033.8086 -7891.8896 8033.7886 -7891.9209 8033.7886 c-7894.418 8034.1694 -7896.9297 8034.0298 -7899.4375 8034.0054 c-7899.46 8034.0054 -7899.481 8034.0273 -7899.4785 8034.0591 c-7899.4785 8034.0918 -7899.457 8034.1118 -7899.4351 8034.1113 c-7899.4351 8034.1113 lf0.205 0.164 0.123 0 k-7900.9766 8034.3262 m-7899.5039 8034.668 -7898.0078 8034.4023 -7896.5391 8034.2207 c-7896.5078 8034.2207 -7896.4873 8034.1978 -7896.499 8034.166 c-7896.5 8034.1343 -7896.5215 8034.1138 -7896.5537 8034.125 c-7898.0103 8034.2842 -7899.4961 8034.583 -7900.9473 8034.2192 c-7900.9785 8034.2207 -7901.0103 8034.2319 -7901.0098 8034.2642 c-7901.019 8034.2847 -7900.998 8034.3169 -7900.9766 8034.3262 c-7900.9766 8034.3262 lf-7894.3535 8033.7954 m-7893.1978 8033.9214 -7892.0273 8033.8145 -7890.8926 8033.5898 c-7890.8711 8033.5786 -7890.8506 8033.5566 -7890.8618 8033.5249 c-7890.8623 8033.5034 -7890.8945 8033.4824 -7890.916 8033.4946 c-7892.0503 8033.7402 -7893.1914 8033.7935 -7894.3462 8033.689 c-7894.3794 8033.6895 -7894.3984 8033.7114 -7894.4087 8033.7329 c-7894.4082 8033.7646 -7894.3862 8033.7856 -7894.3535 8033.7954 c-7894.3535 8033.7954 lf0.335 0.268 0.201 0 k-7901.2681 8036.4473 m-7899.9214 8037.189 -7898.3066 8036.5977 -7896.855 8036.6416 c-7896.8223 8036.6406 -7896.8022 8036.6191 -7896.8022 8036.5854 c-7896.8042 8036.5654 -7896.8262 8036.5449 -7896.8574 8036.5449 c-7898.2886 8036.4902 -7899.8823 8037.0801 -7901.2168 8036.3506 c-7901.2383 8036.3398 -7901.2695 8036.3521 -7901.291 8036.374 c-7901.3008 8036.395 -7901.2886 8036.4282 -7901.2681 8036.4473 c-7901.2681 8036.4473 lf-7899.8945 8038.5649 m-7897.6719 8039.0449 -7895.3896 8038.6162 -7893.1504 8038.5625 c-7893.1177 8038.5615 -7893.0977 8038.5391 -7893.0977 8038.5078 c-7893.1001 8038.4863 -7893.1318 8038.4673 -7893.1519 8038.4673 c-7895.3833 8038.4775 -7897.6519 8038.981 -7899.875 8038.457 c-7899.8975 8038.457 -7899.9287 8038.4688 -7899.9375 8038.502 c-7899.9375 8038.5225 -7899.9258 8038.5542 -7899.8945 8038.5649 c-7899.8945 8038.5649 lf-7894.0273 8035.1406 m-7892.3496 8035.9688 -7890.499 8036.502 -7888.603 8036.3618 c-7888.5718 8036.3618 -7888.5513 8036.3394 -7888.5527 8036.3066 c-7888.5527 8036.2754 -7888.5742 8036.2534 -7888.6074 8036.2559 c-7890.481 8036.416 -7892.3198 8035.8608 -7893.9873 8035.0542 c-7894.0078 8035.0449 -7894.041 8035.0449 -7894.0503 8035.0786 c-7894.061 8035.0991 -7894.061 8035.1313 -7894.0273 8035.1406 c-7894.0273 8035.1406 lfu0.5 0.85 1 0.45 k-8047 8041.9082 m-8047.0254 8042.4878 -8046.5664 8043.187 -8045.167 8043.9902 C-8044.8521 8044.0034 -8043.3945 8044.0234 -8041.0889 8044.0488 C-8041.0889 8041.8223 L-8043.1382 8041.8457 -8045.1177 8041.8862 -8047 8041.9082 Cf-8046.5088 8040.9688 m-8041.0889 8040.8447 L-8041.0889 8039.8145 L-8044.644 8039.959 L-8045.8145 8040.3306 -8046.5088 8040.9688 Vf0.5 0.85 1 0.32 k-8041.0889 8040.8257 m-8046.4746 8040.9434 L-8046.7695 8041.2144 -8046.9849 8041.5566 -8047 8041.9282 C-8045.1177 8041.9063 -8043.1382 8041.8848 -8041.0889 8041.8618 C-8041.0889 8040.8257 Lf0.5 0.85 1 0.45 k-7936.1504 8040.6177 m-8014.3584 8041.541 -8041.1079 8041.8418 V-8041.1079 8044.0488 L-8024.8145 8044.2319 -7965.9902 8044.707 Y-7931.749 8043.6641 L-7932.457 8040.5679 L-7936.1504 8040.6177 Lf0.5 0.85 1 0.12 k-8041.1079 8039.8145 m-8041.1079 8040.8447 L-7932.4258 8039 L-7932.3833 8036.8633 L-7965.6553 8036.7129 L-8041.1079 8039.8145 Lfu0.065 0.052 0.039 0 k-7909.0728 8035.1465 m-7909.0366 8036.4258 L-7909.2954 8035.1167 L-7927.897 8039.6558 L-7928.9375 8039.2734 L-7928.8794 8039.6055 -7928.8398 8039.957 -7928.8306 8040.3223 c-7928.8242 8040.5278 -7928.8281 8040.729 -7928.8398 8040.9258 C-7920.3862 8042.0986 -7910.9634 8037.6719 -7909.0366 8036.4258 C-7908.7402 8046.7559 L-7908.041 8046.8618 L-7907.8042 8039.207 L-7902.1816 8039.1543 L-7902.0898 8037.0137 -7902.0718 8035.0215 -7902.2407 8034.0352 C-7909.0728 8035.1465 Lf0.4 0.7 1 0 k-7932.457 8040.5879 m-7932.4258 8038.981 L-8041.1079 8040.8257 L-8041.1079 8041.8618 L-8014.3584 8041.561 -7932.457 8040.5879 YfUU0.025 0.02 0.015 0 k-7896.7344 8043.0298 m-7896.7344 8043.0625 -7896.7129 8043.082 -7896.6802 8043.082 c-7893.6714 8043.1138 -7891.4214 8042.9458 -7888.415 8042.8594 C-7888.4087 8042.7656 L-7891.3262 8042.8706 -7893.7607 8043.0078 -7896.6841 8042.9746 C-7896.7168 8042.9766 -7896.7358 8042.998 -7896.7344 8043.0298 Cf-7888.3994 8042.7656 m-7888.4082 8042.7441 L-7888.4087 8042.7656 L-7888.4063 8042.7656 -7888.4033 8042.7656 -7888.3994 8042.7656 Cf-7892.4487 8041.4238 m-7893.4458 8041.292 -7894.3394 8041.7656 -7895.2114 8042.1978 C-7895.2441 8042.208 -7895.2534 8042.2402 -7895.2422 8042.271 C-7895.2305 8042.293 -7895.1982 8042.3022 -7895.1777 8042.291 c-7894.3262 8041.8306 -7893.4312 8041.4199 -7892.4678 8041.519 c-7891.1079 8041.6626 -7889.9038 8042.375 -7888.5254 8042.4526 C-7888.4463 8042.3594 L-7890.04 8042.2656 -7890.8647 8041.623 -7892.4487 8041.4238 cfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 6)0 Au1 Ap800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR-8046.75 8023 m-8046.75 8047 L-8036.75 8047 L-8036.75 8023 L-8046.75 8023 Ln0 Ap0 O1 g-8036.75 8025 m-8037.0703 8025 -8037.3857 8025.0186 -8037.6982 8025.0479 c-8039.5879 8025.2256 -8041.3198 8025.9346 -8042.7559 8027.0176 c-8044.2529 8028.1465 -8045.4199 8029.6816 -8046.0942 8031.4639 c-8046.5122 8032.5649 -8046.75 8033.7529 -8046.75 8035 c-8046.75 8036.8623 -8046.2319 8038.6001 -8045.3457 8040.0918 c-8043.6025 8043.0273 -8040.4102 8045 -8036.75 8045 C-8036.75 8025 Lf0 R0 G1 J 1 j 0.5 w-8036.75 8044.6816 m-8039.7793 8043.7256 -8042.6074 8042.0674 -8045.3457 8040.0918 CS-8036.75 8039.0488 m-8039.8999 8036.6431 -8042.957 8033.9126 -8046.0942 8031.4639 CS-8042.7559 8027.0176 m-8040.6904 8028.1089 -8038.7017 8029.4673 -8036.75 8030.957 CS-8037.6982 8025.0479 m-8037.3809 8025.1313 -8037.063 8025.2144 -8036.75 8025.3145 CS-8042.7559 8027.0176 m-8041.3193 8025.9351 -8039.5879 8025.2256 -8037.6982 8025.0479 CS-8046.0942 8031.4639 m-8046.5122 8032.5649 -8046.75 8033.7529 -8046.75 8035 c-8046.75 8036.8623 -8046.231 8038.6001 -8045.3457 8040.0918 CS-8036.75 8025 m-8037.0703 8025 -8037.3857 8025.0186 -8037.6982 8025.0479 CS-8042.7559 8027.0176 m-8044.2529 8028.1465 -8045.4199 8029.6816 -8046.0942 8031.4639 CS-8045.3457 8040.0918 m-8043.6025 8043.0273 -8040.4102 8045 -8036.75 8045 CSU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 8)0 Au800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR-8045.9521 8044.313 m-7938.7954 8044.313 L-7938.7954 8030.1855 L-8045.9521 8030.1855 L-8045.9521 8044.313 Lnu0 O0 0 0 1 k-8044.2832 8043.623 m-8044.8535 8046 -8044.8184 8042.0039 V-8045.0479 8038.8022 L-8045.6167 8036.4551 L-8045.4502 8034.123 L-8043.9502 8033.4551 -8027.2832 8032.123 V-8020.6167 8030.7886 -8011.6167 8030.7886 V-7946.3936 8031.4766 -7941.4912 8032.8848 v-7982.3882 8030.875 -7984.9688 8031.5122 v-7945.8569 8033.1602 -7942.8545 8034.4321 v-7980.79 8032.5474 -7984.167 8034.1777 v-7949.249 8035.9102 -7945.021 8037.5313 v-7951.7217 8036.8833 -7953.5127 8037.082 v-7950.3896 8037.5703 l-7955.4194 8037.502 l-7958.3218 8037.1289 l-7950.4521 8038.2422 -7949.9033 8038.8086 v-7946.3154 8038.1313 -7960.5186 8038.3848 v-7994.1177 8034.4551 -8044.2832 8043.623 Vf/BBAccumRotation (5.805971) XT0 R0 0 0 0.5 K0.025 w-8045.9502 8033.123 m-8025.667 8031.2954 -8005.9727 8030.2207 v-7963.1514 8030.502 -7958.5737 8030.9009 v-7946.1631 8031.0313 -7938.7959 8032.0273 vS/BBAccumRotation (5.805971) XT0 0 0 1 K-7983.8369 8030.4082 m-7987.2959 8030.0273 -8013.2607 8030.2793 Y-8023.627 8030.1602 -8045.9502 8033.123 YS/BBAccumRotation (5.805971) XT-7982.9873 8033.6641 m-7952.3608 8034.582 -7945.6606 8035.2319 vS/BBAccumRotation (5.805971) XT0 0 0 0.5 K-7991.6201 8038.2046 m-7956.3706 8039.6177 -7953.4058 8040.1406 vS/BBAccumRotation (5.805971) XTUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 10)0 Au800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR-8046 8046 m-7995.8921 8046 L-7995.8921 7989.9761 L-8046 7989.9761 L-8046 8046 Lnu0 O0.1 1 1 0 k-8008.9014 8011.5752 m-8010.7178 8005.0962 -8020.8247 8008.4658 Y-8020.791 8008.5303 L-8030.8999 8005.1606 -8032.7144 8011.6401 V-8038.6758 8029.0063 -8033.4922 8035.7446 V-8026.7529 8045.3369 -8022.6055 8045.3369 V-8019.0103 8045.2705 L-8014.8638 8045.2705 -8008.125 8035.6816 Y-8002.9409 8028.9424 -8008.9014 8011.5752 Yfu0 0 0 1 k-8013.3926 7989.9761 m-8014.1167 7991.4199 -8014.9238 7992.4751 V-8014.4058 7992.063 -8013.5151 7991.1919 -8013.3926 7989.9761 Cf-8027.064 7992.4858 m-8027.8711 7991.4302 -8028.5942 7989.9863 Y-8028.4727 7991.2026 -8027.582 7992.0737 -8027.064 7992.4858 CfU0 0.61 0.74 0 k-8012.5977 8014.4609 m-8013.9038 8009.7959 -8021.1816 8012.2217 Y-8021.1567 8012.269 L-8028.436 8009.8433 -8029.7417 8014.5078 V-8034.0337 8027.0122 -8030.3018 8031.8633 V-8025.4487 8038.769 -8022.4634 8038.769 V-8019.875 8038.7222 L-8016.8887 8038.7222 -8012.0366 8031.8174 Y-8008.3042 8026.9639 -8012.5977 8014.4609 Yfu1 Ap0.73 0.43 1 0.22 k0 R0 0 0 1 K-8016.6226 8017.2754 m-8015.813 8017.2754 -8015.1558 8016.6182 -8015.1558 8015.8096 c-8015.1558 8015 -8015.813 8014.3423 -8016.6226 8014.3423 c-8017.4321 8014.3423 -8018.0889 8015 -8018.0889 8015.8096 c-8018.0889 8016.6182 -8017.4321 8017.2754 -8016.6226 8017.2754 cb-8016.3638 8028.9966 m-8015.0806 8028.9966 -8014.0415 8028.1201 -8014.0415 8027.042 c-8014.0415 8025.9614 -8015.0806 8025.0874 -8016.3638 8025.0874 c-8017.645 8025.0874 -8018.6846 8025.9614 -8018.6846 8027.042 c-8018.6846 8028.1201 -8017.645 8028.9966 -8016.3638 8028.9966 cb-8015.834 8040.7866 m-8014.2817 8040.7866 -8013.0239 8040.1294 -8013.0239 8039.3218 c-8013.0239 8038.5122 -8014.2817 8037.8545 -8015.834 8037.8545 c-8017.3862 8037.8545 -8018.645 8038.5122 -8018.645 8039.3218 c-8018.645 8040.1294 -8017.3862 8040.7866 -8015.834 8040.7866 cb-8011.6104 8012.5264 m-8010.8687 8012.5264 -8010.2671 8011.8154 -8010.2671 8010.937 c-8010.2671 8010.0591 -8010.8687 8009.3481 -8011.6104 8009.3481 c-8012.353 8009.3481 -8012.9546 8010.0591 -8012.9546 8010.937 c-8012.9546 8011.8154 -8012.353 8012.5264 -8011.6104 8012.5264 cb-8010.0034 8034.083 m-8010.8818 8033.7354 -8011.1494 8032.335 -8010.603 8030.9546 c-8010.0566 8029.5752 -8008.9014 8028.7358 -8008.0234 8029.085 c-8007.145 8029.4326 -8006.877 8030.833 -8007.4233 8032.2134 c-8007.9702 8033.5942 -8009.125 8034.4321 -8010.0034 8034.083 cbu-8025.0566 8017.1592 m-8025.8662 8017.1592 -8026.5239 8016.502 -8026.5239 8015.6934 c-8026.5239 8014.8833 -8025.8662 8014.2266 -8025.0566 8014.2266 c-8024.248 8014.2266 -8023.5913 8014.8833 -8023.5913 8015.6934 c-8023.5913 8016.502 -8024.248 8017.1592 -8025.0566 8017.1592 cb-8025.3159 8028.8799 m-8026.5991 8028.8799 -8027.6382 8028.0049 -8027.6382 8026.9248 c-8027.6382 8025.8447 -8026.5991 8024.9697 -8025.3159 8024.9697 c-8024.0342 8024.9697 -8022.9951 8025.8447 -8022.9951 8026.9248 c-8022.9951 8028.0049 -8024.0342 8028.8799 -8025.3159 8028.8799 cb-8025.8457 8040.6714 m-8027.3975 8040.6714 -8028.6558 8040.0142 -8028.6558 8039.2041 c-8028.6558 8038.3936 -8027.3975 8037.7383 -8025.8457 8037.7383 c-8024.293 8037.7383 -8023.0352 8038.3936 -8023.0352 8039.2041 c-8023.0352 8040.0142 -8024.293 8040.6714 -8025.8457 8040.6714 cb-8030.0679 8012.4097 m-8030.811 8012.4097 -8031.4121 8011.6982 -8031.4121 8010.8218 c-8031.4121 8009.9438 -8030.811 8009.2334 -8030.0679 8009.2334 c-8029.3262 8009.2334 -8028.7241 8009.9438 -8028.7241 8010.8218 c-8028.7241 8011.6982 -8029.3262 8012.4097 -8030.0679 8012.4097 cb-8031.6758 8033.9678 m-8030.7983 8033.6201 -8030.5298 8032.2192 -8031.0762 8030.8374 c-8031.6226 8029.457 -8032.7778 8028.6201 -8033.6558 8028.9678 c-8034.5342 8029.3169 -8034.8032 8030.7178 -8034.2568 8032.0967 c-8033.7104 8033.4775 -8032.5552 8034.3154 -8031.6758 8033.9678 cbUU0 Ap0 0 0 1 k-8021.1318 8012.6553 m-8021.1318 8045.3145 lFu-8005.3906 7998.5303 m-8006.0815 7997.8369 -8009.019 7998.7026 Y-8010.229 7998.874 -8010.0562 8001.2935 Y-8009.019 8003.3682 -8009.7104 8003.1943 Y-8010.2998 8003.1943 -8011.855 8003.1143 -8012.7822 8003.063 C-8013.1226 8001.6689 -8014.6128 8000.4751 -8016.7217 7999.7695 C-8014.7578 7996.4775 -8016.5176 7995.7954 -8018.2935 7995.79 C-8018.3096 7995.7026 -8018.332 7995.6162 -8018.3599 7995.5327 C-8016.1089 7995.5791 -8015.6392 7993.2593 Y-8015.4048 7993.063 -8015.1606 7992.7866 -8014.9238 7992.4751 C-8015.1416 7992.647 -8015.2944 7992.7393 Y-8016.2583 7992.7393 -8017.8774 7994.4946 -8018.4966 7995.207 C-8018.9194 7994.4434 -8019.853 7993.9111 -8020.9434 7993.9111 c-8022.0698 7993.9111 -8023.0322 7994.479 -8023.4312 7995.2847 C-8023.9985 7994.624 -8025.6968 7992.751 -8026.6943 7992.751 C-8026.8462 7992.6577 -8027.064 7992.4858 V-8026.8281 7992.7935 -8026.583 7993.0737 -8026.3481 7993.269 C-8025.8638 7995.6558 -8023.5254 7995.5342 V-8023.5449 7995.5889 -8023.5674 7995.6431 -8023.5806 7995.7026 C-8026.9238 7995.6929 -8025.937 7998.3174 -8025.2104 7999.6602 C-8027.5918 8000.376 -8029.2646 8001.7007 -8029.5239 8003.25 C-8030.4473 8003.2998 -8031.6729 8003.3584 -8032.1802 8003.3584 C-8032.8726 8003.5313 -8031.835 8001.458 V-8031.6626 7999.0391 -8032.8726 7998.8662 V-8035.8096 7998.002 -8036.501 7998.6934 V-8037.1919 7999.5566 -8038.0562 7998.3462 V-8037.1919 8000.0752 -8035.291 7999.5566 V-8032.6982 7998.8662 -8033.3906 8000.5938 V-8033.9087 8004.0498 -8032.1802 8004.7402 V-8030.0342 8005.8545 -8028.2822 8006.0889 V-8027.9087 8006.4146 -8027.4639 8006.7114 -8026.958 8006.9766 C-8029.5562 8007.0474 -8032.2246 8007.9209 -8033.0752 8010.9561 C-8033.5151 8012.2432 -8034.0518 8014.2432 V-8035.1025 8014.8257 -8036.3022 8016.0078 -8037.541 8018.2622 C-8038.394 8021.4502 -8039.167 8016.7129 V-8040.3975 8013.6494 -8041.6504 8013.5386 V-8040.4702 8015.2871 -8040.9038 8016.416 V-8039.2998 8020.917 -8037.6138 8019.8994 V-8036.0986 8019.2202 -8034.688 8016.8154 V-8035.0698 8018.4966 -8035.4326 8020.417 -8035.6743 8022.3906 C-8036.4888 8022.3975 L-8038.3506 8021.479 -8038.3262 8024.959 V-8039.1226 8028.9458 -8038.3594 8031.6826 V-8037.647 8034.1504 -8040.1274 8032.9302 V-8041.2842 8033.3242 -8041.9839 8032.7881 V-8044.3882 8031.4126 -8046 8033.124 V-8044.147 8032.8799 -8043.4482 8033.417 V-8041.9785 8033.5615 -8041.897 8034.1782 V-8038.9561 8034.855 -8038.188 8034.0767 V-8036.417 8033.2134 -8037.1304 8030.3599 V-8037.8799 8022.4814 -8036.3198 8024.4058 V-8036.1182 8024.4214 -8035.8784 8024.5176 V-8036.1519 8028.4326 -8035.8018 8032.3247 -8033.9961 8034.8511 C-8037.4536 8027.333 -8032.2974 8012.3042 Y-8030.9609 8007.5303 -8025.127 8008.1016 -8022.145 8008.7344 C-8022.0718 8010.1294 -8021.8374 8011.9487 -8021.1318 8012.6553 C-8020.2134 8010.6958 -8020.2358 8009.0737 V-8019.0762 8008.7217 -8012.2817 8006.8447 -8009.4487 8010.3369 C-8010.4312 8007.8135 -8012.8262 8007.0186 -8015.2007 8006.9194 C-8014.667 8006.6318 -8014.2041 8006.3047 -8013.8257 8005.9502 C-8012.041 8005.7866 -8009.7104 8004.5767 Y-8007.9814 8003.8857 -8008.5015 8000.4302 Y-8009.1919 7998.7026 -8006.5991 7999.3936 Y-8004.7002 7999.9111 -8003.835 7998.1841 Y-8004.7002 7999.3936 -8005.3906 7998.5303 Yf-7999.9082 8032.9521 m-8000.6074 8033.4897 -8001.7632 8033.0938 Y-8004.2446 8034.3135 -8003.5327 8031.8462 Y-8002.769 8029.1104 -8003.564 8025.1226 Y-8003.541 8021.645 -8005.4014 8022.5601 Y-8006.0342 8022.5562 L-8006.3198 8020.6118 -8006.7046 8018.7554 -8007.0898 8017.1694 C-8005.7129 8019.4199 -8004.2778 8020.063 Y-8002.5913 8021.082 -8000.9878 8016.5791 Y-8001.4214 8015.4502 -8000.2417 8013.7026 Y-8001.4937 8013.813 -8002.7246 8016.876 Y-8003.4976 8021.6152 -8004.3511 8018.4272 Y-8005.5776 8016.1904 -8006.769 8015.0098 -8007.814 8014.4233 C-8008.2026 8013.063 -8008.4858 8012.2393 Y-8008.7002 8011.4727 -8009.0337 8010.8486 -8009.4487 8010.3369 C-8009.3799 8010.5127 -8009.3174 8010.6982 -8009.2632 8010.8911 C-8003.3022 8028.2593 -8008.4858 8034.9966 V-8015.2246 8044.5874 -8019.3721 8044.5874 V-8022.9663 8044.6514 L-8027.1138 8044.6514 -8033.853 8035.0615 Y-8033.9038 8034.9961 -8033.9463 8034.9214 -8033.9961 8034.8511 C-8033.7378 8035.4146 -8033.437 8035.9409 -8033.0752 8036.4097 C-8026.3359 8046 -8022.189 8046 V-8018.5942 8045.9346 L-8014.4482 8045.9346 -8007.709 8036.3447 Y-8005.5801 8033.5767 -8005.3306 8029.0176 -8005.7769 8024.6055 C-8005.6553 8024.5752 -8005.5698 8024.5679 Y-8004.0112 8022.647 -8004.7598 8030.5249 Y-8005.4746 8033.3794 -8003.7026 8034.2402 Y-8002.9351 8035.0186 -7999.9946 8034.3423 Y-7999.9136 8033.7256 -7998.4434 8033.5806 Y-7997.7446 8033.0449 -7995.8921 8033.2881 Y-7997.5024 8031.5767 -7999.9082 8032.9521 YfUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 34)0 Au800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR-8046.0254 8046.0264 m-7990.0542 8046.0264 L-7990.0542 7984.5342 L-8046.0254 7984.5342 L-8046.0254 8046.0264 Lnuu0 O0.0745 0.9 0.9019 0.18 k0 R0 0 0 1 K1 J 1 j 0.0518 w-8019.5991 8022.7217 m-8019.3594 8033.5215 -8024.8794 8043.8398 v-8024.4009 8046 -8022.959 8046 v-8023.2002 8042.6406 -8022.2393 8042.1606 v-8017.9199 8030.1602 -8018.6382 8022.2402 v-8019.5991 8022.7217 lb-8019.5991 8022.7217 m-8021.2793 8028 -8033.0391 8029.2017 v-8037.3594 8029.6807 -8037.5991 8031.1206 v-8031.1206 8021.519 -8030.1602 8021.7607 v-8043.3594 8016.001 -8046 8010.7202 v-8040.959 8013.6006 -8037.5991 8011.4399 v-8029.6802 8011.2017 -8024.6406 8013.3618 v-8020.8008 8015.2817 -8028.7202 7999.2017 v-8024.8794 8010.9609 -8021.2793 7984.561 v-8020.3198 7989.8408 -8018.8799 7991.2817 v-8012.8799 7998.9609 -8013.8398 8001.1206 v-8014.3198 8004.9609 -8009.7598 7998.7207 v-8010 8008.3218 -8012.4009 8011.6807 v-8014.5591 8015.2817 -8008.5591 8013.1206 v-8002.5591 8011.2017 -7997.2793 8012.8809 v-7991.7598 8014.3198 -7990.0801 8011.4399 v-8001.8398 8023.9209 -8007.5991 8023.6807 v-8005.9194 8027.2817 l-8003.519 8032.0806 -8004 8033.2817 v-8019.2681 8023.8833 -8019.5991 8022.7217 vb-8019.5991 8022.7217 m-8016.959 8004.2402 -8019.5991 7996.561 v-8021.998 7986.001 -8021.2793 7984.561 vS-8018.1602 8011.4399 m-8012.1602 8006.6406 -8010.959 8001.3599 vS-8018.1602 8010.7202 m-8027.0391 8003.041 -8028.7202 7999.2017 vS-7990.0801 8011.4399 m-7991.2793 8013.6006 -8019.3594 8021.7607 y-8024.4009 8016.2422 -8035.9199 8013.8408 v-8043.5986 8012.8809 -8046 8010.7202 vS-8036.6382 8029.6807 m-8025.1191 8020.5615 -8019.3594 8021.7607 y-8005.1992 8028 -8004 8033.2817 vSUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 36)0 Au800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR-8045.8496 8045.9961 m-7995.96 8045.9961 L-7995.96 7994.9258 L-8045.8496 7994.9258 L-8045.8496 8045.9961 Lnu0 O0.025 0.1 0.475 0 k-8024.1504 8013.9038 m-8026.4766 8012.813 -8028.6914 8012.4434 -8030.373 8012.9238 c-8031.0518 8013.1167 -8031.645 8013.4473 -8032.123 8013.9238 c-8032.6006 8014.4023 -8032.9297 8014.9951 -8033.123 8015.6729 c-8034.0088 8018.771 -8032.0103 8023.6777 -8027.9233 8027.7666 c-8023.834 8031.8535 -8018.9297 8033.8511 -8015.8286 8032.9663 c-8015.1519 8032.771 -8014.5586 8032.4424 -8014.0806 8031.9658 c-8013.603 8031.4878 -8013.2754 8030.895 -8013.082 8030.2168 c-8012.5176 8028.2466 -8013.1226 8025.5449 -8014.6855 8022.7886 c-8015.582 8021.21 -8016.791 8019.6138 -8018.2793 8018.123 c-8020.1504 8016.2534 -8022.1914 8014.8242 -8024.1504 8013.9038 cfu0.0035 0.014 0.0665 0 k-8023.2183 8012.9727 m-8025.8306 8012.0215 -8028.3975 8011.9688 -8030.373 8012.9238 C-8028.6914 8012.4434 -8026.4766 8012.813 -8024.1504 8013.9038 c-8023.6191 8014.1543 -8023.0806 8014.4434 -8022.543 8014.7681 C-8020.8984 8014.0537 L-8021.667 8013.6177 -8022.4434 8013.2534 -8023.2183 8012.9727 cf0.015 0.06 0.285 0 k-8020.8984 8014.0537 m-8022.543 8014.7681 L-8021.0962 8015.6353 -8019.6426 8016.7607 -8018.2793 8018.123 c-8018.1538 8018.25 -8018.0327 8018.3774 -8017.9102 8018.5054 C-8017.2153 8016.8633 L-8018.3706 8015.7231 -8019.6191 8014.7817 -8020.8984 8014.0537 CfUu0.039 0.156 0.741 0 k-8011.687 8001.4038 m-8011.9746 8001.6914 -8023.2183 8012.9727 Y-8022.4434 8013.2534 -8021.667 8013.6177 -8020.8984 8014.0537 C-8007.4146 8000.5703 L-8009.061 8000.0991 -8010.6406 8000.355 -8011.687 8001.4038 cf0.025 0.1 0.475 0 k-8007.4146 8000.5703 m-8020.8984 8014.0537 L-8019.584 8014.8022 -8018.2969 8015.7754 -8017.1143 8016.957 c-8017.084 8016.9863 -8017.0586 8017.0161 -8017.0278 8017.0449 C-8003.3408 8003.3574 L-8003.5264 8003.1328 -8003.7202 8002.9146 -8003.9302 8002.7007 c-8005.0103 8001.623 -8006.2305 8000.9082 -8007.4146 8000.5703 CfUu0.0115 0.046 0.2185 0 k-7997.9346 8010.3926 m-7995.5337 8007.9897 -7995.335 8004.0898 -7997.1382 8000.6978 C-7998.2954 8001.1182 L-7996.0938 8004.4961 -7995.8398 8008.2954 -7997.9346 8010.3926 cf0.015 0.06 0.285 0 k-8005.5337 7995.5962 m-8004.582 7994.9258 L-8007.2046 7994.3521 -8009.8306 7994.9146 -8011.6206 7996.7065 c-8010.1719 7995.2578 -8007.9082 7994.9302 -8005.5337 7995.5962 Cf0.0295 0.118 0.5605 0 k-8005.5337 7995.5962 m-8007.9082 7994.9302 -8010.1719 7995.2578 -8011.6206 7996.7065 c-8013.019 7998.1055 -8013.3706 8000.2642 -8012.7954 8002.5474 C-8010.8672 7999.5449 -8007.4082 8000.5537 V-8005.585 7995.6313 L-8005.5337 7995.5962 Lf*u0.048 0.192 0.912 0 k1 D-7997.9346 8010.3926 m-7999.2817 8011.7383 -8001.332 8012.1138 -8003.5234 8011.627 C-8013.6714 8021.7734 L-8013.7695 8021.5679 -8013.7695 8021.5679 -8013.6714 8021.7734 c-8012.2246 8024.8145 -8011.9702 8027.916 -8013.082 8030.2168 C-8012.5176 8028.2466 -8013.1226 8025.5449 -8014.6855 8022.7886 c-8015.5054 8021.3442 -8016.5918 8019.8848 -8017.9102 8018.5054 C-8017.2153 8016.8633 L-8017.1816 8016.8945 -8017.1465 8016.9238 -8017.1143 8016.957 c-8017.084 8016.9878 -8017.0566 8017.0176 -8017.0273 8017.0474 c-8017.0278 8017.0474 -8017.0278 8017.0474 -8017.0278 8017.0449 C-8003.3408 8003.3574 L-7998.3262 8001.1289 L-7998.2954 8001.1182 L-7996.0938 8004.4961 -7995.8398 8008.2954 -7997.9346 8010.3926 cf*U0.0215 0.086 0.4085 0 k0 D-8004.582 7994.9258 m-8005.5337 7995.5962 L-8003.6846 7996.1113 -8001.7656 7997.229 -8000.1138 7998.8833 c-7999.4063 7999.5889 -7998.7998 8000.3418 -7998.2954 8001.1182 C-7997.1382 8000.6978 L-7997.6553 7999.7246 -7998.3374 7998.793 -7999.1802 7997.9512 c-8000.7695 7996.3594 -8002.6758 7995.3423 -8004.582 7994.9258 Cf0.0205 0.082 0.3895 0 k-7998.2954 8001.1182 m-7998.7998 8000.3418 -7999.4063 7999.5889 -8000.1138 7998.8833 c-8001.7656 7997.229 -8003.6846 7996.1113 -8005.5337 7995.5962 C-8005.585 7995.6313 L-8007.4082 8000.5537 L-8006.2114 8000.9214 -8004.9878 8001.6431 -8003.9302 8002.7007 c-8003.7202 8002.9146 -8003.5264 8003.1328 -8003.3408 8003.3574 C-7998.3262 8001.1289 L-7998.2954 8001.1182 LfUu0.445 0.356 0.267 0 k-8045.8496 8045.9961 m-8023.957 8022.9688 L-8024.2007 8022.6494 -8024.5752 8022.6138 -8024.8887 8022.6592 C-8029.1802 8027.2886 -8040.3145 8039.4561 -8044.7266 8044.2793 C-8045.5649 8045.3521 -8046 8045.9937 -8045.8496 8045.9961 Cf0.15 0.12 0.09 0 k-8045.834 8045.9961 m-8044.6606 8045.7031 -8023.6934 8024.0034 Y-8023.6934 8023.502 -8023.7993 8023.1758 -8023.957 8022.9688 C-8045.8496 8045.9961 L-8045.8442 8045.9961 -8045.8418 8046 -8045.834 8045.9961 cf0.2 0.16 0.12 0 k-8044.7266 8044.2793 m-8040.3145 8039.4561 -8029.1802 8027.2886 -8024.8887 8022.6592 C-8025.2002 8022.7041 -8025.4526 8022.8306 Y-8026.603 8023.1328 -8040.5742 8038.9614 -8044.7266 8044.2793 CfUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 37)0 Au800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR-8044.9502 8045.2319 m-7995.0391 8045.2319 L-7995.0391 7981.1152 L-8044.9502 7981.1152 L-8044.9502 8045.2319 Lnu0 O0 0 0 1 k0 R0 0 0 1 K0 w-7995.2358 7981.1152 m-7995.6064 7981.248 -7995.9858 7981.2832 -7996.3833 7981.2031 c-7996.4863 7981.168 l-7996.5254 7981.1602 -7996.5703 7981.1782 -7996.6025 7981.1992 c-7996.9434 7981.3926 l-8000.7129 7983.2959 -8004.0962 7985.897 -8006.5 7989.4473 c-8007.9634 7991.5918 -8009.123 7993.8794 -8010.7993 7995.856 c-8011.1729 7996.209 -8011.1758 7996.7729 -8010.834 7997.1313 c-8010.4951 7997.501 -8009.918 7997.5078 -8009.561 7997.165 c-8009.4038 7997.21 l-8009.2642 7997.1289 -8009.0742 7997.0703 -8009.0234 7996.957 c-8007.853 7994.2031 -8007.1895 7991.5137 -8005.4336 7989.1382 c-8003.1719 7986.0942 -8000.1777 7983.9946 -7997.0298 7982.0234 c-7996.3672 7981.6055 L-7996.4966 7981.6353 L-7995.7695 7981.6426 l-7995.791 7981.6113 -7995.8008 7981.5962 -7995.8223 7981.5649 C-7995.6064 7981.5234 -7995.377 7981.4746 -7995.1626 7981.4336 c-7995.0762 7981.4238 -7995.0186 7981.3394 -7995.0391 7981.2383 c-7995.0503 7981.1519 -7995.1382 7981.1089 -7995.2358 7981.1152 c-7995.2358 7981.1152 lb-8011.2222 7994.9951 m-8011.5742 7994.8066 -8011.9658 7994.6719 -8012.248 7994.3887 c-8018.4521 7988.1719 -8028.6802 7987.2734 -8036.0488 7993.6855 C-8036.1582 7993.7817 -8036.1582 7993.957 -8036.063 7994.0649 C-8033.0527 7992.9434 -8024.8838 7994.375 -8021.3223 7997.4121 C-8021.2534 7997.4673 -8021.1465 7997.4526 -8021.1055 7997.3711 C-8021.0503 7997.3047 -8021.0664 7997.1953 -8021.1328 7997.1558 C-8024.5625 7994.0854 -8029.0674 7992.29 -8033.6729 7992.748 C-8030.8535 7991.1855 -8027.6313 7990.4946 -8024.3984 7990.689 c-8019.7144 7990.9722 -8015.4634 7993.1191 -8011.3711 7995.2793 c-8011.291 7995.3193 -8011.1978 7995.293 -8011.1553 7995.2114 C-8011.1016 7995.1313 -8011.1426 7995.0352 -8011.2222 7994.9951 cb-8020.647 7996.3359 m-8022.2266 8000.3618 -8024.3911 8004.3198 -8027.8018 8007.0762 c-8027.9648 8007.2119 -8027.9946 8007.4497 -8027.8711 8007.6055 c-8027.7344 8007.7681 -8027.5049 8007.7793 -8027.3481 8007.6558 c-8023.123 8005.5967 -8020.1904 8001.1313 -8020.1626 7996.4014 c-8020.1626 7996.4014 l-8020.1328 7996.2671 -8020.2354 7996.1343 -8020.3633 7996.1226 c-8020.5039 7996.1055 -8020.6318 7996.1978 -8020.647 7996.3359 c-8020.647 7996.3359 lb-8014.9414 8001.0176 m-8015.042 8001.1816 -8015.1152 8001.3838 -8015.2617 8001.4824 c-8018.0806 8003.3906 -8020.9785 8004.6313 -8023.8848 8006.1328 c-8024.0503 8006.209 -8024.1118 8006.418 -8024.0313 8006.5703 c-8023.9512 8006.7222 -8023.7559 8006.7793 -8023.5898 8006.7041 c-8020.439 8005.3232 -8016.313 8004.5 -8014.6729 8001.1802 c-8014.6289 8001.1113 -8014.6455 8001.0142 -8014.7266 8000.9648 c-8014.7959 8000.9199 -8014.897 8000.9487 -8014.9414 8001.0176 c-8014.9414 8001.0176 lb-8014.6602 8001.918 m-8014.4438 8002.4297 -8014.1431 8002.8896 -8014.0503 8003.4351 c-8013.2183 8008.2778 -8013.1152 8013.042 -8014.248 8017.687 c-8014.248 8017.687 l-8014.3418 8017.9526 -8014.2114 8018.2441 -8013.9438 8018.3394 c-8013.6777 8018.4336 -8013.3882 8018.313 -8013.2935 8018.0479 c-8011.293 8012.811 -8011.897 8006.7378 -8014.3711 8001.7832 c-8014.4063 8001.7002 -8014.498 8001.6689 -8014.582 8001.6914 c-8014.6641 8001.7271 -8014.6978 8001.835 -8014.6602 8001.918 c-8014.6602 8001.918 lb-8013.5352 8017.5938 m-8010.8984 8015.2271 -8008.6816 8012.252 -8007.853 8008.7358 c-8007.853 8008.7358 l-8007.7246 8008.1816 -8008.0742 8007.623 -8008.6416 8007.4902 c-8009.1992 8007.375 -8009.7578 8007.7246 -8009.8862 8008.2793 c-8010.5649 8011.5313 -8011.8711 8014.6729 -8013.7954 8017.3862 c-8013.7954 8017.3862 l-8013.8462 8017.4551 -8013.834 8017.5576 -8013.7695 8017.6201 c-8013.6992 8017.6694 -8013.5977 8017.6582 -8013.5352 8017.5938 c-8013.5352 8017.5938 lb-7998.3711 8010.1826 m-7999.7114 8005.8306 -8002.2598 8002.0698 -8005.689 7999.1538 C-8005.729 7999.0718 -8005.8242 7999.0322 -8005.9038 7999.0854 C-8005.9863 7999.127 -8006.0122 7999.2207 -8005.9722 7999.3018 C-8005.957 7999.7886 -8005.7144 8000.2334 -8005.4458 8000.5313 c-8000.4063 8006.1626 -7996.9902 8014.7202 -7999.3433 8021.9551 C-7999.0762 8016.4512 -8000.7241 8010.3008 -8004.1362 8005.6738 c-8005.1606 8004.2695 -8006.7422 8004.1206 -8008.3081 8004.2031 C-8008.4023 8004.1895 -8008.4834 8004.2432 -8008.4961 8004.3369 c-8008.5098 8004.4194 -8008.4551 8004.5137 -8008.3623 8004.5254 C-8005.1479 8005.7695 -8003.4878 8009.2246 -8002.084 8012.1943 c-8000.415 8015.7441 -7999.7017 8019.6382 -8000.0054 8023.5 C-8000.0454 8023.6777 -8000.1138 8025.3975 -7999.9775 8025.4102 C-7999.8306 8025.439 -7999.709 8025.3442 -7999.6802 8025.1943 C-7999.645 8025.0449 -7996.6426 8015.7983 -7998.3711 8010.1826 cb-8006.4863 7997.4912 m-8005.3945 7993.6206 -8003.1094 7990.251 -8000.4824 7987.2383 c-8000.3306 7987.105 -8000.3145 7986.8862 -8000.4502 7986.7354 c-8000.5752 7986.6006 -8000.8047 7986.582 -8000.957 7986.7178 c-8004.3306 7989.332 -8005.4487 7993.541 -8006.7954 7997.375 c-8006.7954 7997.375 l-8006.8262 7997.4648 -8006.7754 7997.5586 -8006.6982 7997.5874 c-8006.6094 7997.6191 -8006.5166 7997.5679 -8006.4863 7997.4912 c-8006.4863 7997.4912 lb-8000.5313 8022.1094 m-8000.5991 8022.0566 -8000.707 8022.083 -8000.748 8022.1504 C-8000.9634 8022.4746 -8002.6914 8024.519 -8003.3926 8025.1406 c-8008.1719 8029.3945 -8011.5137 8033.9609 -8019.5391 8037.7222 c-8026.4512 8040.9639 -8029.1113 8043.5962 -8036.3862 8041.8262 c-8039.687 8041.0298 -8041.0313 8040.5313 -8042.4351 8035.4551 C-8043.9473 8029.2993 -8042.8672 8031.7832 -8043.084 8024.4385 c-8043.2222 8019.6978 -8046 8008.4551 -8033.5254 7994.2598 C-8033.4199 7994.1489 -8033.4336 7993.9961 -8033.5337 7993.9072 C-8033.6328 7993.8022 -8033.7959 7993.8159 -8033.8862 7993.916 C-8039.5786 7998.7168 -8043.0234 8005.6582 -8044.3145 8012.9424 c-8045.2871 8018.4673 -8044.9199 8023.25 -8044.666 8029.6367 c-8044.5688 8032.0938 -8045.6855 8039.0718 -8040.9102 8043.0625 c-8037.3926 8046 -8032.3911 8045.5474 -8028.3545 8044.1558 c-8022.6992 8042.2119 -8017.9727 8039.1465 -8012.8711 8035.6094 c-8009.2656 8033.125 -8001.2881 8023.2847 -8000.4785 8022.3262 C-8000.4351 8022.2593 -8000.4502 8022.1504 -8000.5313 8022.1094 Cb-8035.0503 8009.3057 m-8034.168 8008.5034 -8033.7017 8009.8457 -8033.4297 8010.6016 c-8033.1626 8011.3574 -8032.189 8011.25 -8032.5127 8011.5728 c-8032.8369 8011.8975 -8032.8369 8011.9521 -8033.3232 8011.519 c-8033.8086 8011.0879 -8033.8086 8011.7358 -8034.5649 8011.25 c-8035.3198 8010.7622 -8035.645 8009.8457 -8035.0503 8009.3057 cb-8027.6519 8013.9487 m-8027.3657 8013.5918 -8026.6802 8013.5718 -8026.4648 8013.8945 c-8026.25 8014.2202 -8025.3306 8014.2734 -8025.4937 8014.5967 c-8025.6543 8014.9214 -8025.6016 8015.1382 -8026.0874 8014.9214 c-8026.5737 8014.7046 -8026.4121 8015.2998 -8026.897 8015.084 c-8027.3833 8014.8672 -8027.8687 8014.2202 -8027.6519 8013.9487 cb-8019.6074 8019.0791 m-8019.1206 8018.7559 -8017.8794 8019.5122 -8018.4727 8019.5122 c-8019.0674 8019.5122 -8018.311 8020.2671 -8018.8521 8020.4834 c-8019.3906 8020.6992 -8019.2832 8020.4297 -8019.6074 8020.645 c-8019.9297 8020.8618 -8020.3633 8021.2393 -8020.5239 8020.4297 c-8020.6855 8019.6191 -8020.3633 8019.6191 -8019.9849 8019.3496 c-8019.6074 8019.0791 -8019.6074 8019.0791 yb-8034.2402 8019.3496 m-8033.1074 8019.2422 -8033.8633 8019.998 -8033.269 8020.4834 c-8032.6738 8020.9697 -8031.918 8021.6177 -8032.729 8021.3999 c-8033.5391 8021.1855 -8034.9961 8021.6719 -8034.9434 8020.5386 c-8034.8887 8019.4033 -8034.6328 8019.3862 -8034.2402 8019.3496 cb-8028.5703 8027.6113 m-8028.1016 8027.3442 -8028.6802 8027.7202 -8028.0303 8027.6113 c-8027.3833 8027.5039 -8026.7886 8027.6113 -8027.2207 8027.8281 c-8027.6519 8028.0439 -8028.3008 8028.1519 -8028.4634 8027.9897 c-8028.625 8027.8281 -8028.9473 8027.8281 -8028.5703 8027.6113 cb-8019.0674 8027.1802 m-8019.4785 8026.1802 -8018.0962 8026.4238 -8017.4473 8026.7466 c-8016.7998 8027.0718 -8015.8262 8026.4775 -8016.4209 8026.9102 c-8017.0137 8027.3418 -8016.7998 8026.9102 -8017.3926 8027.2334 c-8017.9873 8027.5566 -8018.6895 8028.0977 -8019.0674 8027.1802 cb-8034.6738 8033.0664 m-8034.7222 8032.0752 -8033.8086 8032.957 -8033.269 8033.0122 c-8032.729 8033.0664 -8032.0801 8033.0664 -8032.2432 8033.2817 c-8032.4038 8033.498 -8032.459 8033.498 -8033.1626 8033.7129 c-8033.8633 8033.9297 -8034.6191 8034.145 -8034.6738 8033.0664 cb-8035.1582 8027.6113 m-8036.0664 8027.9746 -8036.293 8027.8809 -8036.5625 8028.2046 c-8036.834 8028.5298 -8037.1558 8029.231 -8037.5352 8028.0977 c-8037.9121 8026.9634 -8037.4282 8025.7759 -8037.0479 8025.9375 c-8036.6714 8026.0991 -8036.293 8026.7466 -8035.8618 8026.9634 c-8035.4297 8027.1802 -8034.6191 8027.3945 -8035.1582 8027.6113 cbUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 41)0 Au800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR-8046 8046 m-7965 8046 L-7965 7941 L-8046 7941 L-8046 8046 Lnuuu0 O0 0 0 1 k-8027.8057 7958.4258 m-8028.0742 7956.6621 -8029.1602 7955.291 -8030.5239 7955.3965 c-8031.8862 7955.502 -8032.707 7957.0234 -8032.7432 7958.8066 c-8032.748 7959.0693 -8032.6743 7960.2441 -8032.6304 7960.4775 C-8032.6382 7960.582 -8032.6191 7960.6738 -8032.6104 7960.7803 c-8032.5142 7962.0254 -8031.3574 7963.3604 -8029.9414 7963.25 c-8028.5249 7963.1406 -8027.4897 7961.8613 -8027.6367 7960.4727 c-8027.644 7960.4072 -8027.6958 7959.626 -8027.707 7959.5625 C-8027.6816 7959.2852 -8027.7598 7958.7256 -8027.8057 7958.4258 cf-8038.2646 7967.7334 m-8038.9946 7975.916 -8033.5015 7975.1191 v-8030.3682 7974.0186 -8031.4414 7971.1211 v-8031.6426 7969.752 -8033.7847 7968.498 v-8034.146 7968.25 -8034.7632 7967.1016 v-8035.1294 7965.5977 -8036.5186 7965.2979 v-8038.0762 7965.251 -8038.2646 7967.7334 vf-8012.7646 7976.4971 mF-8012.0762 7974.3408 m-8012.7847 7973.1934 -8015.8848 7973.6279 Y-8016.811 7973.6885 -8017.3799 7973.1113 Y-8019.8394 7969.0918 -8023.0386 7969.8857 -8023.4082 7969.9932 C-8023.4097 7969.9863 L-8026.999 7970.6045 -8027.2666 7975.6035 V-8027.4912 7976.3828 -8028.335 7976.7695 V-8031.2695 7977.8613 -8031.3481 7979.208 V-8031.8999 7981.1152 -8029.6006 7981.7422 V-8027.6792 7982.2568 -8025.7886 7979.8945 V-8024.6113 7978.6797 -8021.5762 7977.9395 V-8021.5728 7977.9531 L-8018.3594 7977.0459 -8016.6392 7977.5889 Y-8013.8521 7978.7676 -8012.4063 7977.4014 Y-8010.6826 7975.7559 -8012.0762 7974.3408 Yf-8025.9834 7957.8789 m-8026.5854 7956.2002 -8026.2822 7954.4775 -8025.0327 7953.9229 c-8023.7842 7953.3672 -8022.3384 7954.3164 -8021.4585 7955.8672 c-8021.3286 7956.0957 -8020.8359 7957.165 -8020.7632 7957.3906 C-8020.7065 7957.4785 -8020.6792 7957.5684 -8020.6362 7957.667 c-8020.1289 7958.8086 -8020.5122 7960.5303 -8021.8105 7961.1074 c-8023.1089 7961.6855 -8024.6279 7961.0527 -8025.1582 7959.7617 c-8025.1831 7959.7002 -8025.5078 7958.9883 -8025.5298 7958.9268 C-8025.6831 7958.6963 -8025.8809 7958.166 -8025.9834 7957.8789 cf-8011.7129 7960.9316 m-8007.1802 7967.7822 -8012.3911 7969.6943 v-8015.6714 7970.2168 -8016.103 7967.1572 v-8016.5786 7965.8564 -8015.29 7963.7354 v-8015.0903 7963.3447 -8015.0938 7962.04 v-8015.4858 7960.5449 -8014.4082 7959.6182 v-8013.0591 7958.8359 -8011.7129 7960.9316 vfUu-7986.7358 8010.1074 m-7986.3687 8008.3623 -7986.9048 8006.6963 -7988.2183 8006.3164 c-7989.5322 8005.9375 -7990.8345 8007.0752 -7991.4937 8008.7324 c-7991.5903 8008.9775 -7991.9326 8010.1025 -7991.9746 8010.3369 C-7992.0176 8010.4326 -7992.0322 8010.5244 -7992.0625 8010.6279 c-7992.4087 8011.8271 -7991.7935 8013.4805 -7990.4282 8013.875 c-7989.063 8014.2695 -7987.645 8013.4365 -7987.2969 8012.085 c-7987.2793 8012.0205 -7987.0552 8011.2705 -7987.0425 8011.207 C-7986.9214 8010.9551 -7986.7983 8010.4053 -7986.7358 8010.1074 cf-8000.2705 8014.6172 m-8003.8242 8022.0244 -7998.3999 8023.2061 v-7995.0801 8023.2754 -7995.0688 8020.1846 v-7994.7778 8018.8311 -7996.3433 8016.9072 v-7996.5942 8016.5459 -7996.7695 8015.2539 v-7996.5854 8013.7188 -7997.7793 8012.9492 v-7999.2222 8012.3594 -8000.2705 8014.6172 vf-7979.4648 8031.7695 mF-7978.063 8029.9912 m-7978.3247 8028.6689 -7981.3799 8027.9883 Y-7982.27 8027.7197 -7982.5986 8026.9795 Y-7983.4922 8022.3535 -7986.7666 8021.9746 -7987.1494 8021.9453 C-7987.1494 8021.9395 L-7990.7271 8021.2588 -7992.731 8025.8467 V-7993.2153 8026.4961 -7994.1416 8026.5625 V-7997.272 8026.5557 -7997.8169 8027.7891 V-7999.0039 8029.3809 -7997.0713 8030.7764 V-7995.4526 8031.9316 -7992.853 8030.3818 V-7991.3242 8029.6582 -7988.2222 8030.0293 V-7988.2231 8030.042 L-7984.896 8030.3213 -7983.4766 8031.4326 Y-7981.2793 8033.5146 -7979.4463 8032.7432 Y-7977.2554 8031.8057 -7978.063 8029.9912 Yf-7984.8374 8010.2354 m-7984.813 8008.4512 -7983.9258 8006.9453 -7982.5601 8006.8633 c-7981.1943 8006.7803 -7980.1743 8008.1768 -7979.895 8009.9385 c-7979.854 8010.1973 -7979.7666 8011.3711 -7979.7778 8011.6094 C-7979.7559 8011.7109 -7979.7617 8011.8037 -7979.7559 8011.9121 c-7979.6807 8013.1592 -7980.644 8014.6367 -7982.0625 8014.7217 c-7983.4814 8014.8066 -7984.6826 8013.6826 -7984.7246 8012.2871 c-7984.7271 8012.2217 -7984.7822 8011.4404 -7984.7798 8011.375 C-7984.8433 8011.1045 -7984.8423 8010.54 -7984.8374 8010.2354 cf-7973.0186 8017.5625 m-7971.1777 8025.5684 -7976.7271 8025.5303 v-7979.9834 8024.8691 -7979.3154 8021.8516 v-7979.3032 8020.4668 -7977.353 8018.9326 v-7977.0278 8018.6377 -7976.5742 8017.415 v-7976.417 8015.876 -7975.083 8015.3877 v-7973.5454 8015.1279 -7973.0186 8017.5625 vfUU1 Ap-8046 8046 m-8046 7941 L-7965 7941 L-7965 8046 L-8046 8046 LnUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 42)0 Au0 Ap800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR-8019.4609 8019.085 m-8047 8019.085 L-8047 8046.624 L-8019.4609 8046.624 L-8019.4609 8019.085 Ln0 O0 0.55 1 0.12 k-8033.7598 8037.3623 m-8033.7598 8047 L-8032.6343 8047 L-8032.6343 8037.3623 L-8033.7598 8037.3623 Lf0 0.55 1 0.3 k-8037.4233 8032.876 m-8036.3096 8031.1553 -8032.8809 8029.457 -8028.4966 8029.457 c-8024.1152 8029.457 -8020.6138 8031.1064 -8019.5718 8032.874 C-8019.5718 8032.874 L-8020.6138 8034.6006 -8024.1152 8036.2974 -8028.4966 8036.2974 c-8032.875 8036.2974 -8036.3242 8034.5615 -8037.4233 8032.876 CfU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 45)0 Au800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR-8047 8003.918 m-8047 8047 L-7960.2217 8047 L-7960.2217 8003.918 L-8047 8003.918 Lnuu0 O0 0 0 1 k-7987.2217 8033.2363 m-7987.2217 8041.0742 L-7975.2217 8034.1445 L-7963.2217 8027.2168 L-7975.2217 8020.2891 L-7987.2217 8013.3613 L-7987.2217 8021.4824 L-8045.9351 8007.7168 L-8032.9878 8026.8027 L-8047 8047 L-7987.2217 8033.2363 Lf0 1 1 0.1 k0 R0 0 0 1 K-7985.2217 8030.2363 m-7985.2217 8038.0742 L-7973.2217 8031.1445 L-7961.2217 8024.2168 L-7973.2217 8017.2891 L-7985.2217 8010.3613 L-7985.2217 8018.4824 L-8043.9351 8004.7168 L-8029.2754 8024.3594 L-8043.9351 8044 L-7985.2217 8030.2363 LbUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 50)0 Au800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR-8046 8046 m-7918.877 8046 L-7918.877 7998.415 L-8046 7998.415 L-8046 8046 Lnu*u0 O0.9529 0.949 0.1961 0.0745 k-8019.793 8030.417 m-8019.8232 8030.2671 L-8021.9849 8024.3638 -8022.9438 8021.6377 -8023.2754 8020.2886 c-8023.3657 8020.2886 L-8023.6953 8021.6074 -8024.7754 8024.335 -8026.9673 8030.2671 c-8026.9966 8030.417 L-8019.793 8030.417 lf1 D-8030.1182 8038.9678 m-8031.6191 8042.5366 -8032.3994 8044.709 -8030.1182 8044.917 c-8030.1182 8045.9678 L-8032.6992 8045.9375 -8035.5806 8045.917 -8038.3418 8045.917 c-8042.0649 8045.917 -8044.5273 8045.9375 -8046 8045.9678 c-8046 8044.917 L-8044.1064 8044.709 -8043.0542 8042.5674 -8035.5513 8025.5034 c-8023.6953 7998.415 L-8021.8638 7998.415 L-8010.1582 8025.5034 L-8002.8047 8042.5078 -8001.7246 8044.709 -7999.8887 8044.917 c-7999.8887 8045.9678 L-8001.5142 8045.9375 -8003.916 8045.917 -8007.5767 8045.917 c-8010.5488 8045.917 -8013.6694 8045.9375 -8016.7026 8045.9678 c-8016.7026 8044.917 L-8014.481 8044.709 -8015.3218 8042.5078 -8016.7617 8038.9678 C-8030.1182 8038.9678 lf*U*u0 D-7975.0762 8014.0806 m-7975.0762 8010.4722 -7977.3535 8008.0942 -7981.1294 8008.0942 c-7982.2383 8008.0942 -7983.0767 8008.2158 -7983.5273 8008.2446 c-7983.5273 8020.5479 L-7982.8672 8020.6079 -7982.208 8020.6079 -7981.729 8020.6079 c-7980.2002 8020.6079 -7978.7026 8020.127 -7977.6841 8019.4058 c-7976.3945 8018.5327 -7975.0762 8016.7881 -7975.0762 8014.1416 C-7975.0762 8014.0806 lf1 D-7994.0806 8018.3926 m-7994.0806 8002.645 -7994.0806 8000.4287 -7996.542 8000.2783 c-7996.542 7999.3184 L-7995.042 7999.2593 -7992.3174 7999.1992 -7989.5664 7999.1689 c-7987.6538 7999.1089 -7984.3945 7999.0186 -7982.1479 7998.9775 c-7978.582 7998.9775 -7975.585 7999.4258 -7973.0049 8000.2622 c-7968.353 8001.8481 -7963.9702 8005.853 -7963.9702 8013.6602 c-7963.9702 8018.7432 -7966.4014 8022.3193 -7968.5034 8024.061 c-7969.583 8025.0215 -7970.8135 8025.832 -7971.7744 8026.313 c-7971.7744 8026.4634 L-7969.5234 8029.4912 -7967.6025 8032.0625 -7961.3906 8040.6426 c-7959.5 8043.0649 -7957.9102 8044.7383 -7956.7402 8044.9775 c-7956.7402 8046 L-7958.6602 8046 -7961 8045.8848 -7963.1294 8045.8848 c-7965.3511 8045.8848 -7966.8521 8046 -7968.4424 8046 c-7969.6729 8046 -7970.7241 8045.9409 -7971.5039 8045.2729 c-7975.0151 8039.8481 -7978.9121 8033.7559 -7982.1182 8028.7134 c-7982.5078 8028.7134 -7982.957 8028.7134 -7983.5273 8028.7134 c-7983.5273 8031.2847 L-7983.5273 8042.5264 -7983.437 8044.769 -7981.1895 8044.9775 c-7981.1895 8045.9697 L-7982.6279 8045.9409 -7985.9194 8045.915 -7988.6992 8045.915 c-7991.9287 8045.915 -7994.8921 8045.9409 -7996.5122 8045.9697 c-7996.5122 8044.9775 L-7994.0518 8044.769 -7994.0806 8042.5264 -7994.0806 8025.5918 C-7994.0806 8018.3926 lf*U*u0 D-7943.4561 8025.5928 m-7943.4561 8042.4946 -7943.4561 8044.6479 -7946.2832 8044.9775 C-7946.2832 8045.9697 l-7944.3887 8045.9409 -7941.0542 8045.915 -7937.7822 8045.915 c-7934.6294 8045.915 -7931.5688 8045.9409 -7929.2881 8045.9697 C-7929.2881 8044.9775 l-7932.2578 8044.9775 -7932.2881 8042.5249 -7932.2881 8025.5928 C-7932.2881 8008.1514 L-7924.8193 8008.1514 l-7921.999 8008.1514 -7920.5298 8008.96 -7919.8994 8011.2622 C-7918.9072 8011.2622 l-7918.9072 8006.4697 -7918.877 8002.415 -7918.877 7999.1714 c-7923.3486 7999.2017 -7928.748 7999.231 -7934.0601 7999.231 C-7941.7446 7999.231 l-7946.5537 7999.231 -7951.9966 7999.2017 -7956.9614 7999.1714 c-7956.9614 8002.3848 -7956.9326 8006.4697 -7956.9326 8011.2622 C-7955.9072 8011.2622 l-7955.3657 8009.1094 -7953.771 8008.1514 -7950.9438 8008.1514 C-7943.4561 8008.1514 l-7943.4561 8025.5928 Lf*UUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 62)0 Au800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR-8047 8047 m-8047 8008.7305 L-8008.7305 8008.7305 L-8008.7305 8047 L-8047 8047 Ln0 O1 0.14 0.09 0 k-8008.7305 8029.9038 m-8008.7305 8021.3408 L-8047 8021.3408 L-8047 8029.9038 L-8008.7305 8029.9038 Lf-8008.7305 8033.0967 m-8008.7305 8032.4233 L-8047 8032.4233 L-8047 8033.0967 L-8008.7305 8033.0967 LfU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 63)0 Au800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR-8047 8047 m-8047 8008.7305 L-8008.7305 8008.7305 L-8008.7305 8047 L-8047 8047 Ln0 O1 0.14 0.09 0 k-8008.7305 8025.8262 m-8008.7305 8034.3896 L-8021.3408 8034.3896 L-8021.3408 8047 L-8029.9038 8047 L-8029.9063 8025.8262 L-8029.9038 8025.8262 L-8029.9038 8025.8257 L-8008.7305 8025.8262 Lf-8008.7305 8023.3071 m-8032.4233 8023.3071 L-8032.4233 8047 L-8033.0967 8047 L-8033.0977 8022.6328 L-8008.7305 8022.6328 L-8008.7305 8023.3071 LfU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 64)0 Au800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR-8047 8046.999 m-8047 8008.729 L-8008.7305 8008.729 L-8008.7305 8046.999 L-8047 8046.999 Ln0 O1 0.14 0.09 0 k-8008.7305 8021.3394 m-8034.3896 8021.3394 L-8034.3896 8046.999 L-8025.8262 8047 L-8025.8262 8029.9033 L-8008.7305 8029.9033 L-8008.7305 8021.3394 Lf-8008.7305 8032.4214 m-8023.3081 8032.4214 L-8023.3081 8047 L-8022.6338 8047 L-8022.6338 8033.0962 L-8008.7305 8033.0962 L-8008.7305 8032.4214 LfU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 65)0 Au1 Ap800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR-8019.0625 8019.4609 m-8046.6025 8019.4609 L-8046.6025 8047 L-8019.0625 8047 L-8019.0625 8019.4609 Ln0 O0 0.55 1 0.12 k-8018.8418 8032.7002 m-8047 8032.7002 L-8047 8033.8257 L-8018.8418 8033.8257 L-8018.8418 8032.7002 Lfu0 0.55 1 0.3 k-8045.9814 8020.5215 m-8046.4102 8022.5254 -8045.1865 8026.1514 -8042.0874 8029.251 c-8038.9878 8032.3496 -8035.3457 8033.6602 -8033.3594 8033.1455 C-8033.3594 8033.1455 L-8032.875 8031.1895 -8034.1519 8027.5122 -8037.25 8024.4146 c-8040.3457 8021.3184 -8044.0122 8020.1064 -8045.9814 8020.5215 Cf0 0.39 0.7 0.12 k-8045.9814 8045.9912 m-8046.4102 8043.9878 -8045.1865 8040.3618 -8042.0874 8037.2617 c-8038.9878 8034.1641 -8035.3457 8032.8535 -8033.3594 8033.3672 C-8033.3594 8033.3672 L-8032.875 8035.3242 -8034.1519 8039.001 -8037.25 8042.0991 c-8040.3457 8045.1953 -8044.0122 8046.4063 -8045.9814 8045.9912 CfUu0 0.55 1 0.3 k-8032.1782 8045.9912 m-8032.6074 8043.9878 -8031.3838 8040.3618 -8028.2842 8037.2617 c-8025.1855 8034.1641 -8021.543 8032.8535 -8019.5576 8033.3672 C-8019.5566 8033.3672 L-8019.0718 8035.3242 -8020.3496 8039.001 -8023.4473 8042.0991 c-8026.543 8045.1953 -8030.209 8046.4063 -8032.1782 8045.9912 Cf0 0.39 0.7 0.12 k-8032.1782 8020.5215 m-8032.6074 8022.5254 -8031.3838 8026.1514 -8028.2842 8029.251 c-8025.1855 8032.3496 -8021.543 8033.6602 -8019.5576 8033.1455 C-8019.5566 8033.1455 L-8019.0718 8031.1895 -8020.3496 8027.5122 -8023.4473 8024.4146 c-8026.543 8021.3184 -8030.209 8020.1064 -8032.1782 8020.5215 CfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 67)0 Au0 Ap800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR-8019.4609 8019.085 m-8047 8019.085 L-8047 8046.624 L-8019.4609 8046.624 L-8019.4609 8019.085 Ln0 O0 0.55 1 0.12 k-8033.7598 8037.3623 m-8033.7598 8047 L-8032.6343 8047 L-8032.6343 8037.3623 L-8033.7598 8037.3623 Lf0 0.55 1 0.3 k-8037.4233 8032.876 m-8036.3096 8031.1553 -8032.8809 8029.457 -8028.4966 8029.457 c-8024.1152 8029.457 -8020.6138 8031.1064 -8019.5718 8032.874 C-8019.5718 8032.874 L-8020.6138 8034.6006 -8024.1152 8036.2974 -8028.4966 8036.2974 c-8032.875 8036.2974 -8036.3242 8034.5615 -8037.4233 8032.876 CfU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 69)0 Au800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR-8019.4609 8019.4609 m-8047 8019.4609 L-8047 8047 L-8019.4609 8047 L-8019.4609 8019.4609 Ln0 O0 0.55 1 0.3 k-8037.4233 8033.252 m-8036.3096 8031.5313 -8032.8809 8029.833 -8028.4966 8029.833 c-8024.1152 8029.833 -8020.6138 8031.4824 -8019.5718 8033.25 C-8019.5718 8033.25 L-8020.6138 8034.9766 -8024.1152 8036.6738 -8028.4966 8036.6738 c-8032.875 8036.6738 -8036.3242 8034.9375 -8037.4233 8033.252 CfU%AI8_EndBrushPattern%AI8_BeginBrushPattern(New Pattern 83)0 Au800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR-8046 8045.9351 m-7832.4009 8045.9351 L-7832.4009 8038.1343 L-8046 8038.1343 L-8046 8045.9351 Ln0 O0 0 0 1 k-8046 8042.0352 m-8035.9858 8044.5273 -8029.187 8045.875 -8017.2007 8045.9351 c-8004.2183 8046 -7939.2002 8045.9351 y-7874.1816 8046 -7861.2002 8045.9351 v-7849.2129 8045.875 -7842.415 8044.5273 -7832.4009 8042.0352 C-7842.415 8039.543 -7849.2129 8038.1953 -7861.2002 8038.1343 c-7874.1816 8038.0698 -7939.2002 8038.1343 y-8004.2183 8038.0698 -8017.2007 8038.1343 v-8029.187 8038.1953 -8035.9858 8039.543 -8046 8042.0352 CfU%AI8_EndBrushPattern%AI5_End_NonPrinting--1 Bn%AI5_BeginGradient: (Unnamed gradient)(Unnamed gradient) 1 2 Bd[0<000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001010101010101010101010101010101010101010101010101010101010101010101010101010101010101010101010202020202020202020202020202020202020202020202020202020202020202020303030303030303030303030303030303030303030303030303030404040404040404040404040404040404040404040404040505050505050505050505050505050505050505050606060606060606060606060606060606060607070707070707070707070707070707070708080808080808080808080808080808090909090909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F10101010101010101010101011111111111111111111111112121212121212121212121313131313131313131313141414141414141414141415151515151515151515161616161616161616161717171717171717171718181818181818181818191919191919191919191A1A1A1A1A1A1A1A1A1B1B1B1B1B1B1B1B1B1C1C1C1C1C1C><00000000000000000000000000000000000000000000000000000000000001010101010101010101010101010101010101010101020202020202020202020202020202020303030303030303030303030404040404040404040404050505050505050505050606060606060606060707070707070707070808080808080808090909090909090A0A0A0A0A0A0A0B0B0B0B0B0B0B0C0C0C0C0C0C0D0D0D0D0D0D0D0E0E0E0E0E0E0F0F0F0F0F1010101010101111111111111212121212131313131314141414141515151515161616161617171717171818181819191919191A1A1A1A1B1B1B1B1B1C1C1C1C1D1D1D1D1E1E1E1E1F1F1F1F20202020212121212222222223232323242424242525252526262627272727282828282929292A2A2A2A2B2B2B2C2C2C2C2D2D2D2E2E2E2E2F2F2F30303031313132323232333333343434353535363636373737373838383939393A3A3A3B3B3B3C3C3C3D3D3D3E3E3E3F3F404040414141424242434343444444454546464647474748484849494A4A4A4B4B4B4C4C4D4D4D4E4E4E4F4F505050515152525253535454545555565656575758585859595A5A5A5B5B5C5C5C5D5D5E5E5F5F5F60606161616262636364646465656666676768686869696A6A6B6B6B6C6C6D6D6E6E6F6F70707071717272737374747575767676777778>0<FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFAFAFAFAFAFAFAF9F9F9F9F9F9F8F8F8F8F8F8F7F7F7F7F7F6F6F6F6F6F5F5F5F5F5F4F4F4F4F3F3F3F3F3F2F2F2F2F1F1F1F1F0F0F0F0EFEFEFEFEEEEEEEDEDEDEDECECECECEBEBEBEAEAEAE9E9E9E9E8E8E8E7E7E7E6E6E6E5E5E5E4E4E4E3E3E3E2E2E2E1E1E1E0E0DFDFDFDEDEDEDDDDDCDCDCDBDBDBDADAD9D9D9D8D8D7D7D7D6D6D5D5D4D4D4D3D3D2D2D1D1D1D0D0CFCFCECECDCDCDCCCCCBCBCACAC9C9C8C8C7C7C6C6C6C5C5C4C4C3C3C2C2C1C1C0C0BFBFBEBDBDBCBCBBBBBABAB9B9B8B8B7B7B6B5B5B4B4B3B3B2B2B1B0B0AFAFAEAEADACACABABAAAAA9A8A8A7A7A6A5A5A4A4A3A2A2A1A0A09F9F9E9D9D9C9B9B9A9A9998989796969594949392929190908F8E8E8D8C8C8B8A8A89888887868585848383828181807F7E7E7D7C7B7B7A79797877767675747373727170706F6E6D6D6C6B6A6A6968676666656463626261605F5F5E5D5C5B5A5A5958575656555453525151504F4E4D4C4C4B4A4948474746454443424140403F3E3D3C3B3A3939383736353433323131302F2E2D2C2B2A29282726262524232221201F1E1D1C1B1A19181717161514131211100F0E0D0C0B0A09080706050403020100>2 %_Br[0 0 0 0 1 69.9248 0 %_BS%_0 0 0 0 1 69.9248 0 Bs0 0.11 0.47 0 (PANTONE 1345 CVC) 0 3 87 67 %_BS%_0 0.11 0.47 0 (PANTONE 1345 CVC) 0 3 87 67 BsBD%AI5_EndGradient%AI5_BeginPalette0 0 Pb1 1 1 1 ([Registration]) 0 Xs([Registration]) Pc0 0 0 0 k(C=0 M=0 Y=0 K=0) Pc0.21 1 0.1 0.65 k(New Color Swatch 9) Pc0 0.11 0.47 0 (PANTONE 1345 CVC) 0 x(PANTONE 1345 CVC) Pc0 0.38 0.79 0 (PANTONE 716 CVC) 0 x(PANTONE 716 CVC) Pc0 0.11 0.51 1 (PANTONE Black CVC) 0 x(PANTONE Black CVC) Pc1 0.72 0 0.06 (PANTONE Reflex Blue CVC) 0 x(PANTONE Reflex Blue CVC) Pc1 0.09 0 0.06 (PANTONE Process Blue CVC) 0 x(PANTONE Process Blue CVC) PcPB%AI5_EndPalette%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Brush Manager Order)(Adobe Brush Manager Order)( Adobe Calligraphic Brush Tool/ 6 pt Flat / Adobe Calligraphic Brush T) -(ool/ 10 pt Oval/ Adobe Calligraphic Brush Tool/ 12 pt Oval / Adobe Cal) -(ligraphic Brush Tool/ 20 pt Oval/ Adobe Calligraphic Brush Tool/ 25 pt) -( Round / Adobe Calligraphic Brush Tool/ 50 pt Flat/ Adobe Scatter Brus) -(h Tool/ Dog Tracks/ Adobe Scatter Brush Tool/ Fall Leaf/ Adobe Scatter) -( Brush Tool/ Ladybug/ Adobe Scatter Brush Tool/ Push Pin/ Adobe Scatte) -(r Brush Tool/ Strawberry/ Adobe Scatter Brush Tool/ Twinkle Star / Ado) -(be ArtOnPath Brush Tool/ Marker/ Adobe ArtOnPath Brush Tool/ Tapered S) -(troke/ Adobe ArtOnPath Brush Tool/ Arrow/ Adobe ArtOnPath Brush Tool/ ) -(Paintbrush/ Adobe ArtOnPath Brush Tool/ Type/ Adobe PatternOnPath Brus) -(h Tool/ Double Lines/ Adobe PatternOnPath Brush Tool/ Laurel/ Adobe Pa) -(tternOnPath Brush Tool/ Rope /) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(6 pt Flat )(1 4 8 10 10 90 90 2 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(10 pt Oval)(1 1 19 15 15 130 130 2 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(12 pt Oval )(1 7 17 45 45 0 0 2 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(20 pt Oval)(1 20 20 20 100 40 80 0 2 1 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(25 pt Round )(1 10 40 100 100 0 0 2 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(50 pt Flat)(1 40 60 0 0 44 44 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Arrow)(1 / New Pattern 45/ / / / / 5 0.898039 0 0 /  2 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Marker)(1 / New Pattern 8/ / / / / 0 0 /  1 1 1 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Paintbrush)(1 / New Pattern 5/ / / / / 1 0.5 0.85 1 0.45 /  0 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Tapered Stroke)(1 / New Pattern 83/ / / / / 1 0 0 0 1 /  1 1 1 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Type)(1 / New Pattern 50/ / / / / 1 0.952941 0.94902 0.196078 0.0745098 /  1) -( 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe PatternOnPath Brush Tool)(Double Lines)(1 / New Pattern 62/ New Pattern 63/ New Pattern 64/ / / 1 1 0.14 0.09 ) -(0 /  1 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe PatternOnPath Brush Tool)(Laurel)(1 / New Pattern 65/ New Pattern 42/ New Pattern 67/ / New Pattern 69/ ) -(1 0 0.55 1 0.3 /  1 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe PatternOnPath Brush Tool)(Rope )(1 / New Pattern 1/ / / New Pattern 3/ New Pattern 6/ 5 0 0 0 /  1 0 1 ) -(0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Scatter Brush Tool)(Dog Tracks)(1 /New Pattern 41/ 1 0 0 0 1 / 0 1 1 0 1 1 0 0 0 0 -90 -90 0 1 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Scatter Brush Tool)(Fall Leaf)(1 /New Pattern 34/ 1 0.0745 0.9 0.9019 0.18 / 0 0.602793 1 1 0.1 1 1 -) -(1 1 1 -180 180 1 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Scatter Brush Tool)(Ladybug)(1 /New Pattern 10/ 5 0.898039 0 0 / 0 1 1 0 0.803911 1.2 1 -1.55 1.55 ) -(1 -180 180 1 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Scatter Brush Tool)(Push Pin)(1 /New Pattern 36/ 1 0.025 0.1 0.475 0 / 0 1 1 0 0.401676 1 1 -1.06145) -( 1.06 1 -180 180 1 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Scatter Brush Tool)(Strawberry)(1 /New Pattern 37/ 1 0 0 0 1 / 0 0.803911 1 1 0.803911 1 1 -0.5 0.5 1 ) -(-75 75.419 1 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Scatter Brush Tool)(Twinkle Star )(1 /New Pattern 2/ 0 1 / 1 0.5 1 1 0.25 1 1 -0.5 0.5 1 0 0 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (Live Blends)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (Art Brush Tool)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (Art Brush Tool)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Undo New Calligraphic Brush) (Calligraphic Brush Tool)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (Scatter Brush Tool)%AI5_End_NonPrinting--%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(Layer 1) Ln0 A0 O1 0.09 0 0.06 (PANTONE Process Blue CVC) 0 x800 Ar0 J 0 j 1 w 4 M []0 d%AI3_Note:0 D0 XR278.1729 -147.0674 m278.1729 -121.856 247.6611 -95.3823 y243.9736 -92.1821 240.9551 -85.6592 240.9551 -80.8901 c240.9551 -57.9434 l240.9551 -53.1733 236.8857 -49.271 231.9121 -49.271 c212.7891 -49.271 l207.8164 -49.271 201.1377 -46.2754 197.9473 -42.6128 c169.8301 -10.3296 142.2207 -10.3296 v114.6123 -10.3296 86.4951 -42.6128 y83.3066 -46.2754 76.6284 -49.271 71.6543 -49.271 c52.5322 -49.271 l47.5586 -49.271 43.4888 -53.1733 43.4888 -57.9434 c43.4888 -83.1309 l43.4888 -87.9023 40.6196 -94.5713 37.1118 -97.9536 c10.5781 -123.5337 10.5781 -147.0674 v10.5781 -170.6006 37.1118 -196.1807 y40.6196 -199.5635 43.4888 -206.2314 43.4888 -211.0029 c43.4888 -229.9932 l43.4888 -234.7637 47.5586 -238.667 52.5322 -238.667 c71.6543 -238.667 l76.6284 -238.667 83.3066 -241.6631 86.4951 -245.3242 c114.6123 -277.6074 142.2207 -277.6074 v169.8301 -277.6074 197.9492 -245.3242 y201.1377 -241.6621 207.8164 -238.667 212.7891 -238.667 c231.9121 -238.667 l236.8857 -238.667 240.9551 -234.7637 240.9551 -229.9932 c240.9551 -213.2441 l240.9551 -208.4736 243.9736 -201.9531 247.6611 -198.751 c278.1729 -172.2773 278.1729 -147.0674 vf0 R1 0.72 0 0.06 (PANTONE Reflex Blue CVC) 0 X6.5934 w266.0723 -147.2998 m266.0723 -124.0205 238.3213 -99.5708 y234.9678 -96.6157 232.2227 -90.5938 232.2227 -86.189 c232.2227 -64.998 l232.2227 -60.5923 228.5205 -56.9878 223.9971 -56.9878 c206.6045 -56.9878 l202.0801 -56.9878 196.0068 -54.2227 193.1055 -50.8413 c167.5313 -21.0283 142.4155 -21.0283 v117.3047 -21.0283 91.73 -50.8413 y88.8291 -54.2227 82.7554 -56.9878 78.2319 -56.9878 c60.8379 -56.9878 l56.3145 -56.9878 52.6128 -60.5923 52.6128 -64.998 c52.6128 -88.2583 l52.6128 -92.6631 50.002 -98.8223 46.8115 -101.9463 c22.6777 -125.5684 22.6777 -147.2998 v22.6777 -169.0342 46.8115 -192.6543 y50.002 -195.7793 52.6128 -201.9385 52.6128 -206.3418 c52.6128 -223.8828 l52.6128 -228.2871 56.3145 -231.8896 60.8379 -231.8896 c78.2319 -231.8896 l82.7554 -231.8896 88.8291 -234.6582 91.73 -238.0391 c117.3042 -267.8516 142.4155 -267.8516 v167.5313 -267.8516 193.1064 -238.0391 y196.0068 -234.6582 202.0801 -231.8896 206.6045 -231.8896 c223.9971 -231.8896 l228.5205 -231.8896 232.2227 -228.2871 232.2227 -223.8828 c232.2227 -208.4121 l232.2227 -204.0078 234.9678 -197.9844 238.3213 -195.0293 c266.0723 -170.5811 266.0723 -147.2998 vBb0 0 0 0 Bh1 (Unnamed gradient) 139 10.3335 -89.5558 172.0057 0.9419 0 0 0.9419 478.0391 624.8477 Bg1.256 -162.0073 -162.0073 -1.256 141.4326 -147.584 Bmb2 BBu*u1 0.72 0 0.06 (PANTONE Reflex Blue CVC) 0 x1 w105.8989 -136.4453 m105.5503 -136.084 105.1255 -135.6445 104.2007 -135.6445 c102.4414 -135.6445 101.9414 -137.2363 101.9414 -138.4033 c101.9414 -140.7236 103.4268 -141.3613 104.4434 -141.3613 c105.1255 -141.3613 105.687 -141.1953 106.1416 -141.0566 c105.3232 -142.333 L104.9585 -142.4395 104.6099 -142.5283 104.0342 -142.5283 c101.9263 -142.5283 100.3491 -140.9502 100.3491 -138.7969 c100.3491 -137.7051 100.8638 -134.627 104.5039 -134.627 c105.2012 -134.627 105.6265 -134.7036 106.0356 -134.7803 C105.8989 -136.4453 lf*U*u111.3887 -141.542 m109.9326 -141.6631 108.416 -140.5439 108.416 -138.2686 c108.416 -136.5996 109.311 -135.5977 110.3418 -135.5977 c111.7524 -135.5977 112.7686 -137.0381 112.7686 -138.6475 c112.7686 -140.3594 111.9189 -141.1182 111.3887 -141.542 cf1 D110.3276 -134.519 m109.0229 -134.9155 106.7935 -135.5977 106.7935 -138.9053 c106.7935 -141.6631 108.7803 -142.6797 110.3276 -142.6797 c111.2979 -142.6797 114.1938 -141.7861 114.1938 -138.3291 c114.1938 -135.9775 112.4951 -134.4463 110.3276 -134.519 cf*U*u0 D117.5142 -134.5981 m117.5142 -136.3428 L117.6206 -136.1738 118.0767 -135.4023 118.1973 -135.25 c118.7583 -134.5645 119.6079 -134.5645 119.6997 -134.5645 c121.2002 -134.5645 121.5181 -135.916 121.6084 -136.3428 c121.7007 -136.1738 122.1094 -135.3867 122.2158 -135.2344 c122.7168 -134.6113 123.4141 -134.5645 123.749 -134.5645 c124.9009 -134.5645 125.355 -135.3408 125.4614 -135.5518 c125.6733 -135.9473 125.6733 -136.3721 125.6733 -136.7656 c125.6733 -141.377 L125.6733 -141.8477 125.6733 -142.043 125.9165 -142.5576 c123.9443 -142.5576 L124.1724 -142.0752 124.1724 -142.0127 124.1724 -141.377 c124.1724 -136.8721 L124.1724 -136.1875 123.5508 -135.7363 122.9595 -135.7363 c122.2607 -135.7363 121.8672 -136.2344 121.6084 -136.5537 c121.6084 -141.2529 L121.6084 -141.9063 121.6851 -142.167 121.8818 -142.5576 c119.7739 -142.5576 L120.0015 -142.1807 120.0781 -142.0127 120.0781 -141.2529 c120.0781 -137.3271 L120.0781 -136.8564 120.0781 -136.5234 119.8804 -136.25 c119.6533 -135.9316 119.3203 -135.7363 118.9707 -135.7363 c118.3789 -135.7363 117.9707 -136.0977 117.5142 -136.5381 c117.5142 -141.2393 L117.5142 -141.7549 117.5142 -142.0283 117.8486 -142.5576 c115.6953 -142.5576 L115.937 -142.0596 116.0146 -141.875 116.0146 -141.2998 c116.0146 -136.2051 L116.0146 -135.3721 115.8623 -134.9912 115.6953 -134.5981 C117.5142 -134.5981 lf*U*u129.9048 -136.3721 m130.2236 -136.1279 130.6475 -135.8086 131.2993 -135.8086 c131.8301 -135.8086 133.3018 -136.1426 133.3018 -138.3145 c133.3018 -140.5859 132.0127 -141.1182 131.1323 -141.1182 c130.5864 -141.1182 130.2236 -140.9502 129.9048 -140.8008 c129.9048 -136.3721 Lf1 D127.918 -134.5981 m128.1299 -135.0068 128.3726 -135.4766 128.3726 -137.0088 C128.3726 -142.9844 l128.3726 -144.167 128.2505 -144.4102 127.918 -144.9707 C130.3594 -144.9707 l129.981 -144.2578 129.9048 -143.9082 129.9048 -142.8037 C129.9048 -141.3145 l130.2236 -141.5879 131.0112 -142.2861 131.9971 -142.2861 c133.2852 -142.2861 134.8936 -141.0127 134.8936 -138.2979 c134.8936 -135.916 133.6357 -134.5513 132.1338 -134.5513 c131.103 -134.5513 130.541 -135.3096 129.9048 -136.2207 c129.9048 -135.583 129.9194 -135.3252 129.9658 -134.5981 c127.918 -134.5981 Lf*U*u0 D138.5039 -131.1084 m138.3057 -132.1113 138.2295 -133.0205 138.2295 -133.6875 c138.2295 -140.209 L138.2295 -141.3301 138.3057 -141.6484 138.7148 -142.5576 c136.1377 -142.5576 L136.3037 -142.2549 136.7148 -141.498 136.7148 -140.7549 c136.7285 -133.3081 L136.7285 -132.5796 136.6074 -132.1855 136.3955 -131.5347 C138.5039 -131.1084 lf*U*u1 D141.46 -131.2305 m141.0039 -131.2305 140.4131 -131.5806 140.4131 -132.3677 c140.4131 -133.0815 140.8984 -133.5366 141.4902 -133.5366 c142.2471 -133.5366 142.5664 -132.8384 142.5664 -132.3984 c142.5664 -131.8667 142.1426 -131.2305 141.46 -131.2305 cf140.292 -134.5981 m140.5957 -135.2178 140.7012 -135.583 140.7012 -136.5996 C140.7012 -140.2686 l140.7012 -141.832 140.5801 -142.0283 140.2324 -142.5576 C142.6729 -142.5576 l142.4609 -142.209 142.2178 -141.8008 142.2178 -140.3594 C142.2178 -136.583 l142.2178 -135.3096 142.3994 -134.9766 142.5977 -134.5981 c140.292 -134.5981 Lf*U*u0 D146.3887 -134.5981 m146.3887 -136.3428 L146.4932 -136.1738 146.9502 -135.4023 147.0703 -135.25 c147.6318 -134.5645 148.4805 -134.5645 148.5732 -134.5645 c150.0752 -134.5645 150.3926 -135.916 150.4834 -136.3428 c150.5752 -136.1738 150.9844 -135.3867 151.0898 -135.2344 c151.5898 -134.6113 152.2861 -134.5645 152.6211 -134.5645 c153.7715 -134.5645 154.2285 -135.3408 154.335 -135.5518 c154.5459 -135.9473 154.5459 -136.3721 154.5459 -136.7656 c154.5459 -141.377 L154.5459 -141.8477 154.5459 -142.043 154.791 -142.5576 c152.8184 -142.5576 L153.0459 -142.0752 153.0459 -142.0127 153.0459 -141.377 c153.0459 -136.8721 L153.0459 -136.1875 152.4229 -135.7363 151.832 -135.7363 c151.1348 -135.7363 150.7393 -136.2344 150.4834 -136.5537 c150.4834 -141.2529 L150.4834 -141.9063 150.5615 -142.167 150.7568 -142.5576 c148.6484 -142.5576 L148.877 -142.1807 148.9531 -142.0127 148.9531 -141.2529 c148.9531 -137.3271 L148.9531 -136.8564 148.9531 -136.5234 148.7529 -136.25 c148.5254 -135.9316 148.1953 -135.7363 147.8438 -135.7363 c147.252 -135.7363 146.8438 -136.0977 146.3887 -136.5381 c146.3887 -141.2393 L146.3887 -141.7549 146.3887 -142.0283 146.7227 -142.5576 c144.5674 -142.5576 L144.8115 -142.0596 144.8857 -141.875 144.8857 -141.2998 c144.8857 -136.2051 L144.8857 -135.3721 144.7363 -134.9912 144.5674 -134.5981 C146.3887 -134.5981 lf*U*u158.1104 -137.8438 m158.2324 -136.4922 158.6406 -135.583 159.7783 -135.583 c160.8701 -135.583 161.4014 -136.4023 161.3555 -137.8438 c158.1104 -137.8438 Lf1 D162.1738 -140.6318 m161.2783 -141.042 160.7334 -141.2529 160.0967 -141.2529 c158.3379 -141.2529 158.2012 -139.4043 158.1553 -138.8594 C162.3428 -138.7676 l162.3428 -137.9033 162.3555 -137.5703 162.249 -136.9336 c162.0234 -135.416 160.9922 -134.627 159.6875 -134.627 c157.8213 -134.627 156.5029 -136.084 156.5029 -138.7217 c156.5029 -140.5117 157.1396 -142.5576 159.6709 -142.5576 c160.415 -142.5576 160.9473 -142.3779 161.4336 -142.209 c162.1738 -140.6318 Lf*U*u0 D166.7988 -134.8999 m167.1162 -134.7334 167.4961 -134.5361 168.0127 -134.5361 c168.7266 -134.5361 170.0146 -135.1289 170.0146 -136.6143 c170.0146 -141.1953 L170.0146 -141.832 170.0771 -142.0283 170.3018 -142.5576 c168.2695 -142.5576 L168.5146 -141.9209 168.5146 -141.6328 168.5146 -141.2393 c168.5146 -136.8564 L168.5146 -136.583 168.2412 -135.8252 167.0713 -135.8252 c166.3291 -135.8252 166.0264 -136.0381 165.6611 -136.2813 c165.6611 -140.8008 L165.6611 -141.6328 165.6934 -141.8916 165.7988 -142.5576 c163.7803 -142.5576 L164.1143 -141.8008 164.1768 -140.9502 164.1768 -140.1328 c164.1768 -135.8701 L164.1768 -135.6592 164.0391 -134.9766 163.9648 -134.5981 c165.6777 -134.5981 L165.6611 -136.1426 L166.7988 -134.8999 lf*U*u176.2764 -134.7944 m176.2764 -135.7949 L174.2607 -135.7949 L174.2607 -138.6475 L174.2607 -140.4365 174.2607 -140.6318 174.3359 -140.8447 c174.4268 -141.1182 174.8369 -141.498 175.3359 -141.498 c175.5938 -141.498 175.8223 -141.4521 176.3682 -141.3301 c175.5039 -142.4395 L174.9893 -142.5439 174.6387 -142.6045 174.2002 -142.6045 c173.001 -142.6045 172.6826 -141.7256 172.6826 -141.2998 c172.6826 -140.9668 172.7266 -140.6934 172.7266 -140.1943 c172.7266 -135.7949 L171.6963 -135.7949 L171.9258 -135.5234 172.168 -135.2803 174.2607 -133.127 c174.2607 -134.7944 L176.2764 -134.7944 lf*U*u181.4033 -136.2207 m181.0684 -135.9316 180.6289 -135.5234 179.9316 -135.5234 c179.2178 -135.5234 178.7783 -136.0234 178.7783 -136.583 c178.7783 -137.1904 179.0996 -137.4023 180.127 -138.084 c180.9482 -138.6318 181.4941 -139.1768 181.4941 -140.2842 c181.4941 -141.6328 180.6006 -142.5732 178.9004 -142.5732 c178.7041 -142.5732 177.9619 -142.5732 176.9912 -142.2861 c177.0986 -140.2412 L177.8242 -141.2842 178.2021 -141.71 178.8389 -141.71 c179.6602 -141.71 180.0098 -141.1348 180.0098 -140.6318 c180.0098 -139.9502 179.585 -139.6777 178.748 -139.1455 c178.2344 -138.8145 177.2324 -138.1309 177.2324 -136.8564 c177.2324 -135.9775 177.9912 -134.627 179.8867 -134.627 c180.5068 -134.627 180.8408 -134.749 181.4033 -134.9609 C181.4033 -136.2207 lf*U*u138.7041 -156.3467 m137.4561 -156.4512 136.1563 -155.4902 136.1563 -153.5391 c136.1563 -152.1084 136.9238 -151.252 137.8076 -151.252 c139.0156 -151.252 139.8877 -152.4863 139.8877 -153.8652 c139.8877 -155.332 139.1592 -155.9824 138.7041 -156.3467 cf1 D137.7949 -150.3291 m136.6768 -150.667 134.7666 -151.252 134.7666 -154.085 c134.7666 -156.4512 136.4678 -157.3223 137.7949 -157.3223 c138.626 -157.3223 141.1084 -156.5557 141.1084 -153.5918 c141.1084 -151.5752 139.6523 -150.2646 137.7949 -150.3291 cf*U*u0 D145.4258 -151.4355 m143.9424 -151.4355 L143.9424 -155.5684 L143.9424 -156.5029 144.1113 -156.8291 144.3066 -157.1934 c142.2275 -157.2188 L142.5391 -156.6455 142.6035 -156.1797 142.6035 -155.4629 c142.6035 -151.4355 L141.9268 -151.4092 L142.252 -150.9922 142.3438 -150.8613 142.6035 -150.4473 c142.6035 -150.0439 L142.6035 -149.3281 142.6035 -147.3789 144.8398 -147.3789 c145.333 -147.3789 145.7236 -147.4688 146.0742 -147.5488 c145.9443 -148.1982 145.9043 -148.3789 145.8145 -149.0029 c145.6572 -148.6777 145.4121 -148.3398 144.8262 -148.3398 c143.9424 -148.3398 143.9424 -149.2754 143.9424 -149.6787 c143.9424 -150.5371 L145.4258 -150.5371 L145.4258 -151.4355 lf*UUu*u1 0.09 0 0.06 (PANTONE Process Blue CVC) 0 x1 D142.2695 -80.2422 m141.1025 -77.3599 137.8838 -74.6108 133.645 -73.6826 c129.4058 -72.7529 125.4487 -73.9131 124.8062 -76.271 c124.1641 -78.6289 127.0815 -81.2939 131.3193 -82.2222 c135.5601 -83.1514 143.1953 -82.5239 142.2695 -80.2422 cf/BBAccumRotation (-0.239461) XT0 D134.3774 -81.2397 m131.8311 -80.6831 130.0815 -79.082 130.4644 -77.667 c130.8506 -76.25 133.2261 -75.5542 135.7734 -76.1118 c138.3169 -76.6709 140.25 -78.3198 140.9512 -80.0503 c141.5078 -81.4219 136.9209 -81.7959 134.3774 -81.2397 cf/BBAccumRotation (-0.239461) XT*U*u141.5898 -80.6167 m142.3799 -77.1738 145.2598 -73.8618 149.4189 -72.7041 c153.5762 -71.5435 157.7314 -72.8716 158.7002 -75.6685 c159.668 -78.4634 157.083 -81.6704 152.9258 -82.8301 c148.7676 -83.9883 140.9658 -83.3423 141.5898 -80.6167 cf/BBAccumRotation (0.301285) XT1 D149.2754 -81.9648 m151.7734 -81.2695 153.3232 -79.3452 152.7441 -77.665 c152.1621 -75.9863 149.668 -75.189 147.1699 -75.8848 c144.6748 -76.5801 142.9453 -78.5688 142.4707 -80.6362 c142.0967 -82.2734 146.7783 -82.6611 149.2754 -81.9648 cf/BBAccumRotation (0.301285) XT*Uu0 D143.5869 -95.3066 m157.9609 -95.3066 L157.9609 -84.9175 L143.5869 -84.9175 L143.5869 -95.3066 Lf139.5947 -95.3066 m139.5947 -84.9175 L125.2192 -84.9175 L125.2192 -95.3066 L139.5947 -95.3066 Lf139.5947 -98.8892 m125.2192 -98.8892 L125.2192 -116.4458 L139.5947 -116.4458 L139.5947 -98.8892 Lf143.5869 -98.8892 m143.5869 -116.4458 L157.9609 -116.4458 L157.9609 -98.8892 L143.5869 -98.8892 LfU1 Ap142.7881 -81.1548 m142.7881 -82.0454 142.1631 -82.7666 141.3916 -82.7666 c140.6191 -82.7666 139.9932 -82.0454 139.9932 -81.1548 c139.9932 -80.2646 140.6191 -79.5425 141.3916 -79.5425 c142.1631 -79.5425 142.7881 -80.2646 142.7881 -81.1548 cfU0 Ap1 0.72 0 0.06 (PANTONE Reflex Blue CVC) 0 x85.9668 -169.2275 m86.0806 -169.2725 86.0137 -169.3848 85.9688 -169.4316 C82.1938 -173.8838 78.4854 -178.2227 74.8696 -182.6738 c74.1753 -183.79 74.1885 -185.4004 74.9229 -186.5068 C75.0146 -186.665 75.1738 -186.7764 75.1982 -186.957 C73.0669 -187.042 71.0708 -187.0137 69.0293 -186.9609 C67.9336 -186.0176 67.5117 -184.3193 68.0679 -182.9092 C68.2241 -182.6357 68.335 -182.3174 68.5371 -182.0664 c72.1094 -177.8418 75.771 -173.3682 79.4346 -169.2109 C81.5205 -169.1035 83.7676 -169.2666 85.9668 -169.2275 Cf1 0.09 0 0.06 (PANTONE Process Blue CVC) 0 x86.7852 -169.4023 m90.334 -173.6836 93.9297 -178.0537 97.4341 -182.3818 C98.1689 -183.5098 98.1138 -185.1426 97.4648 -186.3057 C97.1948 -186.5801 96.9941 -186.9893 96.6094 -187.0605 C90.5986 -187.0625 L90.5757 -186.9727 L91.4741 -185.877 91.6875 -184.1738 91.0874 -182.8848 C90.2383 -181.5996 89.1636 -180.4961 88.2241 -179.2793 c83.3916 -173.375 L83.4126 -173.1484 L86.626 -169.3809 L86.7852 -169.4023 Lf1 0.72 0 0.06 (PANTONE Reflex Blue CVC) 0 x84.8257 -179.7822 m84.4956 -181.0322 83.4146 -182.0156 82.9019 -183.1309 C82.0713 -181.3691 80.2441 -179.7734 81.1577 -177.6123 C81.6255 -176.6328 82.3438 -175.7412 82.9722 -174.8525 C83.9141 -176.3418 85.4683 -177.8721 84.8257 -179.7822 Cf*u1 0.09 0 0.06 (PANTONE Process Blue CVC) 0 x145.5762 -175.6045 m145.7627 -176.1924 145.4492 -176.8301 145.6348 -177.4639 C146.0703 -177.8457 146.9512 -177.3164 147.1592 -177.9961 C147.1631 -178.4268 147.2344 -178.8799 147.0117 -179.2451 C146.5605 -179.6797 145.8086 -179.2764 145.4063 -179.8242 C145.2832 -181.6172 145.25 -183.1367 145.377 -184.8828 C145.5195 -185.6299 147.3369 -186.0234 146.1865 -186.8721 C144.9189 -187.0176 143.4463 -187.2793 142.3735 -186.4941 C141.5942 -185.457 142.083 -184.1152 142.0269 -182.8672 c142.0664 -182.0059 142.1934 -180.9395 142.0049 -180.0098 C141.7979 -179.626 141.2998 -179.7656 140.9585 -179.6787 C140.0288 -179.708 138.8252 -179.5811 138.312 -180.5381 C138.1782 -180.8574 L138.1899 -182.3086 137.9756 -183.9434 138.1904 -185.3027 C138.3306 -185.7549 138.9229 -186.0674 138.6318 -186.5918 C138.3857 -187.002 137.8413 -186.9834 137.3887 -187.0088 c136.481 -187.0605 135.6411 -186.9551 134.7788 -186.9395 C134.5742 -186.8506 134.3022 -186.8066 134.2544 -186.5576 C134.0688 -186.0371 134.6563 -185.7842 134.7666 -185.3525 C135.0234 -183.3994 135.0073 -181.3809 134.832 -179.3184 C134.7827 -178.7529 133.8745 -178.6006 134.2314 -177.9619 C134.4565 -177.7109 134.7964 -177.6406 135.1357 -177.5928 c135.8838 -177.4961 136.7222 -177.4209 137.4941 -177.5283 C138.0176 -177.7285 137.9092 -178.3418 137.9126 -178.8174 C138.21 -179.0195 138.3867 -178.4736 138.5894 -178.3594 C139.646 -177.0811 141.6509 -178.2656 142.7515 -177.0781 c143.519 -176.5273 144.2617 -175.751 145.0527 -175.291 C145.2783 -175.2666 145.5293 -175.3779 145.5762 -175.6045 Cf*U*u107.5762 -174.2725 m107.8262 -174.3848 108.0322 -174.6543 108.1479 -174.9023 C109.1265 -178.2295 109.9023 -181.6475 110.8359 -184.9961 C110.9741 -185.291 111.0913 -185.6758 111.4097 -185.8096 C111.5913 -185.876 111.7495 -185.7842 111.8848 -185.6914 C112.1997 -185.3271 112.1499 -184.7832 112.2139 -184.3057 c112.3101 -182.127 112.3345 -179.4746 112.1353 -177.208 C112.3101 -176.3887 110.626 -175.6777 111.937 -175.0996 C112.8643 -174.7295 113.79 -174.2461 114.7861 -173.9658 C115.0356 -173.9863 115.376 -173.9844 115.4912 -174.3008 C115.5625 -174.6631 L115.4312 -178.1104 115.2554 -181.7188 115.4175 -184.9609 C115.3096 -185.7109 116.5371 -186.0635 115.9312 -186.8398 C115.2305 -187.1621 114.3228 -187.0791 113.4839 -187.1084 c108.2905 -187.1494 l107.9043 -187.085 107.4277 -187.0879 107.1987 -186.749 C106.9199 -185.958 108.0049 -185.4502 107.4536 -184.6152 C107.2676 -184.0273 107.2847 -183.3242 106.9634 -182.8281 C106.1455 -182.6299 105.127 -182.9326 104.3979 -182.5527 C103.5527 -181.7666 L103.3716 -181.791 L102.9717 -182.8594 102.6626 -183.9502 102.354 -185.042 C101.9521 -185.793 102.9746 -186.0801 102.7075 -186.7402 C102.4839 -187.1279 101.9844 -187.0635 101.5767 -187.1113 C100.8726 -187.0264 99.8765 -187.2383 99.6885 -186.4014 C99.8838 -185.3096 100.4209 -184.3545 100.7305 -183.3086 c101.5977 -181.1914 102.3062 -179.0322 103.1514 -176.8926 C103.3052 -176.3018 103.7759 -175.5273 103.2495 -174.9639 C103.2246 -174.6924 103.2231 -174.4434 103.4248 -174.2832 C104.3066 -173.8672 105.4653 -174.1309 106.4404 -174.1221 c107.5762 -174.2725 Lf1 D105.2852 -177.125 m105.0356 -177.1729 104.8105 -177.3799 104.7441 -177.583 C104.3896 -178.584 103.9209 -179.5635 103.8848 -180.6758 C104.3848 -180.8525 104.8838 -180.8486 105.4507 -180.8672 C105.7681 -180.8193 106.2451 -180.8838 106.4692 -180.5859 C106.5093 -179.9287 106.1865 -179.2725 106.1133 -178.5938 c105.9507 -178.0498 106.0342 -177.1875 105.2852 -177.125 Cf*U*u0 D154.0547 -178.0088 m154.4912 -178.6416 154.1123 -179.4834 153.7764 -180.0752 C153.4395 -180.5088 153.0586 -181.0791 152.3994 -180.9482 C152.1494 -180.9053 151.8779 -180.8164 151.8066 -180.5674 C151.8252 -180.0449 152.4805 -179.6318 152.0674 -179.1143 C151.9072 -178.8887 151.6133 -178.9814 151.4531 -178.7783 C150.9082 -178.7832 150.2725 -178.7422 149.9814 -179.2666 C149.7813 -179.6309 149.9873 -179.9922 150.2168 -180.2861 C151.5879 -181.5225 154.2383 -181.1152 154.4844 -183.5176 C154.5361 -184.4697 154.3877 -185.627 153.7119 -186.3135 C152.5635 -187.3652 150.7256 -187.2217 149.2051 -187.1191 c148.4092 -186.8545 147.0732 -187.1143 147.0186 -185.9121 c146.9678 -185.209 146.6406 -184.124 147.3184 -183.7334 C148.293 -183.6123 148.166 -184.8154 148.917 -185.1045 C149.6475 -185.5742 150.6689 -185.793 151.5273 -185.4463 C151.7539 -185.2627 151.7959 -184.9902 151.7939 -184.7178 C151.4688 -183.7676 150.29 -183.6416 149.4688 -183.2402 c148.4238 -182.9072 147.2383 -182.2598 147.1387 -181.0127 C147.1064 -179.8564 146.959 -178.4287 148.1787 -177.8057 C149.9414 -177.0449 152.0967 -177.0723 153.8271 -177.8535 C154.0547 -178.0088 Lf*U*u171.9014 -177.5732 m172.2676 -178.0469 172.4521 -178.5674 172.5928 -179.1094 c173.2217 -181.1689 173.6016 -183.3203 174.3428 -185.3096 C174.5264 -185.5137 174.708 -185.6484 174.959 -185.7598 C175.0273 -185.6904 L175.1348 -185.0547 174.7197 -184.2412 175.3525 -183.8506 C175.5332 -183.8281 175.6475 -183.8262 175.8281 -183.8467 C176.332 -184.3193 176.6777 -185.0654 177.4053 -185.2871 C178.0869 -185.4619 178.9502 -185.6367 179.6055 -185.3145 C179.8994 -185.1758 179.9414 -184.8799 179.9854 -184.6084 C179.8438 -183.8838 179.0264 -183.7988 178.458 -183.5547 c177.3428 -183.1777 176.0479 -182.9385 175.3584 -181.8096 C175.123 -180.6543 174.793 -179.0244 175.7148 -178.0645 C176.751 -177.1504 178.248 -177.1602 179.6084 -177.1943 c180.5391 -177.3232 181.6289 -177.293 182.1797 -178.1953 C182.3223 -179.0107 182.126 -179.873 181.6074 -180.4678 C181.1797 -180.7881 180.6836 -181.0879 180.0928 -180.8887 C180 -180.8203 179.8408 -180.7314 179.8398 -180.5947 C179.7451 -180.0967 180.2412 -179.8203 180.1475 -179.3672 C180.1016 -179.1182 180.0078 -178.8926 179.7803 -178.7578 C179.3477 -178.625 178.7813 -178.6074 178.4199 -178.9053 C178.2168 -179.0664 178.2197 -179.292 178.1533 -179.5195 C178.0898 -180.1104 178.6377 -180.4902 179.0918 -180.7373 C180.4355 -181.3379 182.6143 -181.4346 182.833 -183.3613 C182.9111 -184.5615 182.7383 -185.8105 181.6563 -186.4775 C181.0469 -186.959 180.2305 -186.9424 179.46 -187.0391 c178.0752 -186.9824 176.4238 -187.3125 175.2588 -186.3916 C175.0781 -186.3936 175.0342 -186.6436 174.8535 -186.7129 C173.8584 -187.0381 172.8369 -186.9785 171.7715 -186.918 C171.4297 -186.8076 171.0654 -186.6074 170.9482 -186.2676 C170.4346 -184.3662 170.0557 -182.3506 169.4736 -180.4961 C169.3584 -180.2021 169.1289 -179.9541 168.8115 -179.8203 C168.5615 -179.8223 168.2891 -179.8018 168.1104 -180.0068 C167.9297 -180.2363 167.8643 -180.5078 167.9121 -180.8486 c167.8779 -182.2539 167.8457 -183.8428 168.083 -185.2695 C168.2451 -185.6768 168.7695 -185.9443 168.5693 -186.4678 C167.8271 -187.1992 166.4854 -186.915 165.4658 -186.9678 C165.0566 -186.8809 164.4668 -186.8857 164.373 -186.3418 C164.3232 -185.8887 164.7744 -185.5918 164.8838 -185.1582 C165.0283 -183.3203 164.9434 -181.2344 164.7949 -179.5127 C164.7676 -178.9453 163.9258 -178.5889 164.2832 -177.9971 C164.7109 -177.5625 165.3232 -177.5576 165.8887 -177.4395 c166.5244 -177.4346 167.3389 -177.1338 167.7959 -177.6514 C167.9102 -177.877 167.7783 -178.1953 168.0283 -178.3291 C168.6846 -178.1201 169.2471 -177.6855 169.8809 -177.4307 C170.4922 -177.2217 171.3975 -177.0332 171.9014 -177.5732 Cf*U*u163.2256 -179.0029 m163.7607 -180.8135 163.9814 -182.7842 163.8604 -184.7363 C163.7314 -185.6895 163.082 -186.6709 162.1309 -186.9258 C160.5244 -187.3486 158.5527 -187.4316 156.9609 -186.9453 C154.8662 -186.0771 154.9385 -183.5146 154.9453 -181.541 c155.0684 -180.0879 155.1699 -178.499 156.502 -177.6953 C158.0391 -177.0029 160.1045 -177.2363 161.7158 -177.54 C162.4219 -177.7393 162.9932 -178.3242 163.2256 -179.0029 Cf1 D158.3945 -179.041 m157.7686 -180.2246 158.123 -181.8555 158.1328 -183.125 c158.207 -183.9414 158.3037 -184.7334 158.8525 -185.3428 C159.2637 -185.7246 159.9424 -185.5605 160.3955 -185.4668 C160.3965 -185.5117 L160.4404 -185.3525 160.5996 -185.3066 160.6895 -185.1934 C161.1572 -184.2578 160.8311 -183.1045 160.8457 -182.1064 c160.6787 -181.0645 160.7588 -179.793 160.0488 -178.9375 C159.5713 -178.6914 158.8008 -178.7197 158.3945 -179.041 Cf*U*u0 D120.0967 -174.4463 m120.2876 -175.6465 120.0942 -176.9629 120.0815 -178.165 C120.104 -178.2334 120.1724 -178.3008 120.2183 -178.2998 C121.1904 -177.9521 122.2261 -176.9912 123.3213 -177.7314 C124.3945 -178.7656 124.6104 -180.2158 125.0063 -181.5283 c125.2695 -183.2051 125.5576 -185.2207 124.1387 -186.4795 C123.5527 -186.96 122.7813 -186.8984 122.0562 -187.0635 c120.4697 -187.166 118.791 -187.1338 117.248 -187.0322 C116.9756 -186.9668 116.7021 -186.833 116.6089 -186.5391 C116.606 -186.1309 116.8076 -185.8115 116.9639 -185.4932 C117.1914 -182.7461 117.1934 -180.1387 117.0356 -177.418 C117.1665 -176.7373 115.8716 -176.4971 116.6377 -175.833 C117.5625 -175.1914 118.5337 -174.707 119.5508 -174.291 C119.7554 -174.2666 119.937 -174.3105 120.0967 -174.4463 Cf1 D120.8423 -179.793 m120.5708 -179.8389 120.2988 -179.9092 120.1426 -180.1611 C119.8545 -181.0938 119.9976 -182.0215 119.937 -182.9063 c119.9888 -183.7451 119.793 -184.7441 120.2749 -185.4443 C120.5708 -185.623 120.9346 -185.7334 121.3193 -185.6396 C121.6816 -185.5244 121.9746 -185.3174 122.1533 -184.998 C122.4849 -183.9297 122.1138 -182.7988 121.9458 -181.7334 c121.6919 -181.0322 121.6836 -180.0576 120.8423 -179.793 Cf*U1 0.72 0 0.06 (PANTONE Reflex Blue CVC) 0 x0 D81.166 -181.6484 m82.0103 -182.209 82.562 -183.1797 82.9097 -184.1064 C83.2642 -183.0605 83.9141 -182.0576 84.9302 -181.4824 C86.0801 -180.6572 87.7378 -180.9609 89.1895 -180.9502 C89.4951 -182.3086 88.8945 -183.7871 87.6758 -184.5449 C86.7075 -185.3701 85.1841 -184.9053 84.0313 -185.3906 C83.4209 -185.6455 83.1084 -186.3281 82.8403 -186.8066 C82.6294 -185.9238 81.8525 -185.2715 80.9443 -185.1426 C79.2671 -185.3145 77.6973 -184.6475 76.937 -183.1338 C76.5918 -182.4785 76.54 -181.6855 76.6245 -180.9365 C76.6924 -180.8896 L78.2124 -180.9004 79.9341 -180.6836 81.166 -181.6484 Cf*u1 0.09 0 0.06 (PANTONE Process Blue CVC) 0 x133.125 -178.584 m133.7007 -179.6221 134.0049 -180.8447 133.7207 -182.0488 C133.5195 -182.5264 132.9756 -182.5771 132.5688 -182.8066 C132.5698 -182.8975 L133.0259 -183.2344 133.708 -183.3867 133.7354 -184.0898 C133.813 -185.1553 133.1855 -186.2031 132.2148 -186.71 C130.8584 -187.334 129.2695 -187.1865 127.8159 -186.8809 C127.27 -186.6592 126.6328 -186.3916 126.3779 -185.7813 C125.7036 -183.6543 125.7271 -180.8418 126.5493 -178.7266 C127.5776 -176.9033 130.1216 -177.291 131.8701 -177.5732 C132.4155 -177.7275 132.7813 -178.1094 133.125 -178.584 Cf1 D129.6123 -178.8379 m128.9111 -179.1846 128.9639 -180.0684 128.8789 -180.7715 c128.9277 -181.248 128.7056 -181.8848 129.2075 -182.1523 C129.8423 -182.1025 130.6362 -182.0957 130.9941 -181.5254 C131.2139 -180.6621 131.0928 -179.6885 130.6567 -178.9883 C130.3823 -178.7412 129.9517 -178.7441 129.6123 -178.8379 Cf131.2339 -183.1797 m130.4873 -183.4121 129.6489 -183.4648 128.9712 -183.9004 C128.9087 -184.5586 129.1631 -185.1689 129.6421 -185.5742 C130.0986 -185.8418 130.6191 -185.7705 131.1172 -185.6299 C131.8164 -185.1943 132.1055 -184.375 132.0083 -183.5596 C131.937 -183.1963 131.5283 -183.1318 131.2339 -183.1797 cf*U*u1 0.72 0 0.06 (PANTONE Reflex Blue CVC) 0 x0 D191.8369 -186.3486 m191.6582 -186.5371 191.333 -186.7412 190.8584 -186.959 c190.3857 -187.1758 189.791 -187.2852 189.0762 -187.2852 c187.7256 -187.2852 186.6338 -186.876 185.7979 -186.0566 c184.9639 -185.2373 184.5479 -183.9941 184.5479 -182.3281 c184.5479 -180.9961 184.9756 -179.8184 185.8311 -178.7939 c186.6875 -177.7705 187.7822 -177.2588 189.1133 -177.2588 c189.6611 -177.2588 190.1572 -177.3076 190.6006 -177.4063 c191.0439 -177.5039 191.3857 -177.6123 191.6211 -177.7275 c191.6211 -180.4805 L191.1953 -180.1709 190.8096 -179.959 190.4619 -179.8428 c190.1143 -179.7285 189.7246 -179.6709 189.2949 -179.6709 c188.6152 -179.6709 188.0869 -179.8975 187.707 -180.3506 c187.3281 -180.8037 187.1406 -181.4863 187.1406 -182.3994 c187.1406 -183.2656 187.3643 -183.9121 187.8125 -184.3398 c188.2617 -184.7666 188.7949 -184.9805 189.4102 -184.9805 c189.9521 -184.9805 190.4092 -184.8916 190.7842 -184.7168 c191.1572 -184.54 191.5088 -184.3105 191.8369 -184.0264 c191.8369 -186.3486 Lf*U*u198.1563 -184.4883 m197.8389 -184.9492 197.3125 -185.1797 196.5791 -185.1797 c195.9209 -185.1797 195.3965 -184.8945 195.0059 -184.3281 c194.6152 -183.7607 194.4209 -183.0762 194.4209 -182.2715 c194.4209 -181.4092 194.584 -180.71 194.9111 -180.1719 c195.2373 -179.6338 195.7754 -179.3643 196.5264 -179.3643 c197.1855 -179.3643 197.7012 -179.6602 198.0732 -180.25 c198.4463 -180.8398 198.6328 -181.5146 198.6328 -182.2715 c198.6328 -183.29 198.4736 -184.0293 198.1563 -184.4883 cf1 D199.9131 -178.6182 m199.0869 -177.7119 197.9561 -177.2588 196.5225 -177.2588 c195.0996 -177.2588 193.9736 -177.75 193.1445 -178.7305 c192.3154 -179.7119 191.9004 -180.8916 191.9004 -182.2715 c191.9004 -183.79 192.2852 -185.0049 193.0537 -185.916 c193.8223 -186.8281 194.9785 -187.2852 196.5225 -187.2852 c197.9629 -187.2852 199.0938 -186.8311 199.918 -185.9258 c200.7402 -185.0195 201.1533 -183.8008 201.1533 -182.2715 c201.1533 -180.7422 200.7393 -179.5244 199.9131 -178.6182 cf*U*u0 D215.3027 -187.1045 m212.8008 -187.1045 L212.8008 -181.2578 L212.8008 -180.917 212.6914 -180.6152 212.4727 -180.3525 c212.2559 -180.0898 211.9111 -179.959 211.4414 -179.959 c211.0566 -179.959 210.7139 -180.0371 210.4131 -180.1934 c210.1123 -180.3506 209.8574 -180.5537 209.6514 -180.8047 c209.6514 -187.1045 L207.1504 -187.1045 L207.1504 -181.2578 L207.1504 -180.917 207.0391 -180.6152 206.8213 -180.3525 c206.6025 -180.0898 206.2568 -179.959 205.7861 -179.959 c205.3428 -179.959 204.9697 -180.0566 204.6641 -180.251 c204.3584 -180.4463 204.1367 -180.6367 203.999 -180.8223 c203.999 -187.1045 L201.4971 -187.1045 L201.4971 -177.7998 L203.999 -177.6016 L203.999 -178.5186 L204.9727 -177.8867 L205.291 -177.6777 205.6055 -177.5361 205.918 -177.4619 c206.2314 -177.3857 206.5459 -177.3486 206.8652 -177.3486 c207.4443 -177.3486 207.9365 -177.4736 208.3457 -177.7227 c208.7529 -177.9736 209.0674 -178.3164 209.2871 -178.7529 c210.6289 -177.8828 L210.9004 -177.7041 211.1953 -177.5703 211.5166 -177.4824 c211.8359 -177.3936 212.1729 -177.3486 212.5234 -177.3486 c213.3838 -177.3486 214.0625 -177.6328 214.5586 -178.2021 c215.0547 -178.7695 215.3027 -179.5186 215.3027 -180.4482 c215.3027 -187.1045 Lf*U1 Ap184.9551 -186.0693 m184.9551 -186.5947 184.5273 -187.0205 184.002 -187.0205 c183.4775 -187.0205 183.0518 -186.5947 183.0518 -186.0693 c183.0518 -185.5439 183.4775 -185.1172 184.002 -185.1172 c184.5273 -185.1172 184.9551 -185.5439 184.9551 -186.0693 cfu*u0 Ap186.3262 -193.5527 m186.3506 -193.8369 186.5488 -193.9414 186.8008 -193.9414 c187.0967 -193.9414 187.2207 -193.7881 187.2207 -193.6133 c187.2207 -193.1211 186.2129 -193.4473 186.2129 -192.8232 c186.2129 -192.6035 186.4033 -192.3975 186.7744 -192.3975 c187.1455 -192.3975 187.3311 -192.6143 187.3281 -192.8721 c187.1797 -192.8721 L187.1797 -192.6309 186.9834 -192.5264 186.7744 -192.5264 c186.457 -192.5264 186.3418 -192.7129 186.3691 -192.8779 c186.4395 -193.2871 187.3779 -192.9912 187.3779 -193.6064 c187.3779 -193.8984 187.1543 -194.0693 186.7744 -194.0693 c186.4297 -194.0693 186.1748 -193.8984 186.1748 -193.5527 C186.3262 -193.5527 lf*U*u187.7568 -194.0273 m187.7568 -192.6113 L187.7617 -192.6113 L188.3057 -194.0273 L188.4521 -194.0273 L188.9951 -192.6113 L188.999 -192.6113 L188.999 -194.0273 L189.1563 -194.0273 L189.1563 -192.4404 L188.9189 -192.4404 L188.3857 -193.8408 L188.3818 -193.8408 L187.8389 -192.4404 L187.6006 -192.4404 L187.6006 -194.0273 l187.7568 -194.0273 Lf*UUu1 0.09 0 0.06 k131.2476 -200.0791 m131.3535 -200.1318 L130.1118 -200.167 128.7451 -200.1133 127.4849 -200.2559 C127.2178 -200.4697 126.8105 -200.2744 126.4561 -200.3457 c126.1895 -200.3809 125.834 -200.2559 125.6211 -200.4512 C124.3252 -200.3809 123.083 -200.5225 121.8408 -200.7529 C121.8057 -200.9121 L120.1021 -201.2148 118.3623 -201.4268 116.729 -201.9424 C116.5869 -201.7998 116.7998 -201.3389 116.4453 -201.4629 C116.4453 -201.4092 116.4268 -201.3574 116.3745 -201.3389 C116.1792 -201.375 115.9839 -201.375 115.8066 -201.4268 C115.7886 -201.2324 115.522 -201.3389 115.3979 -201.3389 C115.3267 -201.3574 115.2563 -201.4092 115.1851 -201.3574 C115.0962 -201.3223 115.1499 -201.2148 115.1318 -201.1436 C114.9902 -201.0908 114.7412 -201.2852 114.7061 -201.0195 C116.1084 -200.5391 117.6699 -200.3975 119.2144 -200.2383 c122.8701 -199.7598 126.7397 -199.5283 130.52 -199.9365 c131.2476 -200.0791 Lf*u1 0.72 0 0.06 (PANTONE Reflex Blue CVC) 0 x103.2798 -198.0264 m103.2798 -198.6113 103.5781 -198.9814 104.2241 -198.9814 c104.2241 -199.2178 L100.7559 -199.2178 L100.7559 -198.9814 L101.4019 -198.9814 101.6997 -198.6113 101.6997 -198.0264 c101.6997 -192.7529 L101.6997 -192.168 101.4019 -191.7979 100.7559 -191.7979 c100.7559 -191.5615 L104.2241 -191.5615 L104.2241 -191.7979 L103.5781 -191.7979 103.2798 -192.168 103.2798 -192.7529 C103.2798 -198.0264 lf*U*u106.834 -198.3428 m106.5361 -198.9395 106.2178 -199.3877 105.3633 -199.3877 c104.8066 -199.3877 104.3491 -199.0381 104.3491 -198.5918 c104.3491 -195.1143 L103.8721 -195.1143 L103.8721 -194.835 L104.23 -194.4971 104.707 -194.0283 105.4824 -192.9854 c105.7012 -192.9854 L105.7012 -194.6455 L106.606 -194.6455 L106.606 -195.1143 L105.7012 -195.1143 L105.7012 -198.333 L105.7012 -198.7402 105.8799 -198.8193 105.9795 -198.8193 c106.1982 -198.8193 106.5361 -198.4424 106.6357 -198.2324 C106.834 -198.3428 lf*U*u1 D107.001 -194.8809 m107.2495 -194.751 107.8062 -194.3828 108.0439 -193.8057 c108.2632 -193.25 107.9648 -193.3496 107.7363 -193.3379 c107.001 -193.3184 106.7026 -192.5645 107.1104 -192.0371 c107.4478 -191.5996 108.3228 -191.5996 108.6011 -192.3262 c108.958 -193.2607 108.4126 -194.0742 108.0049 -194.4629 c107.8555 -194.6025 107.3291 -195.0098 107.1304 -195.0586 C107.001 -194.8809 lf*U*u0 D110.835 -195.9785 m110.5669 -195.3516 L110.4478 -195.083 109.8911 -194.8057 109.563 -194.8447 c108.6582 -194.9531 108.9268 -195.8291 109.3745 -196.0371 c109.7319 -196.2061 110.0796 -196.376 110.4375 -196.5439 c111.3223 -196.9717 111.3818 -198.0762 111.1138 -198.6211 c110.7456 -199.377 109.7813 -199.5254 108.9868 -199.2871 c108.7974 -199.2275 108.3008 -198.9805 108.1812 -199.3877 c107.9927 -199.3877 L107.9727 -197.7363 L108.1914 -197.7568 L108.251 -197.9258 108.6191 -199.3281 109.7617 -199.0576 c110.4072 -198.9092 110.6064 -198.2041 109.9502 -197.7861 c109.5728 -197.5479 109.106 -197.4482 108.7578 -197.1904 c107.1577 -195.9873 108.3306 -194.5654 109.4336 -194.5264 c109.7422 -194.5156 110.1987 -194.585 110.4873 -194.6953 c110.6167 -194.7441 110.8252 -194.7646 110.8647 -194.5264 c111.0439 -194.5264 L111.0537 -195.9785 L110.835 -195.9785 lf*U*u115.1289 -200.0547 m114.5508 -200.7676 113.9658 -201.4697 113.1001 -201.4365 c112.7983 -201.4238 112.3999 -201.2285 112.418 -200.7822 c112.4307 -200.4736 112.6616 -200.2539 112.8921 -200.2637 c113.3604 -200.2813 113.417 -200.8613 113.7588 -200.875 c114.061 -200.8867 114.3643 -200.4707 114.5029 -200.1777 c114.7202 -199.7109 114.7734 -199.1943 114.7944 -198.6582 c114.7305 -196.4668 L114.7139 -196.2783 114.6763 -195.4297 114.4302 -195.4209 c114.0962 -195.4072 113.9707 -196.1777 113.7793 -196.1719 c113.7241 -196.168 113.687 -196.0977 113.6895 -196.0273 c113.6973 -195.8389 113.9609 -195.4111 114.0615 -195.2754 c114.3486 -194.8906 114.749 -194.6182 115.1777 -194.6338 c115.71 -194.6553 115.8022 -195.3262 115.8613 -195.8564 c115.9248 -196.4648 115.9121 -197.1709 115.8877 -197.7861 c115.853 -198.6494 L116.2241 -198.1191 116.9067 -197.1807 116.9355 -196.4463 c116.9438 -196.2373 116.9238 -196.1465 116.8765 -195.9453 c116.8286 -195.7354 116.7793 -195.5742 116.7881 -195.3555 c116.8022 -195.0088 116.9971 -194.707 117.291 -194.7197 c117.5928 -194.7305 117.7378 -195.085 117.7241 -195.4229 c117.6914 -196.2471 117.0454 -197.2959 116.6533 -197.9365 C115.1289 -200.0547 lf*U*u118.2178 -198.8906 m117.8906 -198.5322 117.7026 -198.0352 117.7026 -197.4482 c117.7026 -195.8086 118.8574 -194.666 119.9355 -194.666 c120.7642 -194.666 121.564 -195.3906 121.564 -196.6836 c121.564 -198.3535 120.3188 -199.3477 119.2686 -199.3477 c118.8853 -199.3477 118.5303 -199.2275 118.2178 -198.8906 cf1 D120.5137 -195.8779 m120.5137 -195.4209 120.4438 -194.9834 120.061 -194.9834 c119.603 -194.9834 119.2686 -195.7393 119.1016 -196.2656 c118.9204 -196.8232 118.7881 -197.4482 118.7881 -198.0645 c118.7881 -198.4932 118.8784 -199.0576 119.2476 -199.0576 c120.0264 -199.0576 120.5137 -196.7725 120.5137 -195.8779 cf*U*u0 D124.6318 -197.3301 m124.3369 -197.7969 124.1064 -198.165 123.7495 -198.5615 c123.4229 -198.9189 122.9775 -199.3477 122.5239 -199.3477 c122.1748 -199.3477 121.9517 -199.0088 121.9517 -198.6016 c121.9517 -198.333 121.9995 -198.0957 122.0791 -197.8564 c122.7393 -195.8291 L122.7554 -195.7578 122.8105 -195.5908 122.8105 -195.5107 c122.8105 -195.4512 122.771 -195.3809 122.7153 -195.3809 c122.4536 -195.3809 122.0625 -196.1465 121.936 -196.1465 c121.8804 -196.1465 121.832 -196.0869 121.832 -196.0166 c121.832 -195.8496 122.1831 -195.4209 122.2856 -195.3125 c122.5962 -194.9648 123.041 -194.666 123.4712 -194.666 c123.7886 -194.666 123.9961 -194.8643 123.9961 -195.2725 c123.9961 -195.5215 123.9238 -195.7783 123.8525 -196.0078 c123.3042 -197.7568 L123.2725 -197.876 123.2002 -198.125 123.2002 -198.2441 c123.2002 -198.3428 123.2402 -198.4229 123.3198 -198.4229 c123.6372 -198.4229 124.3057 -197.3984 124.4883 -197.0811 c124.8384 -196.4639 125.0454 -195.8174 125.2046 -195.0928 c125.228 -194.9834 125.2515 -194.8936 125.3311 -194.8447 c125.4346 -194.7744 125.7446 -194.7852 125.8643 -194.7852 c126.2139 -194.7852 L126.2617 -194.7852 126.3564 -194.7939 126.3564 -194.875 c126.3564 -194.9141 126.3413 -194.9736 126.333 -195.002 c125.7769 -197.3604 L125.728 -197.5674 125.5459 -198.2324 125.5459 -198.4131 c125.5459 -198.4727 125.5859 -198.5127 125.6338 -198.5127 c125.8882 -198.5127 126.23 -197.7285 126.3809 -197.7285 c126.4282 -197.7285 126.4688 -197.7764 126.4688 -197.8359 c126.4688 -198.0449 126.1025 -198.5127 125.9834 -198.6416 c125.6812 -198.9893 125.2759 -199.3477 124.854 -199.3477 c124.584 -199.3477 124.4331 -199.1885 124.4331 -198.8398 c124.4331 -198.4521 124.52 -198.0449 124.6074 -197.6768 c124.7192 -197.1904 L124.6318 -197.3301 lf*U*u128.0898 -198.8301 m128.0576 -198.9189 128.0181 -199.0791 127.9541 -199.1396 c127.8516 -199.2471 127.5249 -199.2178 127.3979 -199.2178 c127.1831 -199.2178 L127.1113 -199.2178 126.9214 -199.2471 126.9214 -199.0986 c126.9214 -199.0576 126.9526 -198.9092 126.9604 -198.8594 c127.0166 -198.6318 L127.5171 -196.5156 L127.5645 -196.3262 127.6836 -195.8379 127.6836 -195.6396 c127.6836 -195.5703 127.6602 -195.4814 127.5889 -195.4814 c127.311 -195.4814 127.0327 -196.2363 126.8574 -196.2363 c126.8091 -196.2363 126.7622 -196.1855 126.7622 -196.1172 c126.7622 -195.9277 127.0557 -195.5596 127.1514 -195.4404 c127.4458 -195.0527 127.8745 -194.666 128.3203 -194.666 c128.5903 -194.666 128.7578 -194.835 128.7578 -195.1914 c128.7578 -195.5596 128.6777 -195.9785 128.6069 -196.3359 c128.5195 -196.7832 L128.9092 -195.998 129.394 -194.666 130.2524 -194.666 c130.562 -194.666 130.7939 -194.9834 130.7939 -195.3613 c130.7939 -195.7979 130.5469 -196.2754 130.1646 -196.2754 c129.8706 -196.2754 129.7754 -196.0771 129.751 -195.7393 c129.751 -195.6484 129.7358 -195.5508 129.6401 -195.5508 c129.3774 -195.5508 128.9487 -196.5039 128.8369 -196.7539 C128.0898 -198.8301 lf*U*u1 D135.332 -195.9785 m135.0625 -195.3516 L134.9438 -195.083 134.3872 -194.8057 134.0581 -194.8447 c133.1538 -194.9531 133.4229 -195.8291 133.8701 -196.0371 c134.2285 -196.2061 134.5757 -196.376 134.9331 -196.5439 c135.8184 -196.9717 135.8789 -198.0762 135.6094 -198.6211 c135.2422 -199.377 134.2773 -199.5254 133.4829 -199.2871 c133.2935 -199.2275 132.7969 -198.9805 132.6777 -199.3877 c132.4893 -199.3877 L132.4688 -197.7363 L132.687 -197.7568 L132.748 -197.9258 133.1157 -199.3281 134.2583 -199.0576 c134.9048 -198.9092 135.103 -198.2041 134.4463 -197.7861 c134.0684 -197.5479 133.6016 -197.4482 133.2549 -197.1904 c131.6538 -195.9873 132.8271 -194.5654 133.9302 -194.5264 c134.2378 -194.5156 134.6948 -194.585 134.9844 -194.6953 c135.1128 -194.7441 135.3218 -194.7646 135.3608 -194.5264 c135.54 -194.5264 L135.5493 -195.9785 L135.332 -195.9785 lf*U*u0 D139.0283 -198.3428 m138.7295 -198.9395 138.4121 -199.3877 137.5566 -199.3877 c137.0005 -199.3877 136.5435 -199.0381 136.5435 -198.5918 c136.5435 -195.1143 L136.0654 -195.1143 L136.0654 -194.835 L136.4238 -194.4971 136.9019 -194.0283 137.6758 -192.9854 c137.8955 -192.9854 L137.8955 -194.6455 L138.7998 -194.6455 L138.7998 -195.1143 L137.8955 -195.1143 L137.8955 -198.333 L137.8955 -198.7402 138.0737 -198.8193 138.1738 -198.8193 c138.3921 -198.8193 138.7295 -198.4424 138.8291 -198.2324 C139.0283 -198.3428 lf*U*u143.543 -196.832 m143.543 -198.7305 142.0781 -199.377 141.0938 -199.377 c139.8574 -199.377 138.644 -198.4932 138.644 -196.832 c138.644 -195.6104 139.4966 -194.5264 141.0938 -194.5264 c142.876 -194.5264 143.543 -195.8291 143.543 -196.832 cf1 D140.1855 -196.8115 m140.1855 -198.5215 140.415 -199.0488 141.0938 -199.0488 c141.8042 -199.0488 142.001 -198.4424 142.001 -196.8115 c142.001 -195.7393 141.9575 -194.7744 141.0938 -194.7744 c140.1646 -194.7744 140.1855 -195.9375 140.1855 -196.8115 cf*U*u0 D145.4561 -198.5127 m145.4561 -198.9805 145.7061 -199.0088 145.8838 -199.0088 c145.8838 -199.2178 L143.6777 -199.2178 L143.6777 -199.0088 L143.8564 -199.0088 144.1055 -198.9805 144.1055 -198.5127 c144.1055 -195.3516 L144.1055 -194.8838 143.8564 -194.8555 143.6777 -194.8555 c143.6777 -194.6455 L145.4561 -194.6455 L145.4561 -195.502 L145.4766 -195.502 L145.6055 -195.2422 145.9736 -194.5264 146.6689 -194.5264 c147.1455 -194.5264 147.6738 -194.7744 147.5039 -195.5303 c147.4043 -195.958 146.7686 -196.0957 146.4307 -195.6787 c146.251 -195.4512 146.2432 -195.252 145.873 -195.4307 c145.585 -195.5703 145.4561 -196.0371 145.4561 -196.3662 C145.4561 -198.5127 lf*U*u151.543 -198.2139 m151.0293 -199.0576 150.374 -199.3877 149.5215 -199.3877 c148.2744 -199.3877 147.2793 -198.5615 147.2793 -196.9121 c147.2793 -195.5801 148.2744 -194.5264 149.5859 -194.5264 c150.4824 -194.5264 151.5215 -195.291 151.5215 -196.5244 c151.5215 -196.8232 L148.7549 -196.8232 L148.7549 -196.9922 148.7451 -197.4189 149.0615 -198.0352 c149.4443 -198.79 150.0771 -198.7217 150.374 -198.6416 c150.8652 -198.5127 151.2363 -198.1943 151.3359 -198.0645 C151.543 -198.2139 lf1 D150.2305 -196.4258 m150.2305 -195.9375 150.2744 -195.502 150.1113 -195.1426 c149.9688 -194.835 149.3779 -194.6348 149.0176 -195.1523 c148.8428 -195.4111 148.7764 -195.8379 148.7549 -196.4258 C150.2305 -196.4258 lf*U*u1 0.72 0 0.06 k152.9053 -197.7676 m153.3984 -197.7676 153.8037 -198.1348 153.8037 -198.5811 c153.8037 -199.0293 153.3984 -199.3975 152.9053 -199.3975 c152.415 -199.3975 152.0098 -199.0293 152.0098 -198.5811 c152.0098 -198.1348 152.415 -197.7676 152.9053 -197.7676 cf*UU*u1 0.72 0 0.06 (PANTONE Reflex Blue CVC) 0 x0 D160.8369 -195.6611 m160.8369 -196.9863 160.0166 -197.8672 158.7852 -197.8672 c157.5449 -197.8672 156.7246 -196.9863 156.7246 -195.6611 c156.7246 -194.334 157.5449 -193.4551 158.7852 -193.4551 c160.0166 -193.4551 160.8369 -194.334 160.8369 -195.6611 cf1 D162.5068 -195.6611 m162.5068 -193.9209 161.2373 -191.9502 158.7852 -191.9502 c156.332 -191.9502 155.0537 -193.9111 155.0537 -195.6611 c155.0537 -197.5059 156.3984 -199.373 158.7852 -199.373 c161.123 -199.373 162.5068 -197.5166 162.5068 -195.6611 cf*U*u0 D165.0088 -195.0879 m165.4473 -194.5254 165.877 -194.293 166.4414 -194.293 c167.127 -194.293 168.0439 -194.7275 168.0439 -196.1709 c168.0439 -199.2764 L166.6602 -199.2764 L166.6602 -196.2969 L166.6602 -195.6074 166.3662 -195.3213 165.9727 -195.3213 c165.6299 -195.3213 165.3721 -195.5234 165.0088 -196.1279 c165.0088 -199.2764 L163.625 -199.2764 L163.625 -194.3877 L165.0088 -194.3877 L165.0088 -195.0879 lf*U*u170.6211 -199.2764 m169.2383 -199.2764 L169.2383 -192.0449 L170.6211 -192.0449 L170.6211 -199.2764 lf*U*u173.1514 -199.2764 m171.7676 -199.2764 L171.7676 -194.3877 L173.1514 -194.3877 L173.1514 -199.2764 lf1 D173.2168 -192.7979 m173.2168 -193.2637 172.875 -193.6465 172.4541 -193.6465 c172.0352 -193.6465 171.6924 -193.2637 171.6924 -192.7979 c171.6924 -192.3311 172.0352 -191.9502 172.4541 -191.9502 c172.875 -191.9502 173.2168 -192.3311 173.2168 -192.7979 cf*U*u0 D175.5762 -195.0879 m176.0146 -194.5254 176.4443 -194.293 177.0078 -194.293 c177.6943 -194.293 178.6094 -194.7275 178.6094 -196.1709 c178.6094 -199.2764 L177.2256 -199.2764 L177.2256 -196.2969 L177.2256 -195.6074 176.9316 -195.3213 176.5381 -195.3213 c176.1973 -195.3213 175.9395 -195.5234 175.5762 -196.1279 c175.5762 -199.2764 L174.1924 -199.2764 L174.1924 -194.3877 L175.5762 -194.3877 L175.5762 -195.0879 lf*U*u180.8643 -196.2754 m180.9199 -195.5977 181.2734 -195.2051 181.8164 -195.2051 c182.3525 -195.2051 182.7148 -195.6074 182.7715 -196.2754 c180.8643 -196.2754 Lf1 D183.916 -197.7598 m183.2686 -198.2793 182.8379 -198.4609 182.2852 -198.4609 c181.416 -198.4609 180.8818 -197.9512 180.834 -197.082 C183.9941 -197.082 l184.0605 -195.2998 183.001 -194.293 181.7227 -194.293 c180.3662 -194.293 179.4023 -195.3535 179.4023 -196.8496 c179.4023 -198.376 180.4043 -199.373 181.9512 -199.373 c182.2939 -199.373 183.125 -199.373 183.916 -198.7256 c183.916 -197.7598 Lf*U*u0 D185.4443 -197.8447 m185.9365 -197.8447 186.3428 -198.2129 186.3428 -198.6611 c186.3428 -199.1084 185.9365 -199.4766 185.4443 -199.4766 c184.9531 -199.4766 184.5488 -199.1084 184.5488 -198.6611 c184.5488 -198.2129 184.9531 -197.8447 185.4443 -197.8447 cf*ULB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get execAdobe_shading_AI8 /terminate get execAdobe_ColorImage_AI6 /terminate get execAGM_Gradient /terminate get execAdobe_cshow /terminate get execAdobe_level2_AI5 /terminate get exec%%EOF